

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jan 31 14:09:38 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16  0000                     
    17                           ; Version 2.35
    18                           ; Generated 05/05/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F45K20 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _INTCON3bits	set	4080
    53  0000                     _INTCON2bits	set	4081
    54  0000                     _INTCONbits	set	4082
    55  0000                     _ANSELH	set	3967
    56  0000                     _PORTD	set	3971
    57  0000                     _TRISBbits	set	3987
    58  0000                     _TRISD	set	3989
    59                           
    60                           ; #config settings
    61                           
    62                           	psect	cinit
    63  000068                     __pcinit:
    64                           	callstack 0
    65  000068                     start_initialization:
    66                           	callstack 0
    67  000068                     __initialization:
    68                           	callstack 0
    69                           
    70                           ; Clear objects allocated to BANK0 (1 bytes)
    71  000068  0100               	movlb	0
    72  00006A  6B60               	clrf	__pbssBANK0& (0+255),b
    73  00006C                     end_of_initialization:
    74                           	callstack 0
    75  00006C                     __end_of__initialization:
    76                           	callstack 0
    77  00006C  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    78  00006E  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    79  000070  0100               	movlb	0
    80  000072  EF2A  F000         	goto	_main	;jump to C main() function
    81                           
    82                           	psect	bssBANK0
    83  000060                     __pbssBANK0:
    84                           	callstack 0
    85  000060                     _g_nbInt0:
    86                           	callstack 0
    87  000060                     	ds	1
    88                           
    89                           	psect	cstackBANK0
    90  000000                     __pcstackBANK0:
    91                           	callstack 0
    92  000000                     
    93                           ; 1 bytes @ 0x0
    94 ;;
    95 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    96 ;;
    97 ;; *************** function _main *****************
    98 ;; Defined at:
    99 ;;		line 10 in file "main.c"
   100 ;; Parameters:    Size  Location     Type
   101 ;;		None
   102 ;; Auto vars:     Size  Location     Type
   103 ;;		None
   104 ;; Return value:  Size  Location     Type
   105 ;;                  1    wreg      void 
   106 ;; Registers used:
   107 ;;		wreg, status,2, cstack
   108 ;; Tracked objects:
   109 ;;		On entry : 0/0
   110 ;;		On exit  : 0/0
   111 ;;		Unchanged: 0/0
   112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   113 ;;      Params:         0       0       0       0       0       0       0
   114 ;;      Locals:         0       0       0       0       0       0       0
   115 ;;      Temps:          0       0       0       0       0       0       0
   116 ;;      Totals:         0       0       0       0       0       0       0
   117 ;;Total ram usage:        0 bytes
   118 ;; Hardware stack levels required when called: 2
   119 ;; This function calls:
   120 ;;		_initialisation
   121 ;; This function is called by:
   122 ;;		Startup code after reset
   123 ;; This function uses a non-reentrant model
   124 ;;
   125                           
   126                           	psect	text0
   127  000054                     __ptext0:
   128                           	callstack 0
   129  000054                     _main:
   130                           	callstack 29
   131  000054                     
   132                           ;main.c: 12:     initialisation();
   133  000054  EC1D  F000         	call	_initialisation	;wreg free
   134  000058                     
   135                           ;main.c: 13:     PORTD = 0;
   136  000058  0E00               	movlw	0
   137  00005A  6E83               	movwf	131,c	;volatile
   138  00005C                     l776:
   139                           
   140                           ;main.c: 15:     {;main.c: 16:         PORTD = g_nbInt0;
   141  00005C  C060  FF83         	movff	_g_nbInt0,3971	;volatile
   142  000060  EF2E  F000         	goto	l776
   143  000064  EF1B  F000         	goto	start
   144  000068                     __end_of_main:
   145                           	callstack 0
   146                           
   147 ;; *************** function _initialisation *****************
   148 ;; Defined at:
   149 ;;		line 23 in file "main.c"
   150 ;; Parameters:    Size  Location     Type
   151 ;;		None
   152 ;; Auto vars:     Size  Location     Type
   153 ;;		None
   154 ;; Return value:  Size  Location     Type
   155 ;;                  1    wreg      void 
   156 ;; Registers used:
   157 ;;		wreg, status,2
   158 ;; Tracked objects:
   159 ;;		On entry : 0/0
   160 ;;		On exit  : 0/0
   161 ;;		Unchanged: 0/0
   162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   163 ;;      Params:         0       0       0       0       0       0       0
   164 ;;      Locals:         0       0       0       0       0       0       0
   165 ;;      Temps:          0       0       0       0       0       0       0
   166 ;;      Totals:         0       0       0       0       0       0       0
   167 ;;Total ram usage:        0 bytes
   168 ;; Hardware stack levels used: 1
   169 ;; Hardware stack levels required when called: 1
   170 ;; This function calls:
   171 ;;		Nothing
   172 ;; This function is called by:
   173 ;;		_main
   174 ;; This function uses a non-reentrant model
   175 ;;
   176                           
   177                           	psect	text1
   178  00003A                     __ptext1:
   179                           	callstack 0
   180  00003A                     _initialisation:
   181                           	callstack 29
   182  00003A                     
   183                           ;main.c: 26:     TRISD = 0;
   184  00003A  0E00               	movlw	0
   185  00003C  6E95               	movwf	149,c	;volatile
   186                           
   187                           ;main.c: 29:     ANSELH = 0;
   188  00003E  0E00               	movlw	0
   189  000040  6E7F               	movwf	127,c	;volatile
   190  000042                     
   191                           ;main.c: 30:     TRISBbits.RB0 = 1;
   192  000042  8093               	bsf	147,0,c	;volatile
   193  000044                     
   194                           ;main.c: 33:     INTCONbits.GIE = 1;
   195  000044  8EF2               	bsf	242,7,c	;volatile
   196  000046                     
   197                           ;main.c: 36:     INTCONbits.INT0IF = 0;
   198  000046  92F2               	bcf	242,1,c	;volatile
   199  000048                     
   200                           ;main.c: 37:     INTCONbits.INT0IE = 1;
   201  000048  88F2               	bsf	242,4,c	;volatile
   202  00004A                     
   203                           ;main.c: 38:     INTCON2bits.INTEDG0 = 0;
   204  00004A  9CF1               	bcf	241,6,c	;volatile
   205  00004C                     
   206                           ;main.c: 41:     INTCON3bits.INT1IF = 0;
   207  00004C  90F0               	bcf	240,0,c	;volatile
   208  00004E                     
   209                           ;main.c: 42:     INTCON3bits.INT1IE = 1;
   210  00004E  86F0               	bsf	240,3,c	;volatile
   211  000050                     
   212                           ;main.c: 43:     INTCON2bits.INTEDG1 = 0;
   213  000050  9AF1               	bcf	241,5,c	;volatile
   214  000052  0012               	return		;funcret
   215  000054                     __end_of_initialisation:
   216                           	callstack 0
   217                           
   218 ;; *************** function _high_isr *****************
   219 ;; Defined at:
   220 ;;		line 7 in file "interrupts.c"
   221 ;; Parameters:    Size  Location     Type
   222 ;;		None
   223 ;; Auto vars:     Size  Location     Type
   224 ;;		None
   225 ;; Return value:  Size  Location     Type
   226 ;;                  1    wreg      void 
   227 ;; Registers used:
   228 ;;		status,2, status,0
   229 ;; Tracked objects:
   230 ;;		On entry : 0/0
   231 ;;		On exit  : 0/0
   232 ;;		Unchanged: 0/0
   233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   234 ;;      Params:         0       0       0       0       0       0       0
   235 ;;      Locals:         0       0       0       0       0       0       0
   236 ;;      Temps:          0       0       0       0       0       0       0
   237 ;;      Totals:         0       0       0       0       0       0       0
   238 ;;Total ram usage:        0 bytes
   239 ;; Hardware stack levels used: 1
   240 ;; This function calls:
   241 ;;		Nothing
   242 ;; This function is called by:
   243 ;;		Interrupt level 2
   244 ;; This function uses a non-reentrant model
   245 ;;
   246                           
   247                           	psect	intcode
   248  000008                     __pintcode:
   249                           	callstack 0
   250  000008                     _high_isr:
   251                           	callstack 29
   252                           
   253                           ;incstack = 0
   254  000008  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   255  00000A                     
   256                           ;interrupts.c: 9:     if(INTCONbits.INT0IF)
   257  00000A  A2F2               	btfss	242,1,c	;volatile
   258  00000C  EF0A  F000         	goto	i2u3_41
   259  000010  EF0C  F000         	goto	i2u3_40
   260  000014                     i2u3_41:
   261  000014  EF0F  F000         	goto	i2l784
   262  000018                     i2u3_40:
   263  000018                     
   264                           ;interrupts.c: 10:     {;interrupts.c: 11:         g_nbInt0++;
   265  000018  0100               	movlb	0	; force () banked
   266  00001A  2B60               	incf	_g_nbInt0& (0+255),f,b
   267  00001C                     
   268                           ; BSR set to: 0
   269                           ;interrupts.c: 12:         INTCONbits.INT0IF = 0;
   270  00001C  92F2               	bcf	242,1,c	;volatile
   271  00001E                     i2l784:
   272                           
   273                           ;interrupts.c: 15:     if(INTCON3bits.INT1IF)
   274  00001E  A0F0               	btfss	240,0,c	;volatile
   275  000020  EF14  F000         	goto	i2u4_41
   276  000024  EF16  F000         	goto	i2u4_40
   277  000028                     i2u4_41:
   278  000028  EF19  F000         	goto	i2l42
   279  00002C                     i2u4_40:
   280  00002C                     
   281                           ;interrupts.c: 16:     {;interrupts.c: 17:         g_nbInt0--;
   282  00002C  0100               	movlb	0	; force () banked
   283  00002E  0760               	decf	_g_nbInt0& (0+255),f,b
   284  000030                     
   285                           ; BSR set to: 0
   286                           ;interrupts.c: 18:         INTCON3bits.INT1IF = 0;
   287  000030  90F0               	bcf	240,0,c	;volatile
   288  000032                     i2l42:
   289  000032  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   290  000034  0011               	retfie		f
   291  000036                     __end_of_high_isr:
   292                           	callstack 0
   293  0000                     
   294                           	psect	param0
   295  0000                     
   296                           	psect	temp
   297  000001                     btemp:
   298                           	callstack 0
   299  000001                     	ds	1
   300  0000                     int$flags	set	btemp
   301  0000                     wtemp8	set	btemp+1
   302  0000                     ttemp5	set	btemp+1
   303  0000                     ttemp6	set	btemp+4
   304  0000                     ttemp7	set	btemp+8
   305                           
   306                           	psect	idloc
   307                           
   308                           ;Config register IDLOC0 @ 0x200000
   309                           ;	unspecified, using default values
   310  200000                     	org	2097152
   311  200000  FF                 	db	255
   312                           
   313                           ;Config register IDLOC1 @ 0x200001
   314                           ;	unspecified, using default values
   315  200001                     	org	2097153
   316  200001  FF                 	db	255
   317                           
   318                           ;Config register IDLOC2 @ 0x200002
   319                           ;	unspecified, using default values
   320  200002                     	org	2097154
   321  200002  FF                 	db	255
   322                           
   323                           ;Config register IDLOC3 @ 0x200003
   324                           ;	unspecified, using default values
   325  200003                     	org	2097155
   326  200003  FF                 	db	255
   327                           
   328                           ;Config register IDLOC4 @ 0x200004
   329                           ;	unspecified, using default values
   330  200004                     	org	2097156
   331  200004  FF                 	db	255
   332                           
   333                           ;Config register IDLOC5 @ 0x200005
   334                           ;	unspecified, using default values
   335  200005                     	org	2097157
   336  200005  FF                 	db	255
   337                           
   338                           ;Config register IDLOC6 @ 0x200006
   339                           ;	unspecified, using default values
   340  200006                     	org	2097158
   341  200006  FF                 	db	255
   342                           
   343                           ;Config register IDLOC7 @ 0x200007
   344                           ;	unspecified, using default values
   345  200007                     	org	2097159
   346  200007  FF                 	db	255
   347                           
   348                           	psect	config
   349                           
   350                           ; Padding undefined space
   351  300000                     	org	3145728
   352  300000  FF                 	db	255
   353                           
   354                           ;Config register CONFIG1H @ 0x300001
   355                           ;	Oscillator Selection bits
   356                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   357                           ;	Fail-Safe Clock Monitor Enable bit
   358                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   359                           ;	Internal/External Oscillator Switchover bit
   360                           ;	IESO = OFF, Oscillator Switchover mode disabled
   361  300001                     	org	3145729
   362  300001  08                 	db	8
   363                           
   364                           ;Config register CONFIG2L @ 0x300002
   365                           ;	Power-up Timer Enable bit
   366                           ;	PWRT = OFF, PWRT disabled
   367                           ;	Brown-out Reset Enable bits
   368                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   369                           ;	Brown Out Reset Voltage bits
   370                           ;	BORV = 18, VBOR set to 1.8 V nominal
   371  300002                     	org	3145730
   372  300002  1F                 	db	31
   373                           
   374                           ;Config register CONFIG2H @ 0x300003
   375                           ;	Watchdog Timer Enable bit
   376                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   377                           ;	Watchdog Timer Postscale Select bits
   378                           ;	WDTPS = 32768, 1:32768
   379  300003                     	org	3145731
   380  300003  1E                 	db	30
   381                           
   382                           ; Padding undefined space
   383  300004                     	org	3145732
   384  300004  FF                 	db	255
   385                           
   386                           ;Config register CONFIG3H @ 0x300005
   387                           ;	CCP2 MUX bit
   388                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   389                           ;	PORTB A/D Enable bit
   390                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   391                           ;	Low-Power Timer1 Oscillator Enable bit
   392                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   393                           ;	HFINTOSC Fast Start-up
   394                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
   395                           ;	MCLR Pin Enable bit
   396                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   397  300005                     	org	3145733
   398  300005  8B                 	db	139
   399                           
   400                           ;Config register CONFIG4L @ 0x300006
   401                           ;	Stack Full/Underflow Reset Enable bit
   402                           ;	STVREN = ON, Stack full/underflow will cause Reset
   403                           ;	Single-Supply ICSP Enable bit
   404                           ;	LVP = OFF, Single-Supply ICSP disabled
   405                           ;	Extended Instruction Set Enable bit
   406                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   407                           ;	Background Debugger Enable bit
   408                           ;	DEBUG = 0x1, unprogrammed default
   409  300006                     	org	3145734
   410  300006  81                 	db	129
   411                           
   412                           ; Padding undefined space
   413  300007                     	org	3145735
   414  300007  FF                 	db	255
   415                           
   416                           ;Config register CONFIG5L @ 0x300008
   417                           ;	Code Protection Block 0
   418                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   419                           ;	Code Protection Block 1
   420                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   421                           ;	Code Protection Block 2
   422                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   423                           ;	Code Protection Block 3
   424                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   425  300008                     	org	3145736
   426  300008  0F                 	db	15
   427                           
   428                           ;Config register CONFIG5H @ 0x300009
   429                           ;	Boot Block Code Protection bit
   430                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   431                           ;	Data EEPROM Code Protection bit
   432                           ;	CPD = OFF, Data EEPROM not code-protected
   433  300009                     	org	3145737
   434  300009  C0                 	db	192
   435                           
   436                           ;Config register CONFIG6L @ 0x30000A
   437                           ;	Write Protection Block 0
   438                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   439                           ;	Write Protection Block 1
   440                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   441                           ;	Write Protection Block 2
   442                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   443                           ;	Write Protection Block 3
   444                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   445  30000A                     	org	3145738
   446  30000A  0F                 	db	15
   447                           
   448                           ;Config register CONFIG6H @ 0x30000B
   449                           ;	Configuration Register Write Protection bit
   450                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   451                           ;	Boot Block Write Protection bit
   452                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   453                           ;	Data EEPROM Write Protection bit
   454                           ;	WRTD = OFF, Data EEPROM not write-protected
   455  30000B                     	org	3145739
   456  30000B  E0                 	db	224
   457                           
   458                           ;Config register CONFIG7L @ 0x30000C
   459                           ;	Table Read Protection Block 0
   460                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   461                           ;	Table Read Protection Block 1
   462                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   463                           ;	Table Read Protection Block 2
   464                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   465                           ;	Table Read Protection Block 3
   466                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   467  30000C                     	org	3145740
   468  30000C  0F                 	db	15
   469                           
   470                           ;Config register CONFIG7H @ 0x30000D
   471                           ;	Boot Block Table Read Protection bit
   472                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   473  30000D                     	org	3145741
   474  30000D  40                 	db	64
   475                           tosu	equ	0xFFF
   476                           tosh	equ	0xFFE
   477                           tosl	equ	0xFFD
   478                           stkptr	equ	0xFFC
   479                           pclatu	equ	0xFFB
   480                           pclath	equ	0xFFA
   481                           pcl	equ	0xFF9
   482                           tblptru	equ	0xFF8
   483                           tblptrh	equ	0xFF7
   484                           tblptrl	equ	0xFF6
   485                           tablat	equ	0xFF5
   486                           prodh	equ	0xFF4
   487                           prodl	equ	0xFF3
   488                           indf0	equ	0xFEF
   489                           postinc0	equ	0xFEE
   490                           postdec0	equ	0xFED
   491                           preinc0	equ	0xFEC
   492                           plusw0	equ	0xFEB
   493                           fsr0h	equ	0xFEA
   494                           fsr0l	equ	0xFE9
   495                           wreg	equ	0xFE8
   496                           indf1	equ	0xFE7
   497                           postinc1	equ	0xFE6
   498                           postdec1	equ	0xFE5
   499                           preinc1	equ	0xFE4
   500                           plusw1	equ	0xFE3
   501                           fsr1h	equ	0xFE2
   502                           fsr1l	equ	0xFE1
   503                           bsr	equ	0xFE0
   504                           indf2	equ	0xFDF
   505                           postinc2	equ	0xFDE
   506                           postdec2	equ	0xFDD
   507                           preinc2	equ	0xFDC
   508                           plusw2	equ	0xFDB
   509                           fsr2h	equ	0xFDA
   510                           fsr2l	equ	0xFD9
   511                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160      0       1
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                     _initialisation
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            EF      0       0      13        0.0%
BANK5               EF      0       0      14        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       1       4        0.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
BITBIGSFR_1         37      0       0      19        0.0%
BITBIGSFRll         1F      0       0      24        0.0%
BITBIGSFRhll         F      0       0      22        0.0%
BITBIGSFR_5h         9      0       0      15        0.0%
BITBIGSFRhh          6      0       0      20        0.0%
BITBIGSFR_2          6      0       0      18        0.0%
BITBIGSFRlh          3      0       0      23        0.0%
BITBIGSFR_4          3      0       0      16        0.0%
BITBIGSFR_3          3      0       0      17        0.0%
BITBIGSFRhlh         1      0       0      21        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       1      25        0.0%
DATA                 0      0       1      27        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jan 31 14:09:38 2023

                     l29 0052                      l760 0046                      l770 0050  
                    l762 0048                      l754 003A                      l764 004A  
                    l756 0042                      l772 0054                      l766 004C  
                    l758 0044                      l774 0058                      l768 004E  
                    l776 005C                     i2l42 0032         ??_initialisation 0000  
                   _main 0054                     btemp 0001                     start 0036  
           ___param_bank 000000                    ?_main 0000                    i2l780 0018  
                  i2l782 001C                    i2l784 001E                    i2l786 002C  
                  i2l778 000A                    i2l788 0030                    _PORTD 000F83  
                  _TRISD 000F95                    ttemp5 0002                    ttemp6 0005  
                  ttemp7 0009                    wtemp8 0002          __initialization 0068  
           __end_of_main 0068                   ??_main 0000            __activetblptr 000003  
                 _ANSELH 000F7F                   i2u3_40 0018                   i2u3_41 0014  
                 i2u4_40 002C                   i2u4_41 0028         __end_of_high_isr 0036  
                 isa$std 000001               __accesstop 0060  __end_of__initialization 006C  
          ___rparam_used 000000               __pbssBANK0 0060                ?_high_isr 0000  
                __Hparam 0000                  __Lparam 0000                  __pcinit 0068  
                __ramtop 0600                  __ptext0 0054                  __ptext1 003A  
             ??_high_isr 0000     end_of_initialization 006C                _TRISBbits 000F93  
    start_initialization 0068            __pcstackBANK0 0000                __pintcode 0008  
         _initialisation 003A   __end_of_initialisation 0054              _INTCON2bits 000FF1  
            _INTCON3bits 000FF0                 __Hparam0 0000                 __Lparam0 0000  
        ?_initialisation 0000                 _g_nbInt0 0060                 _high_isr 0008  
               isa$xinst 000000                 int$flags 0001               _INTCONbits 000FF2  
               intlevel2 0000  
