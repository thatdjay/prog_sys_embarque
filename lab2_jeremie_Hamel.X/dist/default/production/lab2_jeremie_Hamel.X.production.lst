

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Feb 02 14:21:28 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F458
     2                           	fnconf	param0,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec,minocg
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,minocg
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,minocg
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2,minocg
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2,minocg
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2,minocg
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2,minocg
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2,minocg
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1,minocg
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45  0000                     
    46                           ; Version 2.40
    47                           ; Generated 17/11/2021 GMT
    48                           ; 
    49                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F458 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	idataBIGRAM
    83  00103C                     __pidataBIGRAM:
    84                           	callstack 0
    85                           
    86                           ;initializer for _listeUsager
    87  00103C  4D                 	db	77
    88  00103D  72                 	db	114
    89  00103E  20                 	db	32
    90  00103F  5A                 	db	90
    91  001040  65                 	db	101
    92  001041  72                 	db	114
    93  001042  6F                 	db	111
    94  001043  00                 	db	0
    95  001044  00                 	db	0
    96  001045  00                 	db	0
    97  001046  00                 	db	0
    98  001047  00                 	db	0
    99  001048  00                 	db	0
   100  001049  00                 	db	0
   101  00104A  00                 	db	0
   102  00104B  00                 	db	0
   103  00104C  00                 	db	0
   104  00104D  00                 	db	0
   105  00104E  00                 	db	0
   106  00104F  00                 	db	0
   107  001050  00                 	db	0
   108  001051  00                 	db	0
   109  001052  00                 	db	0
   110  001053  00                 	db	0
   111  001054  00                 	db	0
   112  001055  4D                 	db	77
   113  001056  72                 	db	114
   114  001057  20                 	db	32
   115  001058  55                 	db	85
   116  001059  6E                 	db	110
   117  00105A  00                 	db	0
   118  00105B  00                 	db	0
   119  00105C  00                 	db	0
   120  00105D  00                 	db	0
   121  00105E  00                 	db	0
   122  00105F  00                 	db	0
   123  001060  00                 	db	0
   124  001061  00                 	db	0
   125  001062  00                 	db	0
   126  001063  00                 	db	0
   127  001064  00                 	db	0
   128  001065  00                 	db	0
   129  001066  00                 	db	0
   130  001067  00                 	db	0
   131  001068  00                 	db	0
   132  001069  31                 	db	49
   133  00106A  00                 	db	0
   134  00106B  00                 	db	0
   135  00106C  00                 	db	0
   136  00106D  00                 	db	0
   137  00106E  4D                 	db	77
   138  00106F  6D                 	db	109
   139  001070  65                 	db	101
   140  001071  20                 	db	32
   141  001072  44                 	db	68
   142  001073  65                 	db	101
   143  001074  75                 	db	117
   144  001075  78                 	db	120
   145  001076  00                 	db	0
   146  001077  00                 	db	0
   147  001078  00                 	db	0
   148  001079  00                 	db	0
   149  00107A  00                 	db	0
   150  00107B  00                 	db	0
   151  00107C  00                 	db	0
   152  00107D  00                 	db	0
   153  00107E  00                 	db	0
   154  00107F  00                 	db	0
   155  001080  00                 	db	0
   156  001081  00                 	db	0
   157  001082  32                 	db	50
   158  001083  32                 	db	50
   159  001084  00                 	db	0
   160  001085  00                 	db	0
   161  001086  00                 	db	0
   162  001087  4D                 	db	77
   163  001088  72                 	db	114
   164  001089  20                 	db	32
   165  00108A  54                 	db	84
   166  00108B  72                 	db	114
   167  00108C  6F                 	db	111
   168  00108D  69                 	db	105
   169  00108E  73                 	db	115
   170  00108F  00                 	db	0
   171  001090  00                 	db	0
   172  001091  00                 	db	0
   173  001092  00                 	db	0
   174  001093  00                 	db	0
   175  001094  00                 	db	0
   176  001095  00                 	db	0
   177  001096  00                 	db	0
   178  001097  00                 	db	0
   179  001098  00                 	db	0
   180  001099  00                 	db	0
   181  00109A  00                 	db	0
   182  00109B  33                 	db	51
   183  00109C  33                 	db	51
   184  00109D  33                 	db	51
   185  00109E  00                 	db	0
   186  00109F  00                 	db	0
   187  0010A0  4D                 	db	77
   188  0010A1  72                 	db	114
   189  0010A2  20                 	db	32
   190  0010A3  51                 	db	81
   191  0010A4  75                 	db	117
   192  0010A5  61                 	db	97
   193  0010A6  74                 	db	116
   194  0010A7  72                 	db	114
   195  0010A8  65                 	db	101
   196  0010A9  00                 	db	0
   197  0010AA  00                 	db	0
   198  0010AB  00                 	db	0
   199  0010AC  00                 	db	0
   200  0010AD  00                 	db	0
   201  0010AE  00                 	db	0
   202  0010AF  00                 	db	0
   203  0010B0  00                 	db	0
   204  0010B1  00                 	db	0
   205  0010B2  00                 	db	0
   206  0010B3  00                 	db	0
   207  0010B4  34                 	db	52
   208  0010B5  34                 	db	52
   209  0010B6  34                 	db	52
   210  0010B7  34                 	db	52
   211  0010B8  00                 	db	0
   212  0010B9  4D                 	db	77
   213  0010BA  6D                 	db	109
   214  0010BB  65                 	db	101
   215  0010BC  20                 	db	32
   216  0010BD  4E                 	db	78
   217  0010BE  6F                 	db	111
   218  0010BF  35                 	db	53
   219  0010C0  20                 	db	32
   220  0010C1  00                 	db	0
   221  0010C2  00                 	db	0
   222  0010C3  00                 	db	0
   223  0010C4  00                 	db	0
   224  0010C5  00                 	db	0
   225  0010C6  00                 	db	0
   226  0010C7  00                 	db	0
   227  0010C8  00                 	db	0
   228  0010C9  00                 	db	0
   229  0010CA  00                 	db	0
   230  0010CB  00                 	db	0
   231  0010CC  00                 	db	0
   232  0010CD  35                 	db	53
   233  0010CE  00                 	db	0
   234  0010CF  00                 	db	0
   235  0010D0  00                 	db	0
   236  0010D1  00                 	db	0
   237  0010D2  4D                 	db	77
   238  0010D3  72                 	db	114
   239  0010D4  20                 	db	32
   240  0010D5  4E                 	db	78
   241  0010D6  6F                 	db	111
   242  0010D7  36                 	db	54
   243  0010D8  00                 	db	0
   244  0010D9  00                 	db	0
   245  0010DA  00                 	db	0
   246  0010DB  00                 	db	0
   247  0010DC  00                 	db	0
   248  0010DD  00                 	db	0
   249  0010DE  00                 	db	0
   250  0010DF  00                 	db	0
   251  0010E0  00                 	db	0
   252  0010E1  00                 	db	0
   253  0010E2  00                 	db	0
   254  0010E3  00                 	db	0
   255  0010E4  00                 	db	0
   256  0010E5  00                 	db	0
   257  0010E6  36                 	db	54
   258  0010E7  00                 	db	0
   259  0010E8  00                 	db	0
   260  0010E9  00                 	db	0
   261  0010EA  00                 	db	0
   262  0010EB  4D                 	db	77
   263  0010EC  6D                 	db	109
   264  0010ED  65                 	db	101
   265  0010EE  20                 	db	32
   266  0010EF  4E                 	db	78
   267  0010F0  6F                 	db	111
   268  0010F1  37                 	db	55
   269  0010F2  00                 	db	0
   270  0010F3  00                 	db	0
   271  0010F4  00                 	db	0
   272  0010F5  00                 	db	0
   273  0010F6  00                 	db	0
   274  0010F7  00                 	db	0
   275  0010F8  00                 	db	0
   276  0010F9  00                 	db	0
   277  0010FA  00                 	db	0
   278  0010FB  00                 	db	0
   279  0010FC  00                 	db	0
   280  0010FD  00                 	db	0
   281  0010FE  00                 	db	0
   282  0010FF  37                 	db	55
   283  001100  00                 	db	0
   284  001101  00                 	db	0
   285  001102  00                 	db	0
   286  001103  00                 	db	0
   287  001104  4D                 	db	77
   288  001105  72                 	db	114
   289  001106  20                 	db	32
   290  001107  4E                 	db	78
   291  001108  6F                 	db	111
   292  001109  38                 	db	56
   293  00110A  00                 	db	0
   294  00110B  00                 	db	0
   295  00110C  00                 	db	0
   296  00110D  00                 	db	0
   297  00110E  00                 	db	0
   298  00110F  00                 	db	0
   299  001110  00                 	db	0
   300  001111  00                 	db	0
   301  001112  00                 	db	0
   302  001113  00                 	db	0
   303  001114  00                 	db	0
   304  001115  00                 	db	0
   305  001116  00                 	db	0
   306  001117  00                 	db	0
   307  001118  38                 	db	56
   308  001119  00                 	db	0
   309  00111A  00                 	db	0
   310  00111B  00                 	db	0
   311  00111C  00                 	db	0
   312  00111D  4D                 	db	77
   313  00111E  6D                 	db	109
   314  00111F  65                 	db	101
   315  001120  20                 	db	32
   316  001121  4E                 	db	78
   317  001122  6F                 	db	111
   318  001123  39                 	db	57
   319  001124  00                 	db	0
   320  001125  00                 	db	0
   321  001126  00                 	db	0
   322  001127  00                 	db	0
   323  001128  00                 	db	0
   324  001129  00                 	db	0
   325  00112A  00                 	db	0
   326  00112B  00                 	db	0
   327  00112C  00                 	db	0
   328  00112D  00                 	db	0
   329  00112E  00                 	db	0
   330  00112F  00                 	db	0
   331  001130  00                 	db	0
   332  001131  39                 	db	57
   333  001132  00                 	db	0
   334  001133  00                 	db	0
   335  001134  00                 	db	0
   336  001135  00                 	db	0
   337  001136  4D                 	db	77
   338  001137  72                 	db	114
   339  001138  20                 	db	32
   340  001139  4E                 	db	78
   341  00113A  6F                 	db	111
   342  00113B  31                 	db	49
   343  00113C  30                 	db	48
   344  00113D  00                 	db	0
   345  00113E  00                 	db	0
   346  00113F  00                 	db	0
   347  001140  00                 	db	0
   348  001141  00                 	db	0
   349  001142  00                 	db	0
   350  001143  00                 	db	0
   351  001144  00                 	db	0
   352  001145  00                 	db	0
   353  001146  00                 	db	0
   354  001147  00                 	db	0
   355  001148  00                 	db	0
   356  001149  00                 	db	0
   357  00114A  31                 	db	49
   358  00114B  30                 	db	48
   359  00114C  00                 	db	0
   360  00114D  00                 	db	0
   361  00114E  00                 	db	0
   362  00114F  4D                 	db	77
   363  001150  6D                 	db	109
   364  001151  65                 	db	101
   365  001152  20                 	db	32
   366  001153  4E                 	db	78
   367  001154  6F                 	db	111
   368  001155  31                 	db	49
   369  001156  31                 	db	49
   370  001157  00                 	db	0
   371  001158  00                 	db	0
   372  001159  00                 	db	0
   373  00115A  00                 	db	0
   374  00115B  00                 	db	0
   375  00115C  00                 	db	0
   376  00115D  00                 	db	0
   377  00115E  00                 	db	0
   378  00115F  00                 	db	0
   379  001160  00                 	db	0
   380  001161  00                 	db	0
   381  001162  00                 	db	0
   382  001163  31                 	db	49
   383  001164  31                 	db	49
   384  001165  00                 	db	0
   385  001166  00                 	db	0
   386  001167  00                 	db	0
   387                           
   388                           	psect	idataBANK0
   389  0018E4                     __pidataBANK0:
   390                           	callstack 0
   391                           
   392                           ;initializer for _matCGRAM
   393  0018E4  08                 	db	8
   394  0018E5  04                 	db	4
   395  0018E6  04                 	db	4
   396  0018E7  0A                 	db	10
   397  0018E8  11                 	db	17
   398  0018E9  1F                 	db	31
   399  0018EA  11                 	db	17
   400  0018EB  00                 	db	0
   401  0018EC  02                 	db	2
   402  0018ED  04                 	db	4
   403  0018EE  0E                 	db	14
   404  0018EF  11                 	db	17
   405  0018F0  1F                 	db	31
   406  0018F1  10                 	db	16
   407  0018F2  0E                 	db	14
   408  0018F3  00                 	db	0
   409  0018F4  02                 	db	2
   410  0018F5  04                 	db	4
   411  0018F6  1F                 	db	31
   412  0018F7  10                 	db	16
   413  0018F8  1E                 	db	30
   414  0018F9  10                 	db	16
   415  0018FA  1F                 	db	31
   416  0018FB  00                 	db	0
   417  0018FC  08                 	db	8
   418  0018FD  04                 	db	4
   419  0018FE  0E                 	db	14
   420  0018FF  11                 	db	17
   421  001900  1F                 	db	31
   422  001901  10                 	db	16
   423  001902  0E                 	db	14
   424  001903  00                 	db	0
   425  001904  08                 	db	8
   426  001905  04                 	db	4
   427  001906  1F                 	db	31
   428  001907  10                 	db	16
   429  001908  1E                 	db	30
   430  001909  10                 	db	16
   431  00190A  1F                 	db	31
   432  00190B  00                 	db	0
   433  00190C  04                 	db	4
   434  00190D  0A                 	db	10
   435  00190E  0E                 	db	14
   436  00190F  11                 	db	17
   437  001910  1F                 	db	31
   438  001911  10                 	db	16
   439  001912  0E                 	db	14
   440  001913  00                 	db	0
   441  001914  08                 	db	8
   442  001915  04                 	db	4
   443  001916  0E                 	db	14
   444  001917  01                 	db	1
   445  001918  0F                 	db	15
   446  001919  11                 	db	17
   447  00191A  0F                 	db	15
   448  00191B  00                 	db	0
   449  00191C  04                 	db	4
   450  00191D  0A                 	db	10
   451  00191E  0E                 	db	14
   452  00191F  01                 	db	1
   453  001920  0F                 	db	15
   454  001921  11                 	db	17
   455  001922  0F                 	db	15
   456  001923  00                 	db	0
   457  0000                     _RCREG	set	4014
   458  0000                     _TXREG	set	4013
   459  0000                     _TRISC	set	3988
   460  0000                     _TRISD	set	3989
   461  0000                     _ADCON1	set	4033
   462  0000                     _TRISB	set	3987
   463  0000                     _TRISCbits	set	3988
   464  0000                     _PORTAbits	set	3968
   465  0000                     _PORTA	set	3968
   466  0000                     _PORTDbits	set	3971
   467  0000                     _PORTCbits	set	3970
   468  0000                     _TRISA	set	3986
   469  0000                     _PORTBbits	set	3969
   470  0000                     _RCSTAbits	set	4011
   471  0000                     _TXSTAbits	set	4012
   472  0000                     _SPBRG	set	4015
   473  0000                     _RCIF	set	31989
   474                           
   475                           	psect	smallconst
   476  000600                     __psmallconst:
   477                           	callstack 0
   478  000600  00                 	db	0
   479  000601                     STR_3:
   480                           
   481                           ; BSR set to: 0
   482  000601  45                 	db	69	;'E'
   483  000602  6E                 	db	110	;'n'
   484  000603  74                 	db	116	;'t'
   485  000604  72                 	db	114	;'r'
   486  000605  65                 	db	101	;'e'
   487  000606  7A                 	db	122	;'z'
   488  000607  20                 	db	32
   489  000608  76                 	db	118	;'v'
   490  000609  6F                 	db	111	;'o'
   491  00060A  74                 	db	116	;'t'
   492  00060B  72                 	db	114	;'r'
   493  00060C  65                 	db	101	;'e'
   494  00060D  20                 	db	32
   495  00060E  6E                 	db	110	;'n'
   496  00060F  6F                 	db	111	;'o'
   497  000610  20                 	db	32
   498  000611  64                 	db	100	;'d'
   499  000612  27                 	db	39
   500  000613  65                 	db	101	;'e'
   501  000614  74                 	db	116	;'t'
   502  000615  75                 	db	117	;'u'
   503  000616  64                 	db	100	;'d'
   504  000617  69                 	db	105	;'i'
   505  000618  61                 	db	97	;'a'
   506  000619  6E                 	db	110	;'n'
   507  00061A  74                 	db	116	;'t'
   508  00061B  00                 	db	0
   509  00061C                     STR_5:
   510                           
   511                           ; BSR set to: 0
   512  00061C  45                 	db	69	;'E'
   513  00061D  6E                 	db	110	;'n'
   514  00061E  74                 	db	116	;'t'
   515  00061F  72                 	db	114	;'r'
   516  000620  65                 	db	101	;'e'
   517  000621  7A                 	db	122	;'z'
   518  000622  20                 	db	32
   519  000623  76                 	db	118	;'v'
   520  000624  6F                 	db	111	;'o'
   521  000625  74                 	db	116	;'t'
   522  000626  72                 	db	114	;'r'
   523  000627  65                 	db	101	;'e'
   524  000628  20                 	db	32
   525  000629  4E                 	db	78	;'N'
   526  00062A  49                 	db	73	;'I'
   527  00062B  50                 	db	80	;'P'
   528  00062C  00                 	db	0
   529  00062D                     STR_1:
   530                           
   531                           ; BSR set to: 0
   532  00062D  61                 	db	97	;'a'
   533  00062E  63                 	db	99	;'c'
   534  00062F  63                 	db	99	;'c'
   535  000630  65                 	db	101	;'e'
   536  000631  73                 	db	115	;'s'
   537  000632  20                 	db	32
   538  000633  6C                 	db	108	;'l'
   539  000634  6F                 	db	111	;'o'
   540  000635  63                 	db	99	;'c'
   541  000636  61                 	db	97	;'a'
   542  000637  6C                 	db	108	;'l'
   543  000638  20                 	db	32
   544  000639  32                 	db	50	;'2'
   545  00063A  38                 	db	56	;'8'
   546  00063B  33                 	db	51	;'3'
   547  00063C  00                 	db	0
   548  00063D                     STR_9:
   549                           
   550                           ; BSR set to: 0
   551  00063D  61                 	db	97	;'a'
   552  00063E  63                 	db	99	;'c'
   553  00063F  63                 	db	99	;'c'
   554  000640  65                 	db	101	;'e'
   555  000641  73                 	db	115	;'s'
   556  000642  20                 	db	32
   557  000643  72                 	db	114	;'r'
   558  000644  65                 	db	101	;'e'
   559  000645  66                 	db	102	;'f'
   560  000646  75                 	db	117	;'u'
   561  000647  73                 	db	115	;'s'
   562  000648  65                 	db	101	;'e'
   563  000649  00                 	db	0
   564  00064A                     STR_7:
   565                           
   566                           ; BSR set to: 0
   567  00064A  42                 	db	66	;'B'
   568  00064B  6F                 	db	111	;'o'
   569  00064C  6E                 	db	110	;'n'
   570  00064D  6A                 	db	106	;'j'
   571  00064E  6F                 	db	111	;'o'
   572  00064F  75                 	db	117	;'u'
   573  000650  72                 	db	114	;'r'
   574  000651  20                 	db	32
   575  000652  00                 	db	0
   576  000653                     STR_2:
   577                           
   578                           ; BSR set to: 0
   579  000653  3C                 	db	60	;'<'
   580  000654  45                 	db	69	;'E'
   581  000655  6E                 	db	110	;'n'
   582  000656  74                 	db	116	;'t'
   583  000657  65                 	db	101	;'e'
   584  000658  72                 	db	114	;'r'
   585  000659  3E                 	db	62	;'>'
   586  00065A  00                 	db	0
   587  00065B  00                 	db	0	; dummy byte at the end
   588  0000                     
   589                           ; #config settings
   590                           
   591                           	psect	cinit
   592  00184A                     __pcinit:
   593                           	callstack 0
   594  00184A                     start_initialization:
   595                           	callstack 0
   596  00184A                     __initialization:
   597                           	callstack 0
   598                           
   599                           ; Initialize objects allocated to BIGRAM (300 bytes)
   600                           ; load TBLPTR registers with __pidataBIGRAM
   601  00184A  0E3C               	movlw	low __pidataBIGRAM
   602  00184C  6EF6               	movwf	tblptrl,c
   603  00184E  0E10               	movlw	high __pidataBIGRAM
   604  001850  6EF7               	movwf	tblptrh,c
   605  001852  0E00               	movlw	low (__pidataBIGRAM shr (0+16))
   606  001854  6EF8               	movwf	tblptru,c
   607  001856  EE00  F0C6         	lfsr	0,__pdataBIGRAM
   608  00185A  EE11 F02C          	lfsr	1,300
   609  00185E                     copy_data0:
   610  00185E  0009               	tblrd		*+
   611  001860  CFF5 FFEE          	movff	tablat,postinc0
   612  001864  50E5               	movf	postdec1,w,c
   613  001866  50E1               	movf	fsr1l,w,c
   614  001868  E1FA               	bnz	copy_data0
   615  00186A  50E2               	movf	fsr1h,w,c
   616  00186C  E1F8               	bnz	copy_data0
   617                           
   618                           ; Initialize objects allocated to BANK0 (64 bytes)
   619                           ; load TBLPTR registers with __pidataBANK0
   620  00186E  0EE4               	movlw	low __pidataBANK0
   621  001870  6EF6               	movwf	tblptrl,c
   622  001872  0E18               	movlw	high __pidataBANK0
   623  001874  6EF7               	movwf	tblptrh,c
   624  001876  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   625  001878  6EF8               	movwf	tblptru,c
   626  00187A  EE00  F060         	lfsr	0,__pdataBANK0
   627  00187E  EE10 F040          	lfsr	1,64
   628  001882                     copy_data1:
   629  001882  0009               	tblrd		*+
   630  001884  CFF5 FFEE          	movff	tablat,postinc0
   631  001888  50E5               	movf	postdec1,w,c
   632  00188A  50E1               	movf	fsr1l,w,c
   633  00188C  E1FA               	bnz	copy_data1
   634                           
   635                           ; Clear objects allocated to BANK0 (7 bytes)
   636  00188E  EE00  F0BF         	lfsr	0,__pbssBANK0
   637  001892  0E07               	movlw	7
   638  001894                     clear_0:
   639  001894  6AEE               	clrf	postinc0,c
   640  001896  06E8               	decf	wreg,f,c
   641  001898  E1FD               	bnz	clear_0
   642  00189A                     end_of_initialization:
   643                           	callstack 0
   644  00189A                     __end_of__initialization:
   645                           	callstack 0
   646  00189A  0100               	movlb	0
   647  00189C  EF73  F009         	goto	_main	;jump to C main() function
   648                           
   649                           	psect	bssBANK0
   650  0000BF                     __pbssBANK0:
   651                           	callstack 0
   652  0000BF                     gereTouche@indexNIP:
   653                           	callstack 0
   654  0000BF                     	ds	2
   655  0000C1                     gereTouche@nip:
   656                           	callstack 0
   657  0000C1                     	ds	5
   658                           
   659                           	psect	dataBANK0
   660  000060                     __pdataBANK0:
   661                           	callstack 0
   662  000060                     _matCGRAM:
   663                           	callstack 0
   664  000060                     	ds	64
   665                           
   666                           	psect	dataBIGRAM
   667  0000C6                     __pdataBIGRAM:
   668                           	callstack 0
   669  0000C6                     _listeUsager:
   670                           	callstack 0
   671  0000C6                     	ds	300
   672                           
   673                           	psect	cstackBANK0
   674  0000A0                     __pcstackBANK0:
   675                           	callstack 0
   676  0000A0                     ??_lcd_ecrireDonnees:
   677  0000A0                     ??_lcd_busy:
   678  0000A0                     ?_memset:
   679                           	callstack 0
   680  0000A0                     ?_isspace:
   681                           	callstack 0
   682  0000A0                     ?_isdigit:
   683                           	callstack 0
   684  0000A0                     ?___wmul:
   685                           	callstack 0
   686  0000A0                     getch@c:
   687                           	callstack 0
   688  0000A0                     ___wmul@multiplier:
   689                           	callstack 0
   690  0000A0                     isdigit@c:
   691                           	callstack 0
   692  0000A0                     isspace@c:
   693                           	callstack 0
   694  0000A0                     memset@dest:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x0
   698  0000A0                     	ds	1
   699  0000A1                     lcd_ecrireDonnees@donnee:
   700                           	callstack 0
   701                           
   702                           ; 1 bytes @ 0x1
   703  0000A1                     	ds	1
   704  0000A2                     ??_isspace:
   705  0000A2                     ??_isdigit:
   706  0000A2                     ??_lcd_resetSequence:
   707  0000A2                     lcd_busy@adresse:
   708                           	callstack 0
   709  0000A2                     ___wmul@multiplicand:
   710                           	callstack 0
   711  0000A2                     memset@c:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x2
   715  0000A2                     	ds	2
   716  0000A4                     ??_lcd_wrCom:
   717  0000A4                     lcd_wrData@caractere:
   718                           	callstack 0
   719  0000A4                     ___wmul@product:
   720                           	callstack 0
   721  0000A4                     memset@n:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x4
   725  0000A4                     	ds	1
   726  0000A5                     lcd_wrCom@commande:
   727                           	callstack 0
   728                           
   729                           ; 1 bytes @ 0x5
   730  0000A5                     	ds	1
   731  0000A6                     ??_lcd_initCGRam:
   732  0000A6                     ??_memset:
   733  0000A6                     ??_lcd_ecritChar:
   734  0000A6                     ?_strcmp:
   735                           	callstack 0
   736  0000A6                     lcd_gotoXY@y:
   737                           	callstack 0
   738  0000A6                     _isspace$1197:
   739                           	callstack 0
   740  0000A6                     strcmp@l:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x6
   744  0000A6                     	ds	1
   745  0000A7                     ??_lcd_gotoXY:
   746  0000A7                     ?_atoi:
   747                           	callstack 0
   748  0000A7                     atoi@s:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x7
   752  0000A7                     	ds	1
   753  0000A8                     lcd_ecritChar@car:
   754                           	callstack 0
   755  0000A8                     lcd_initCGRam@i:
   756                           	callstack 0
   757  0000A8                     memset@k:
   758                           	callstack 0
   759  0000A8                     strcmp@r:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x8
   763  0000A8                     	ds	1
   764  0000A9                     ??_atoi:
   765  0000A9                     lcd_gotoXY@x:
   766                           	callstack 0
   767  0000A9                     lcd_ecritChar@posRam:
   768                           	callstack 0
   769  0000A9                     lcd_initCGRam@j:
   770                           	callstack 0
   771                           
   772                           ; 1 bytes @ 0x9
   773  0000A9                     	ds	1
   774  0000AA                     ??_strcmp:
   775  0000AA                     memset@s:
   776                           	callstack 0
   777  0000AA                     lcd_putMessage@chaine:
   778                           	callstack 0
   779                           
   780                           ; 3 bytes @ 0xA
   781  0000AA                     	ds	2
   782  0000AC                     verifNip@usager:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0xC
   786  0000AC                     	ds	1
   787  0000AD                     ??_lcd_putMessage:
   788  0000AD                     atoi@neg:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0xD
   792  0000AD                     	ds	1
   793  0000AE                     verifNip@no:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0xE
   797  0000AE                     	ds	1
   798  0000AF                     atoi@n:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0xF
   802  0000AF                     	ds	1
   803  0000B0                     verifNip@index:
   804                           	callstack 0
   805                           
   806                           ; 2 bytes @ 0x10
   807  0000B0                     	ds	2
   808  0000B2                     lcd_putMessage@j:
   809                           	callstack 0
   810  0000B2                     gereTouche@etat:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x12
   814  0000B2                     	ds	1
   815  0000B3                     affiche@etat:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x13
   819  0000B3                     	ds	1
   820  0000B4                     gereTouche@usager:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x14
   824  0000B4                     	ds	1
   825  0000B5                     affiche@usager:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x15
   829  0000B5                     	ds	1
   830  0000B6                     ??_gereTouche:
   831                           
   832                           ; 1 bytes @ 0x16
   833  0000B6                     	ds	1
   834  0000B7                     ??_affiche:
   835                           
   836                           ; 1 bytes @ 0x17
   837  0000B7                     	ds	1
   838  0000B8                     gereTouche@touche:
   839                           	callstack 0
   840                           
   841                           ; 1 bytes @ 0x18
   842  0000B8                     	ds	1
   843  0000B9                     main@etatAffiche:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x19
   847  0000B9                     	ds	2
   848  0000BB                     main@noUsagerCourant:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x1B
   852  0000BB                     	ds	2
   853  0000BD                     main@etatCourant:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x1D
   857  0000BD                     	ds	2
   858                           
   859 ;;
   860 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   861 ;;
   862 ;; *************** function _main *****************
   863 ;; Defined at:
   864 ;;		line 75 in file "main.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;  etatCourant     2   29[BANK0 ] unsigned int 
   869 ;;  noUsagerCour    2   27[BANK0 ] int 
   870 ;;  etatAffiche     2   25[BANK0 ] int 
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   880 ;;      Params:         0       0       0       0       0       0       0
   881 ;;      Locals:         0       6       0       0       0       0       0
   882 ;;      Temps:          0       0       0       0       0       0       0
   883 ;;      Totals:         0       6       0       0       0       0       0
   884 ;;Total ram usage:        6 bytes
   885 ;; Hardware stack levels required when called: 6
   886 ;; This function calls:
   887 ;;		_affiche
   888 ;;		_gereTouche
   889 ;;		_initRegistres
   890 ;;		_init_serie
   891 ;;		_kbhit
   892 ;;		_lcd_curseurHome
   893 ;;		_lcd_init
   894 ;; This function is called by:
   895 ;;		Startup code after reset
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           	psect	text0
   900  0012E6                     __ptext0:
   901                           	callstack 0
   902  0012E6                     _main:
   903                           	callstack 25
   904  0012E6  FFFF               	dw	65535	; assembler added errata NOP
   905                           
   906                           ;main.c: 77:  unsigned int etatCourant = enumEtat_Depart;
   907  0012E8  0E00               	movlw	0
   908  0012EA  0100               	movlb	0	; force () banked
   909  0012EC  6FBE               	movwf	(main@etatCourant+1)& (0+255),b
   910  0012EE  0E00               	movlw	0
   911  0012F0  6FBD               	movwf	main@etatCourant& (0+255),b
   912                           
   913                           ;main.c: 78:  int etatAffiche = enumEtat_Max;
   914  0012F2  0E00               	movlw	0
   915  0012F4  0100               	movlb	0	; force () banked
   916  0012F6  6FBA               	movwf	(main@etatAffiche+1)& (0+255),b
   917  0012F8  0E05               	movlw	5
   918  0012FA  6FB9               	movwf	main@etatAffiche& (0+255),b
   919  0012FC                     
   920                           ; BSR set to: 0
   921                           ;main.c: 80:  int noUsagerCourant = -1;
   922  0012FC  0100               	movlb	0	; force () banked
   923  0012FE  69BB               	setf	main@noUsagerCourant& (0+255),b
   924  001300  69BC               	setf	(main@noUsagerCourant+1)& (0+255),b
   925  001302                     
   926                           ; BSR set to: 0
   927                           ;main.c: 82:  initRegistres();
   928  001302  ECEF  F00C         	call	_initRegistres	;wreg free
   929  001306                     
   930                           ;main.c: 83:  init_serie();
   931  001306  ECE4  F00C         	call	_init_serie	;wreg free
   932  00130A                     
   933                           ;main.c: 84:  lcd_init();
   934  00130A  EC92  F00C         	call	_lcd_init	;wreg free
   935  00130E                     
   936                           ;main.c: 85:  lcd_curseurHome();
   937  00130E  EC03  F00D         	call	_lcd_curseurHome	;wreg free
   938  001312                     l1905:
   939  001312  FFFF               	dw	65535	; assembler added errata NOP
   940                           
   941                           ;main.c: 88:  {;main.c: 89:   if(kbhit())
   942  001314  ECC1  F00C         	call	_kbhit	;wreg free
   943  001318  0100               	movlb	0	; force () banked
   944  00131A  A0D8               	btfss	status,0,c
   945  00131C  EF92  F009         	goto	u881
   946  001320  EF95  F009         	goto	u880
   947  001324                     u881:
   948  001324  FFFF               	dw	65535	; assembler added errata NOP
   949  001326  EFA2  F009         	goto	l1909
   950  00132A                     u880:
   951  00132A  FFFF               	dw	65535	; assembler added errata NOP
   952  00132C                     
   953                           ; BSR set to: 0
   954                           ;main.c: 90:    gereTouche(&etatCourant, &noUsagerCourant);
   955  00132C  0EBD               	movlw	low main@etatCourant
   956  00132E  0100               	movlb	0	; force () banked
   957  001330  6FB2               	movwf	gereTouche@etat& (0+255),b
   958  001332  0E00               	movlw	high main@etatCourant
   959  001334  6FB3               	movwf	(gereTouche@etat+1)& (0+255),b
   960  001336  0EBB               	movlw	low main@noUsagerCourant
   961  001338  0100               	movlb	0	; force () banked
   962  00133A  6FB4               	movwf	gereTouche@usager& (0+255),b
   963  00133C  0E00               	movlw	high main@noUsagerCourant
   964  00133E  6FB5               	movwf	(gereTouche@usager+1)& (0+255),b
   965  001340  EC2E  F003         	call	_gereTouche	;wreg free
   966  001344                     l1909:
   967  001344  FFFF               	dw	65535	; assembler added errata NOP
   968                           
   969                           ;main.c: 92:   if(etatAffiche != etatCourant)
   970  001346  0100               	movlb	0	; force () banked
   971  001348  51BD               	movf	main@etatCourant& (0+255),w,b
   972  00134A  0100               	movlb	0	; force () banked
   973  00134C  19B9               	xorwf	main@etatAffiche& (0+255),w,b
   974  00134E  E10C               	bnz	u890
   975  001350  0100               	movlb	0	; force () banked
   976  001352  51BE               	movf	(main@etatCourant+1)& (0+255),w,b
   977  001354  0100               	movlb	0	; force () banked
   978  001356  19BA               	xorwf	(main@etatAffiche+1)& (0+255),w,b
   979  001358  B4D8               	btfsc	status,2,c
   980  00135A  EFB1  F009         	goto	u891
   981  00135E  EFB4  F009         	goto	u890
   982  001362                     u891:
   983  001362  FFFF               	dw	65535	; assembler added errata NOP
   984  001364  EF89  F009         	goto	l1905
   985  001368                     u890:
   986  001368  FFFF               	dw	65535	; assembler added errata NOP
   987  00136A                     
   988                           ; BSR set to: 0
   989                           ;main.c: 93:   {;main.c: 94:    affiche(etatCourant, noUsagerCourant);
   990  00136A  C0BD  F0B3         	movff	main@etatCourant,affiche@etat
   991  00136E  C0BE  F0B4         	movff	main@etatCourant+1,affiche@etat+1
   992  001372  C0BB  F0B5         	movff	main@noUsagerCourant,affiche@usager
   993  001376  C0BC  F0B6         	movff	main@noUsagerCourant+1,affiche@usager+1
   994  00137A  EC64  F005         	call	_affiche	;wreg free
   995  00137E                     
   996                           ;main.c: 95:    etatAffiche = etatCourant;
   997  00137E  C0BD  F0B9         	movff	main@etatCourant,main@etatAffiche
   998  001382  C0BE  F0BA         	movff	main@etatCourant+1,main@etatAffiche+1
   999  001386  EF89  F009         	goto	l1905
  1000  00138A  EF01  F000         	goto	start
  1001  00138E                     __end_of_main:
  1002                           	callstack 0
  1003                           
  1004 ;; *************** function _lcd_init *****************
  1005 ;; Defined at:
  1006 ;;		line 257 in file "Lcd4Lignes.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;		None
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;		None
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  1    wreg      void 
  1013 ;; Registers used:
  1014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1015 ;; Tracked objects:
  1016 ;;		On entry : 0/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1020 ;;      Params:         0       0       0       0       0       0       0
  1021 ;;      Locals:         0       0       0       0       0       0       0
  1022 ;;      Temps:          0       0       0       0       0       0       0
  1023 ;;      Totals:         0       0       0       0       0       0       0
  1024 ;;Total ram usage:        0 bytes
  1025 ;; Hardware stack levels used: 1
  1026 ;; Hardware stack levels required when called: 5
  1027 ;; This function calls:
  1028 ;;		_lcd_initCGRam
  1029 ;;		_lcd_resetSequence
  1030 ;;		_lcd_wrCom
  1031 ;; This function is called by:
  1032 ;;		_main
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036                           	psect	text1
  1037  001924                     __ptext1:
  1038                           	callstack 0
  1039  001924                     _lcd_init:
  1040                           	callstack 0
  1041  001924  FFFF               	dw	65535	; assembler added errata NOP
  1042  001926                     
  1043                           ;Lcd4Lignes.c: 259:     TRISB = TRISB & 0xEF;
  1044  001926  5093               	movf	147,w,c	;volatile
  1045  001928  0BEF               	andlw	239
  1046  00192A  6E93               	movwf	147,c	;volatile
  1047  00192C                     
  1048                           ;Lcd4Lignes.c: 260:     lcd_resetSequence();
  1049  00192C  EC91  F00B         	call	_lcd_resetSequence	;wreg free
  1050  001930                     
  1051                           ;Lcd4Lignes.c: 261:     lcd_wrCom(0x28);
  1052  001930  0E28               	movlw	40
  1053  001932  ECC7  F009         	call	_lcd_wrCom
  1054  001936                     
  1055                           ;Lcd4Lignes.c: 262:     lcd_wrCom(0x0F);
  1056  001936  0E0F               	movlw	15
  1057  001938  ECC7  F009         	call	_lcd_wrCom
  1058  00193C                     
  1059                           ;Lcd4Lignes.c: 263:     lcd_wrCom(0x01);
  1060  00193C  0E01               	movlw	1
  1061  00193E  ECC7  F009         	call	_lcd_wrCom
  1062  001942                     
  1063                           ;Lcd4Lignes.c: 264:     lcd_wrCom(0x06);
  1064  001942  0E06               	movlw	6
  1065  001944  ECC7  F009         	call	_lcd_wrCom
  1066  001948                     
  1067                           ;Lcd4Lignes.c: 265:     lcd_wrCom(0x80);
  1068  001948  0E80               	movlw	128
  1069  00194A  ECC7  F009         	call	_lcd_wrCom
  1070  00194E                     
  1071                           ;Lcd4Lignes.c: 266:     lcd_initCGRam();
  1072  00194E  EC16  F009         	call	_lcd_initCGRam	;wreg free
  1073  001952  0012               	return		;funcret
  1074  001954  FFFF               	dw	65535	; errata NOP
  1075  001956                     __end_of_lcd_init:
  1076                           	callstack 0
  1077                           
  1078 ;; *************** function _lcd_resetSequence *****************
  1079 ;; Defined at:
  1080 ;;		line 220 in file "Lcd4Lignes.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;		None
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;		None
  1085 ;; Return value:  Size  Location     Type
  1086 ;;                  1    wreg      void 
  1087 ;; Registers used:
  1088 ;;		wreg, status,2, status,0, cstack
  1089 ;; Tracked objects:
  1090 ;;		On entry : 0/0
  1091 ;;		On exit  : 0/0
  1092 ;;		Unchanged: 0/0
  1093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1094 ;;      Params:         0       0       0       0       0       0       0
  1095 ;;      Locals:         0       0       0       0       0       0       0
  1096 ;;      Temps:          0       1       0       0       0       0       0
  1097 ;;      Totals:         0       1       0       0       0       0       0
  1098 ;;Total ram usage:        1 bytes
  1099 ;; Hardware stack levels used: 1
  1100 ;; Hardware stack levels required when called: 1
  1101 ;; This function calls:
  1102 ;;		_lcd_ecrireDonnees
  1103 ;;		_lcd_strobeEnableBit
  1104 ;; This function is called by:
  1105 ;;		_lcd_init
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           	psect	text2
  1110  001722                     __ptext2:
  1111                           	callstack 0
  1112  001722                     _lcd_resetSequence:
  1113                           	callstack 0
  1114  001722  FFFF               	dw	65535	; assembler added errata NOP
  1115  001724                     
  1116                           ;Lcd4Lignes.c: 225:     TRISA = 0b00000000;
  1117  001724  0E00               	movlw	0
  1118  001726  6E92               	movwf	146,c	;volatile
  1119  001728                     
  1120                           ;Lcd4Lignes.c: 227:     _delay((unsigned long)((40)*(16000000/4000.0)));
  1121  001728  0E9C               	movlw	156
  1122  00172A  0100               	movlb	0	; force () banked
  1123  00172C  6FA2               	movwf	??_lcd_resetSequence& (0+255),b
  1124  00172E  0EF1               	movlw	241
  1125  001730                     u907:
  1126  001730  FFFF               	dw	65535	; errata NOP
  1127  001732  2EE8               	decfsz	wreg,f,c
  1128  001734  D7FD               	bra	u907
  1129  001736  2FA2               	decfsz	??_lcd_resetSequence& (0+255),f,b
  1130  001738  D7FB               	bra	u907
  1131  00173A  F000               	nop	
  1132  00173C                     
  1133                           ;Lcd4Lignes.c: 228:     PORTBbits.RB4 = 0;
  1134  00173C  9881               	bcf	129,4,c	;volatile
  1135  00173E                     
  1136                           ;Lcd4Lignes.c: 229:     PORTAbits.RA5 = 0;
  1137  00173E  9A80               	bcf	128,5,c	;volatile
  1138  001740                     
  1139                           ;Lcd4Lignes.c: 231:     lcd_ecrireDonnees(0x03);
  1140  001740  0E03               	movlw	3
  1141  001742  EC1A  F00B         	call	_lcd_ecrireDonnees
  1142  001746                     
  1143                           ;Lcd4Lignes.c: 232:     lcd_strobeEnableBit();
  1144  001746  EC09  F00D         	call	_lcd_strobeEnableBit	;wreg free
  1145  00174A                     
  1146                           ;Lcd4Lignes.c: 233:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  1147  00174A  0E28               	movlw	40
  1148  00174C                     u917:
  1149  00174C  FFFF               	dw	65535	; errata NOP
  1150  00174E  2EE8               	decfsz	wreg,f,c
  1151  001750  D7FD               	bra	u917
  1152  001752                     
  1153                           ;Lcd4Lignes.c: 236:     lcd_ecrireDonnees(0x03);
  1154  001752  0E03               	movlw	3
  1155  001754  EC1A  F00B         	call	_lcd_ecrireDonnees
  1156  001758                     
  1157                           ;Lcd4Lignes.c: 237:     lcd_strobeEnableBit();
  1158  001758  EC09  F00D         	call	_lcd_strobeEnableBit	;wreg free
  1159  00175C                     
  1160                           ;Lcd4Lignes.c: 238:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  1161  00175C  0E28               	movlw	40
  1162  00175E                     u927:
  1163  00175E  FFFF               	dw	65535	; errata NOP
  1164  001760  2EE8               	decfsz	wreg,f,c
  1165  001762  D7FD               	bra	u927
  1166  001764                     
  1167                           ;Lcd4Lignes.c: 240:     lcd_ecrireDonnees(0x03);
  1168  001764  0E03               	movlw	3
  1169  001766  EC1A  F00B         	call	_lcd_ecrireDonnees
  1170  00176A                     
  1171                           ;Lcd4Lignes.c: 241:     lcd_strobeEnableBit();
  1172  00176A  EC09  F00D         	call	_lcd_strobeEnableBit	;wreg free
  1173  00176E                     
  1174                           ;Lcd4Lignes.c: 242:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  1175  00176E  0E28               	movlw	40
  1176  001770                     u937:
  1177  001770  FFFF               	dw	65535	; errata NOP
  1178  001772  2EE8               	decfsz	wreg,f,c
  1179  001774  D7FD               	bra	u937
  1180  001776                     
  1181                           ;Lcd4Lignes.c: 244:     lcd_ecrireDonnees(0x02);
  1182  001776  0E02               	movlw	2
  1183  001778  EC1A  F00B         	call	_lcd_ecrireDonnees
  1184  00177C                     
  1185                           ;Lcd4Lignes.c: 245:     lcd_strobeEnableBit();
  1186  00177C  EC09  F00D         	call	_lcd_strobeEnableBit	;wreg free
  1187  001780                     
  1188                           ;Lcd4Lignes.c: 246:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  1189  001780  0E28               	movlw	40
  1190  001782                     u947:
  1191  001782  FFFF               	dw	65535	; errata NOP
  1192  001784  2EE8               	decfsz	wreg,f,c
  1193  001786  D7FD               	bra	u947
  1194  001788                     
  1195                           ;Lcd4Lignes.c: 248:     TRISA = 0b00001111;
  1196  001788  0E0F               	movlw	15
  1197  00178A  6E92               	movwf	146,c	;volatile
  1198  00178C  0012               	return		;funcret
  1199  00178E  FFFF               	dw	65535	; errata NOP
  1200  001790                     __end_of_lcd_resetSequence:
  1201                           	callstack 0
  1202                           
  1203 ;; *************** function _lcd_initCGRam *****************
  1204 ;; Defined at:
  1205 ;;		line 416 in file "Lcd4Lignes.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;		None
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;  j               1    9[BANK0 ] unsigned char 
  1210 ;;  i               1    8[BANK0 ] unsigned char 
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      void 
  1213 ;; Registers used:
  1214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1220 ;;      Params:         0       0       0       0       0       0       0
  1221 ;;      Locals:         0       2       0       0       0       0       0
  1222 ;;      Temps:          0       2       0       0       0       0       0
  1223 ;;      Totals:         0       4       0       0       0       0       0
  1224 ;;Total ram usage:        4 bytes
  1225 ;; Hardware stack levels used: 1
  1226 ;; Hardware stack levels required when called: 4
  1227 ;; This function calls:
  1228 ;;		_lcd_curseurHome
  1229 ;;		_lcd_wrCom
  1230 ;;		_lcd_wrData
  1231 ;; This function is called by:
  1232 ;;		_lcd_init
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           	psect	text3
  1237  00122C                     __ptext3:
  1238                           	callstack 0
  1239  00122C                     _lcd_initCGRam:
  1240                           	callstack 0
  1241  00122C  FFFF               	dw	65535	; assembler added errata NOP
  1242  00122E                     
  1243                           ;Lcd4Lignes.c: 418:     char i,j;;Lcd4Lignes.c: 420:     lcd_wrCom(0x40);
  1244  00122E  0E40               	movlw	64
  1245  001230  ECC7  F009         	call	_lcd_wrCom
  1246  001234                     
  1247                           ;Lcd4Lignes.c: 421:     for(i=0;i<8;i++)
  1248  001234  0E00               	movlw	0
  1249  001236  0100               	movlb	0	; force () banked
  1250  001238  6FA8               	movwf	lcd_initCGRam@i& (0+255),b
  1251  00123A                     
  1252                           ; BSR set to: 0
  1253  00123A  0E07               	movlw	7
  1254  00123C  0100               	movlb	0	; force () banked
  1255  00123E  65A8               	cpfsgt	lcd_initCGRam@i& (0+255),b
  1256  001240  EF24  F009         	goto	u101
  1257  001244  EF27  F009         	goto	u100
  1258  001248                     u101:
  1259  001248  FFFF               	dw	65535	; assembler added errata NOP
  1260  00124A  EF2A  F009         	goto	l1171
  1261  00124E                     u100:
  1262  00124E  FFFF               	dw	65535	; assembler added errata NOP
  1263  001250  EF6E  F009         	goto	l1187
  1264  001254                     l1171:
  1265  001254  FFFF               	dw	65535	; assembler added errata NOP
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;Lcd4Lignes.c: 422:     {;Lcd4Lignes.c: 423:         for(j=0;j<8;j++)
  1269  001256  0E00               	movlw	0
  1270  001258  0100               	movlb	0	; force () banked
  1271  00125A  6FA9               	movwf	lcd_initCGRam@j& (0+255),b
  1272  00125C                     
  1273                           ; BSR set to: 0
  1274  00125C  0E07               	movlw	7
  1275  00125E  0100               	movlb	0	; force () banked
  1276  001260  65A9               	cpfsgt	lcd_initCGRam@j& (0+255),b
  1277  001262  EF35  F009         	goto	u111
  1278  001266  EF38  F009         	goto	u110
  1279  00126A                     u111:
  1280  00126A  FFFF               	dw	65535	; assembler added errata NOP
  1281  00126C  EF3B  F009         	goto	l1177
  1282  001270                     u110:
  1283  001270  FFFF               	dw	65535	; assembler added errata NOP
  1284  001272  EF61  F009         	goto	l1183
  1285  001276                     l1177:
  1286  001276  FFFF               	dw	65535	; assembler added errata NOP
  1287                           
  1288                           ; BSR set to: 0
  1289                           ;Lcd4Lignes.c: 424:             lcd_wrData(matCGRAM[i][j]);
  1290  001278  0100               	movlb	0	; force () banked
  1291  00127A  51A8               	movf	lcd_initCGRam@i& (0+255),w,b
  1292  00127C  0D08               	mullw	8
  1293  00127E  0E60               	movlw	low _matCGRAM
  1294  001280  0100               	movlb	0	; force () banked
  1295  001282  6FA6               	movwf	??_lcd_initCGRam& (0+255),b
  1296  001284  0E00               	movlw	high _matCGRAM
  1297  001286  6FA7               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  1298  001288  50F3               	movf	243,w,c
  1299  00128A  27A6               	addwf	??_lcd_initCGRam& (0+255),f,b
  1300  00128C  50F4               	movf	244,w,c
  1301  00128E  23A7               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  1302  001290  0100               	movlb	0	; force () banked
  1303  001292  51A9               	movf	lcd_initCGRam@j& (0+255),w,b
  1304  001294  0100               	movlb	0	; force () banked
  1305  001296  25A6               	addwf	??_lcd_initCGRam& (0+255),w,b
  1306  001298  6ED9               	movwf	fsr2l,c
  1307  00129A  0100               	movlb	0	; force () banked
  1308  00129C  0E00               	movlw	0
  1309  00129E  0100               	movlb	0	; force () banked
  1310  0012A0  21A7               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  1311  0012A2  6EDA               	movwf	fsr2h,c
  1312  0012A4  50DF               	movf	indf2,w,c
  1313  0012A6  ECF9  F00B         	call	_lcd_wrData
  1314  0012AA  0100               	movlb	0	; force () banked
  1315  0012AC  2BA9               	incf	lcd_initCGRam@j& (0+255),f,b
  1316  0012AE                     
  1317                           ; BSR set to: 0
  1318  0012AE  0E07               	movlw	7
  1319  0012B0  0100               	movlb	0	; force () banked
  1320  0012B2  65A9               	cpfsgt	lcd_initCGRam@j& (0+255),b
  1321  0012B4  EF5E  F009         	goto	u121
  1322  0012B8  EF61  F009         	goto	u120
  1323  0012BC                     u121:
  1324  0012BC  FFFF               	dw	65535	; assembler added errata NOP
  1325  0012BE  EF3B  F009         	goto	l1177
  1326  0012C2                     u120:
  1327  0012C2                     l1183:
  1328  0012C2  FFFF               	dw	65535	; assembler added errata NOP
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;Lcd4Lignes.c: 425:     }
  1332  0012C4  0100               	movlb	0	; force () banked
  1333  0012C6  2BA8               	incf	lcd_initCGRam@i& (0+255),f,b
  1334  0012C8                     
  1335                           ; BSR set to: 0
  1336  0012C8  0E07               	movlw	7
  1337  0012CA  0100               	movlb	0	; force () banked
  1338  0012CC  65A8               	cpfsgt	lcd_initCGRam@i& (0+255),b
  1339  0012CE  EF6B  F009         	goto	u131
  1340  0012D2  EF6E  F009         	goto	u130
  1341  0012D6                     u131:
  1342  0012D6  FFFF               	dw	65535	; assembler added errata NOP
  1343  0012D8  EF2A  F009         	goto	l1171
  1344  0012DC                     u130:
  1345  0012DC                     l1187:
  1346  0012DC  FFFF               	dw	65535	; assembler added errata NOP
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;Lcd4Lignes.c: 426:     lcd_curseurHome();
  1350  0012DE  EC03  F00D         	call	_lcd_curseurHome	;wreg free
  1351  0012E2  0012               	return		;funcret
  1352  0012E4  FFFF               	dw	65535	; errata NOP
  1353  0012E6                     __end_of_lcd_initCGRam:
  1354                           	callstack 0
  1355                           
  1356 ;; *************** function _init_serie *****************
  1357 ;; Defined at:
  1358 ;;		line 26 in file "serie_458.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg, status,2
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1372 ;;      Params:         0       0       0       0       0       0       0
  1373 ;;      Locals:         0       0       0       0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0       0       0
  1375 ;;      Totals:         0       0       0       0       0       0       0
  1376 ;;Total ram usage:        0 bytes
  1377 ;; Hardware stack levels used: 1
  1378 ;; This function calls:
  1379 ;;		Nothing
  1380 ;; This function is called by:
  1381 ;;		_main
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text4
  1386  0019C8                     __ptext4:
  1387                           	callstack 0
  1388  0019C8                     _init_serie:
  1389                           	callstack 0
  1390  0019C8  FFFF               	dw	65535	; assembler added errata NOP
  1391  0019CA                     
  1392                           ;serie_458.c: 29:     TRISCbits.TRISC7=1;
  1393  0019CA  8E94               	bsf	148,7,c	;volatile
  1394                           
  1395                           ;serie_458.c: 30:     TRISCbits.TRISC6=1;
  1396  0019CC  8C94               	bsf	148,6,c	;volatile
  1397  0019CE                     
  1398                           ;serie_458.c: 37:     SPBRG = 25;
  1399  0019CE  0E19               	movlw	25
  1400  0019D0  6EAF               	movwf	175,c	;volatile
  1401  0019D2                     
  1402                           ;serie_458.c: 42:     TXSTAbits.BRGH = 0;
  1403  0019D2  94AC               	bcf	172,2,c	;volatile
  1404  0019D4                     
  1405                           ;serie_458.c: 46:     RCSTAbits.SPEN = 1;
  1406  0019D4  8EAB               	bsf	171,7,c	;volatile
  1407  0019D6                     
  1408                           ;serie_458.c: 47:     TXSTAbits.SYNC = 0;
  1409  0019D6  98AC               	bcf	172,4,c	;volatile
  1410  0019D8                     
  1411                           ;serie_458.c: 50:     RCSTAbits.CREN = 1;
  1412  0019D8  88AB               	bsf	171,4,c	;volatile
  1413  0019DA  0012               	return		;funcret
  1414  0019DC  FFFF               	dw	65535	; errata NOP
  1415  0019DE                     __end_of_init_serie:
  1416                           	callstack 0
  1417                           
  1418 ;; *************** function _initRegistres *****************
  1419 ;; Defined at:
  1420 ;;		line 6 in file "C:/Users/jerem/Documents/ecole/Prog/prog3.2/lab2_jeremie_Hamel.X/initialisation.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;		None
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;		None
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  1    wreg      void 
  1427 ;; Registers used:
  1428 ;;		wreg, status,2
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1434 ;;      Params:         0       0       0       0       0       0       0
  1435 ;;      Locals:         0       0       0       0       0       0       0
  1436 ;;      Temps:          0       0       0       0       0       0       0
  1437 ;;      Totals:         0       0       0       0       0       0       0
  1438 ;;Total ram usage:        0 bytes
  1439 ;; Hardware stack levels used: 1
  1440 ;; This function calls:
  1441 ;;		Nothing
  1442 ;; This function is called by:
  1443 ;;		_main
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           	psect	text5
  1448  0019DE                     __ptext5:
  1449                           	callstack 0
  1450  0019DE                     _initRegistres:
  1451                           	callstack 0
  1452  0019DE  FFFF               	dw	65535	; assembler added errata NOP
  1453  0019E0                     
  1454                           ;C:/Users/jerem/Documents/ecole/Prog/prog3.2/lab2_jeremie_Hamel.X/initialisation.c: 8:  
      +                          ADCON1 = 0x7;
  1455  0019E0  0E07               	movlw	7
  1456  0019E2  6EC1               	movwf	193,c	;volatile
  1457                           
  1458                           ;C:/Users/jerem/Documents/ecole/Prog/prog3.2/lab2_jeremie_Hamel.X/initialisation.c: 9:  
      +                          TRISA = 0;
  1459  0019E4  0E00               	movlw	0
  1460  0019E6  6E92               	movwf	146,c	;volatile
  1461                           
  1462                           ;C:/Users/jerem/Documents/ecole/Prog/prog3.2/lab2_jeremie_Hamel.X/initialisation.c: 10: 
      +                           TRISD = 0;
  1463  0019E8  0E00               	movlw	0
  1464  0019EA  6E95               	movwf	149,c	;volatile
  1465                           
  1466                           ;C:/Users/jerem/Documents/ecole/Prog/prog3.2/lab2_jeremie_Hamel.X/initialisation.c: 11: 
      +                           TRISC = 0x80;
  1467  0019EC  0E80               	movlw	128
  1468  0019EE  6E94               	movwf	148,c	;volatile
  1469  0019F0  0012               	return		;funcret
  1470  0019F2  FFFF               	dw	65535	; errata NOP
  1471  0019F4                     __end_of_initRegistres:
  1472                           	callstack 0
  1473                           
  1474 ;; *************** function _gereTouche *****************
  1475 ;; Defined at:
  1476 ;;		line 101 in file "main.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  etat            2   18[BANK0 ] PTR unsigned int 
  1479 ;;		 -> main@etatCourant(2), 
  1480 ;;  usager          2   20[BANK0 ] PTR int 
  1481 ;;		 -> main@noUsagerCourant(2), 
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;  touche          1   24[BANK0 ] unsigned char 
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      void 
  1486 ;; Registers used:
  1487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1493 ;;      Params:         0       4       0       0       0       0       0
  1494 ;;      Locals:         0       1       0       0       0       0       0
  1495 ;;      Temps:          0       2       0       0       0       0       0
  1496 ;;      Totals:         0       7       0       0       0       0       0
  1497 ;;Total ram usage:        7 bytes
  1498 ;; Hardware stack levels used: 1
  1499 ;; Hardware stack levels required when called: 4
  1500 ;; This function calls:
  1501 ;;		___wmul
  1502 ;;		_atoi
  1503 ;;		_getch
  1504 ;;		_kbhit
  1505 ;;		_lcd_ecritChar
  1506 ;;		_memset
  1507 ;;		_verifNip
  1508 ;; This function is called by:
  1509 ;;		_main
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text6
  1514  00065C                     __ptext6:
  1515                           	callstack 0
  1516  00065C                     _gereTouche:
  1517                           	callstack 0
  1518  00065C  FFFF               	dw	65535	; assembler added errata NOP
  1519  00065E                     
  1520                           ;main.c: 101: void gereTouche(unsigned int *etat, int *usager);main.c: 102: {;main.c: 10
      +                          3:  char touche;;main.c: 104:  static int indexNIP = 0;;main.c: 106:  static char nip[4 
      +                          + 1];;main.c: 108:  if(kbhit())
  1521  00065E  ECC1  F00C         	call	_kbhit	;wreg free
  1522  000662  0100               	movlb	0	; force () banked
  1523  000664  A0D8               	btfss	status,0,c
  1524  000666  EF37  F003         	goto	u711
  1525  00066A  EF3A  F003         	goto	u710
  1526  00066E                     u711:
  1527  00066E  FFFF               	dw	65535	; assembler added errata NOP
  1528  000670  EF61  F005         	goto	l180
  1529  000674                     u710:
  1530  000674  FFFF               	dw	65535	; assembler added errata NOP
  1531  000676                     
  1532                           ; BSR set to: 0
  1533                           ;main.c: 109:  {;main.c: 110:   touche = getch();
  1534  000676  ECD3  F00C         	call	_getch	;wreg free
  1535  00067A  0100               	movlb	0	; force () banked
  1536  00067C  6FB8               	movwf	gereTouche@touche& (0+255),b
  1537  00067E                     
  1538                           ; BSR set to: 0
  1539                           ;main.c: 112:   if (touche >= '0' && touche <= '9')
  1540  00067E  0E2F               	movlw	47
  1541  000680  0100               	movlb	0	; force () banked
  1542  000682  65B8               	cpfsgt	gereTouche@touche& (0+255),b
  1543  000684  EF46  F003         	goto	u721
  1544  000688  EF49  F003         	goto	u720
  1545  00068C                     u721:
  1546  00068C  FFFF               	dw	65535	; assembler added errata NOP
  1547  00068E  EFE8  F003         	goto	l1785
  1548  000692                     u720:
  1549  000692  FFFF               	dw	65535	; assembler added errata NOP
  1550  000694                     
  1551                           ; BSR set to: 0
  1552  000694  0E3A               	movlw	58
  1553  000696  0100               	movlb	0	; force () banked
  1554  000698  61B8               	cpfslt	gereTouche@touche& (0+255),b
  1555  00069A  EF51  F003         	goto	u731
  1556  00069E  EF54  F003         	goto	u730
  1557  0006A2                     u731:
  1558  0006A2  FFFF               	dw	65535	; assembler added errata NOP
  1559  0006A4  EFE8  F003         	goto	l1785
  1560  0006A8                     u730:
  1561  0006A8  FFFF               	dw	65535	; assembler added errata NOP
  1562  0006AA                     
  1563                           ; BSR set to: 0
  1564                           ;main.c: 113:   {;main.c: 114:    if (*etat == enumEtat_NoUsager)
  1565  0006AA  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1566  0006AE  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1567  0006B2  04DE               	decf	postinc2,w,c
  1568  0006B4  10DE               	iorwf	postinc2,w,c
  1569  0006B6  A4D8               	btfss	status,2,c
  1570  0006B8  EF60  F003         	goto	u741
  1571  0006BC  EF63  F003         	goto	u740
  1572  0006C0                     u741:
  1573  0006C0  FFFF               	dw	65535	; assembler added errata NOP
  1574  0006C2  EFB5  F003         	goto	l1775
  1575  0006C6                     u740:
  1576  0006C6  FFFF               	dw	65535	; assembler added errata NOP
  1577  0006C8                     
  1578                           ; BSR set to: 0
  1579                           ;main.c: 115:    {;main.c: 116:     lcd_ecritChar(touche);
  1580  0006C8  0100               	movlb	0	; force () banked
  1581  0006CA  51B8               	movf	gereTouche@touche& (0+255),w,b
  1582  0006CC  ECA1  F00A         	call	_lcd_ecritChar
  1583  0006D0                     
  1584                           ;main.c: 118:     if(*usager < 0) *usager = atoi(&touche);
  1585  0006D0  C0B4  FFD9         	movff	gereTouche@usager,fsr2l
  1586  0006D4  C0B5  FFDA         	movff	gereTouche@usager+1,fsr2h
  1587  0006D8  0E01               	movlw	1
  1588  0006DA  BEDB               	btfsc	plusw2,7,c
  1589  0006DC  EF75  F003         	goto	u750
  1590  0006E0  EF72  F003         	goto	u751
  1591  0006E4                     u751:
  1592  0006E4  FFFF               	dw	65535	; assembler added errata NOP
  1593  0006E6  EF88  F003         	goto	l1773
  1594  0006EA                     u750:
  1595  0006EA  FFFF               	dw	65535	; assembler added errata NOP
  1596  0006EC  0EB8               	movlw	low gereTouche@touche
  1597  0006EE  0100               	movlb	0	; force () banked
  1598  0006F0  6FA7               	movwf	atoi@s& (0+255),b
  1599  0006F2  0E00               	movlw	high gereTouche@touche
  1600  0006F4  6FA8               	movwf	(atoi@s+1)& (0+255),b
  1601  0006F6  EC60  F007         	call	_atoi	;wreg free
  1602  0006FA  C0B4  FFD9         	movff	gereTouche@usager,fsr2l
  1603  0006FE  C0B5  FFDA         	movff	gereTouche@usager+1,fsr2h
  1604  000702  0100               	movlb	0	; force () banked
  1605  000704  C0A7  FFDE         	movff	?_atoi,postinc2
  1606  000708  C0A8  FFDD         	movff	?_atoi+1,postdec2
  1607  00070C  EF61  F005         	goto	l180
  1608  000710                     l1773:
  1609  000710  FFFF               	dw	65535	; assembler added errata NOP
  1610  000712  C0B4  FFD9         	movff	gereTouche@usager,fsr2l
  1611  000716  C0B5  FFDA         	movff	gereTouche@usager+1,fsr2h
  1612  00071A  CFDE F0A0          	movff	postinc2,___wmul@multiplier
  1613  00071E  CFDD F0A1          	movff	postdec2,___wmul@multiplier+1
  1614  000722  0E00               	movlw	0
  1615  000724  0100               	movlb	0	; force () banked
  1616  000726  6FA3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1617  000728  0E0A               	movlw	10
  1618  00072A  6FA2               	movwf	___wmul@multiplicand& (0+255),b
  1619  00072C  ECAB  F00C         	call	___wmul	;wreg free
  1620  000730  C0A0  F0B6         	movff	?___wmul,??_gereTouche
  1621  000734  C0A1  F0B7         	movff	?___wmul+1,??_gereTouche+1
  1622  000738  0EB8               	movlw	low gereTouche@touche
  1623  00073A  0100               	movlb	0	; force () banked
  1624  00073C  6FA7               	movwf	atoi@s& (0+255),b
  1625  00073E  0E00               	movlw	high gereTouche@touche
  1626  000740  6FA8               	movwf	(atoi@s+1)& (0+255),b
  1627  000742  EC60  F007         	call	_atoi	;wreg free
  1628  000746  0100               	movlb	0	; force () banked
  1629  000748  51A7               	movf	?_atoi& (0+255),w,b
  1630  00074A  0100               	movlb	0	; force () banked
  1631  00074C  27B6               	addwf	??_gereTouche& (0+255),f,b
  1632  00074E  0100               	movlb	0	; force () banked
  1633  000750  51A8               	movf	(?_atoi+1)& (0+255),w,b
  1634  000752  0100               	movlb	0	; force () banked
  1635  000754  23B7               	addwfc	(??_gereTouche+1)& (0+255),f,b
  1636  000756  C0B4  FFD9         	movff	gereTouche@usager,fsr2l
  1637  00075A  C0B5  FFDA         	movff	gereTouche@usager+1,fsr2h
  1638  00075E  C0B6  FFDE         	movff	??_gereTouche,postinc2
  1639  000762  C0B7  FFDD         	movff	??_gereTouche+1,postdec2
  1640  000766  EF61  F005         	goto	l180
  1641  00076A                     l1775:
  1642  00076A  FFFF               	dw	65535	; assembler added errata NOP
  1643                           
  1644                           ; BSR set to: 0
  1645  00076C  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1646  000770  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1647  000774  0E02               	movlw	2
  1648  000776  18DE               	xorwf	postinc2,w,c
  1649  000778  10DE               	iorwf	postinc2,w,c
  1650  00077A  A4D8               	btfss	status,2,c
  1651  00077C  EFC2  F003         	goto	u761
  1652  000780  EFC5  F003         	goto	u760
  1653  000784                     u761:
  1654  000784  FFFF               	dw	65535	; assembler added errata NOP
  1655  000786  EF61  F005         	goto	l180
  1656  00078A                     u760:
  1657  00078A  FFFF               	dw	65535	; assembler added errata NOP
  1658  00078C                     
  1659                           ; BSR set to: 0
  1660                           ;main.c: 122:    {;main.c: 123:     if (indexNIP < 4)
  1661  00078C  0100               	movlb	0	; force () banked
  1662  00078E  BFC0               	btfsc	(gereTouche@indexNIP+1)& (0+255),7,b
  1663  000790  EFD6  F003         	goto	u770
  1664  000794  51C0               	movf	(gereTouche@indexNIP+1)& (0+255),w,b
  1665  000796  E107               	bnz	u771
  1666  000798  0E04               	movlw	4
  1667  00079A  5DBF               	subwf	gereTouche@indexNIP& (0+255),w,b
  1668  00079C  B0D8               	btfsc	status,0,c
  1669  00079E  EFD3  F003         	goto	u771
  1670  0007A2  EFD6  F003         	goto	u770
  1671  0007A6                     u771:
  1672  0007A6  FFFF               	dw	65535	; assembler added errata NOP
  1673  0007A8  EF61  F005         	goto	l163
  1674  0007AC                     u770:
  1675  0007AC  FFFF               	dw	65535	; assembler added errata NOP
  1676  0007AE                     
  1677                           ; BSR set to: 0
  1678                           ;main.c: 124:     {;main.c: 125:      lcd_ecritChar('*');
  1679  0007AE  0E2A               	movlw	42
  1680  0007B0  ECA1  F00A         	call	_lcd_ecritChar
  1681  0007B4                     
  1682                           ;main.c: 126:      nip[indexNIP] = touche;
  1683  0007B4  0EC1               	movlw	low gereTouche@nip
  1684  0007B6  0100               	movlb	0	; force () banked
  1685  0007B8  25BF               	addwf	gereTouche@indexNIP& (0+255),w,b
  1686  0007BA  6ED9               	movwf	fsr2l,c
  1687  0007BC  0E00               	movlw	high gereTouche@nip
  1688  0007BE  21C0               	addwfc	(gereTouche@indexNIP+1)& (0+255),w,b
  1689  0007C0  6EDA               	movwf	fsr2h,c
  1690  0007C2  C0B8  FFDF         	movff	gereTouche@touche,indf2
  1691  0007C6                     
  1692                           ; BSR set to: 0
  1693                           ;main.c: 127:      indexNIP++;
  1694  0007C6  0100               	movlb	0	; force () banked
  1695  0007C8  4BBF               	infsnz	gereTouche@indexNIP& (0+255),f,b
  1696  0007CA  2BC0               	incf	(gereTouche@indexNIP+1)& (0+255),f,b
  1697  0007CC  EF61  F005         	goto	l180
  1698  0007D0                     l1785:
  1699  0007D0  FFFF               	dw	65535	; assembler added errata NOP
  1700                           
  1701                           ; BSR set to: 0
  1702  0007D2  0E0D               	movlw	13
  1703  0007D4  0100               	movlb	0	; force () banked
  1704  0007D6  19B8               	xorwf	gereTouche@touche& (0+255),w,b
  1705  0007D8  A4D8               	btfss	status,2,c
  1706  0007DA  EFF1  F003         	goto	u781
  1707  0007DE  EFF4  F003         	goto	u780
  1708  0007E2                     u781:
  1709  0007E2  FFFF               	dw	65535	; assembler added errata NOP
  1710  0007E4  EFE1  F004         	goto	l1819
  1711  0007E8                     u780:
  1712  0007E8  FFFF               	dw	65535	; assembler added errata NOP
  1713  0007EA                     
  1714                           ; BSR set to: 0
  1715                           ;main.c: 133:   {;main.c: 135:    if(*etat == enumEtat_Depart)
  1716  0007EA  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1717  0007EE  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1718  0007F2  50DE               	movf	postinc2,w,c
  1719  0007F4  10DE               	iorwf	postinc2,w,c
  1720  0007F6  A4D8               	btfss	status,2,c
  1721  0007F8  EF00  F004         	goto	u791
  1722  0007FC  EF03  F004         	goto	u790
  1723  000800                     u791:
  1724  000800  FFFF               	dw	65535	; assembler added errata NOP
  1725  000802  EF0E  F004         	goto	l1791
  1726  000806                     u790:
  1727  000806  FFFF               	dw	65535	; assembler added errata NOP
  1728  000808                     
  1729                           ; BSR set to: 0
  1730                           ;main.c: 136:     *etat = enumEtat_NoUsager;
  1731  000808  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1732  00080C  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1733  000810  0E01               	movlw	1
  1734  000812  6EDE               	movwf	postinc2,c
  1735  000814  0E00               	movlw	0
  1736  000816  6EDD               	movwf	postdec2,c
  1737  000818  EF61  F005         	goto	l180
  1738  00081C                     l1791:
  1739  00081C  FFFF               	dw	65535	; assembler added errata NOP
  1740                           
  1741                           ; BSR set to: 0
  1742  00081E  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1743  000822  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1744  000826  04DE               	decf	postinc2,w,c
  1745  000828  10DE               	iorwf	postinc2,w,c
  1746  00082A  A4D8               	btfss	status,2,c
  1747  00082C  EF1A  F004         	goto	u801
  1748  000830  EF1D  F004         	goto	u800
  1749  000834                     u801:
  1750  000834  FFFF               	dw	65535	; assembler added errata NOP
  1751  000836  EF57  F004         	goto	l1801
  1752  00083A                     u800:
  1753  00083A  FFFF               	dw	65535	; assembler added errata NOP
  1754  00083C                     
  1755                           ; BSR set to: 0
  1756                           ;main.c: 139:      if(*usager >= 0 && *usager < 12)
  1757  00083C  C0B4  FFD9         	movff	gereTouche@usager,fsr2l
  1758  000840  C0B5  FFDA         	movff	gereTouche@usager+1,fsr2h
  1759  000844  0E01               	movlw	1
  1760  000846  BEDB               	btfsc	plusw2,7,c
  1761  000848  EF28  F004         	goto	u811
  1762  00084C  EF2B  F004         	goto	u810
  1763  000850                     u811:
  1764  000850  FFFF               	dw	65535	; assembler added errata NOP
  1765  000852  EF4C  F004         	goto	l1799
  1766  000856                     u810:
  1767  000856  FFFF               	dw	65535	; assembler added errata NOP
  1768  000858                     
  1769                           ; BSR set to: 0
  1770  000858  C0B4  FFD9         	movff	gereTouche@usager,fsr2l
  1771  00085C  C0B5  FFDA         	movff	gereTouche@usager+1,fsr2h
  1772  000860  0E01               	movlw	1
  1773  000862  BEDB               	btfsc	plusw2,7,c
  1774  000864  EF41  F004         	goto	u820
  1775  000868  0E01               	movlw	1
  1776  00086A  50DB               	movf	plusw2,w,c
  1777  00086C  E107               	bnz	u821
  1778  00086E  0E0C               	movlw	12
  1779  000870  5CDE               	subwf	postinc2,w,c
  1780  000872  B0D8               	btfsc	status,0,c
  1781  000874  EF3E  F004         	goto	u821
  1782  000878  EF41  F004         	goto	u820
  1783  00087C                     u821:
  1784  00087C  FFFF               	dw	65535	; assembler added errata NOP
  1785  00087E  EF4C  F004         	goto	l1799
  1786  000882                     u820:
  1787  000882  FFFF               	dw	65535	; assembler added errata NOP
  1788  000884                     
  1789                           ; BSR set to: 0
  1790                           ;main.c: 140:       *etat = enumEtat_NIP;
  1791  000884  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1792  000888  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1793  00088C  0E02               	movlw	2
  1794  00088E  6EDE               	movwf	postinc2,c
  1795  000890  0E00               	movlw	0
  1796  000892  6EDD               	movwf	postdec2,c
  1797  000894  EF61  F005         	goto	l180
  1798  000898                     l1799:
  1799  000898  FFFF               	dw	65535	; assembler added errata NOP
  1800                           
  1801                           ; BSR set to: 0
  1802  00089A  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1803  00089E  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1804  0008A2  0E04               	movlw	4
  1805  0008A4  6EDE               	movwf	postinc2,c
  1806  0008A6  0E00               	movlw	0
  1807  0008A8  6EDD               	movwf	postdec2,c
  1808  0008AA  EF61  F005         	goto	l180
  1809  0008AE                     l1801:
  1810  0008AE  FFFF               	dw	65535	; assembler added errata NOP
  1811                           
  1812                           ; BSR set to: 0
  1813  0008B0  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1814  0008B4  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1815  0008B8  0E02               	movlw	2
  1816  0008BA  18DE               	xorwf	postinc2,w,c
  1817  0008BC  10DE               	iorwf	postinc2,w,c
  1818  0008BE  A4D8               	btfss	status,2,c
  1819  0008C0  EF64  F004         	goto	u831
  1820  0008C4  EF67  F004         	goto	u830
  1821  0008C8                     u831:
  1822  0008C8  FFFF               	dw	65535	; assembler added errata NOP
  1823  0008CA  EFB8  F004         	goto	l1813
  1824  0008CE                     u830:
  1825  0008CE  FFFF               	dw	65535	; assembler added errata NOP
  1826  0008D0                     
  1827                           ; BSR set to: 0
  1828                           ;main.c: 144:    {;main.c: 145:     if(verifNip(*usager, nip, indexNIP))
  1829  0008D0  C0B4  FFD9         	movff	gereTouche@usager,fsr2l
  1830  0008D4  C0B5  FFDA         	movff	gereTouche@usager+1,fsr2h
  1831  0008D8  CFDE F0AC          	movff	postinc2,verifNip@usager
  1832  0008DC  CFDD F0AD          	movff	postdec2,verifNip@usager+1
  1833  0008E0  0EC1               	movlw	low gereTouche@nip
  1834  0008E2  0100               	movlb	0	; force () banked
  1835  0008E4  6FAE               	movwf	verifNip@no& (0+255),b
  1836  0008E6  0E00               	movlw	high gereTouche@nip
  1837  0008E8  6FAF               	movwf	(verifNip@no+1)& (0+255),b
  1838  0008EA  C0BF  F0B0         	movff	gereTouche@indexNIP,verifNip@index
  1839  0008EE  C0C0  F0B1         	movff	gereTouche@indexNIP+1,verifNip@index+1
  1840  0008F2  ECDE  F00A         	call	_verifNip	;wreg free
  1841  0008F6  0900               	iorlw	0
  1842  0008F8  B4D8               	btfsc	status,2,c
  1843  0008FA  EF81  F004         	goto	u841
  1844  0008FE  EF84  F004         	goto	u840
  1845  000902                     u841:
  1846  000902  FFFF               	dw	65535	; assembler added errata NOP
  1847  000904  EF8F  F004         	goto	l1807
  1848  000908                     u840:
  1849  000908  FFFF               	dw	65535	; assembler added errata NOP
  1850  00090A                     
  1851                           ;main.c: 146:      *etat = enumEtat_AccesOk;
  1852  00090A  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1853  00090E  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1854  000912  0E03               	movlw	3
  1855  000914  6EDE               	movwf	postinc2,c
  1856  000916  0E00               	movlw	0
  1857  000918  6EDD               	movwf	postdec2,c
  1858  00091A  EF61  F005         	goto	l180
  1859  00091E                     l1807:
  1860  00091E  FFFF               	dw	65535	; assembler added errata NOP
  1861                           
  1862                           ;main.c: 148:     {;main.c: 149:      *etat = enumEtat_AccesRefuse;
  1863  000920  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1864  000924  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1865  000928  0E04               	movlw	4
  1866  00092A  6EDE               	movwf	postinc2,c
  1867  00092C  0E00               	movlw	0
  1868  00092E  6EDD               	movwf	postdec2,c
  1869                           
  1870                           ;main.c: 150:      *usager = -1;
  1871  000930  C0B4  FFD9         	movff	gereTouche@usager,fsr2l
  1872  000934  C0B5  FFDA         	movff	gereTouche@usager+1,fsr2h
  1873  000938  0EFF               	movlw	255
  1874  00093A  6EDE               	movwf	postinc2,c
  1875  00093C  0EFF               	movlw	255
  1876  00093E  6EDD               	movwf	postdec2,c
  1877  000940                     
  1878                           ;main.c: 151:      memset(nip, '\0', 5);
  1879  000940  0EC1               	movlw	low gereTouche@nip
  1880  000942  0100               	movlb	0	; force () banked
  1881  000944  6FA0               	movwf	memset@dest& (0+255),b
  1882  000946  0E00               	movlw	high gereTouche@nip
  1883  000948  6FA1               	movwf	(memset@dest+1)& (0+255),b
  1884  00094A  0E00               	movlw	0
  1885  00094C  0100               	movlb	0	; force () banked
  1886  00094E  6FA3               	movwf	(memset@c+1)& (0+255),b
  1887  000950  0E00               	movlw	0
  1888  000952  6FA2               	movwf	memset@c& (0+255),b
  1889  000954  0E00               	movlw	0
  1890  000956  0100               	movlb	0	; force () banked
  1891  000958  6FA5               	movwf	(memset@n+1)& (0+255),b
  1892  00095A  0E05               	movlw	5
  1893  00095C  6FA4               	movwf	memset@n& (0+255),b
  1894  00095E  EC7D  F006         	call	_memset	;wreg free
  1895  000962                     
  1896                           ;main.c: 152:      indexNIP = 0;
  1897  000962  0E00               	movlw	0
  1898  000964  0100               	movlb	0	; force () banked
  1899  000966  6FC0               	movwf	(gereTouche@indexNIP+1)& (0+255),b
  1900  000968  0E00               	movlw	0
  1901  00096A  6FBF               	movwf	gereTouche@indexNIP& (0+255),b
  1902  00096C  EF61  F005         	goto	l180
  1903  000970                     l1813:
  1904  000970  FFFF               	dw	65535	; assembler added errata NOP
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;main.c: 157:    {;main.c: 158:     *etat = enumEtat_Depart;
  1908  000972  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1909  000976  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1910  00097A  0E00               	movlw	0
  1911  00097C  6EDE               	movwf	postinc2,c
  1912  00097E  0E00               	movlw	0
  1913  000980  6EDD               	movwf	postdec2,c
  1914                           
  1915                           ;main.c: 159:     *usager = -1;
  1916  000982  C0B4  FFD9         	movff	gereTouche@usager,fsr2l
  1917  000986  C0B5  FFDA         	movff	gereTouche@usager+1,fsr2h
  1918  00098A  0EFF               	movlw	255
  1919  00098C  6EDE               	movwf	postinc2,c
  1920  00098E  0EFF               	movlw	255
  1921  000990  6EDD               	movwf	postdec2,c
  1922  000992                     
  1923                           ; BSR set to: 0
  1924                           ;main.c: 160:     memset(nip, '\0', 5);
  1925  000992  0EC1               	movlw	low gereTouche@nip
  1926  000994  0100               	movlb	0	; force () banked
  1927  000996  6FA0               	movwf	memset@dest& (0+255),b
  1928  000998  0E00               	movlw	high gereTouche@nip
  1929  00099A  6FA1               	movwf	(memset@dest+1)& (0+255),b
  1930  00099C  0E00               	movlw	0
  1931  00099E  0100               	movlb	0	; force () banked
  1932  0009A0  6FA3               	movwf	(memset@c+1)& (0+255),b
  1933  0009A2  0E00               	movlw	0
  1934  0009A4  6FA2               	movwf	memset@c& (0+255),b
  1935  0009A6  0E00               	movlw	0
  1936  0009A8  0100               	movlb	0	; force () banked
  1937  0009AA  6FA5               	movwf	(memset@n+1)& (0+255),b
  1938  0009AC  0E05               	movlw	5
  1939  0009AE  6FA4               	movwf	memset@n& (0+255),b
  1940  0009B0  EC7D  F006         	call	_memset	;wreg free
  1941  0009B4                     
  1942                           ;main.c: 161:     indexNIP = 0;
  1943  0009B4  0E00               	movlw	0
  1944  0009B6  0100               	movlb	0	; force () banked
  1945  0009B8  6FC0               	movwf	(gereTouche@indexNIP+1)& (0+255),b
  1946  0009BA  0E00               	movlw	0
  1947  0009BC  6FBF               	movwf	gereTouche@indexNIP& (0+255),b
  1948  0009BE  EF61  F005         	goto	l180
  1949  0009C2                     l1819:
  1950  0009C2  FFFF               	dw	65535	; assembler added errata NOP
  1951                           
  1952                           ; BSR set to: 0
  1953  0009C4  0E1B               	movlw	27
  1954  0009C6  0100               	movlb	0	; force () banked
  1955  0009C8  19B8               	xorwf	gereTouche@touche& (0+255),w,b
  1956  0009CA  A4D8               	btfss	status,2,c
  1957  0009CC  EFEA  F004         	goto	u851
  1958  0009D0  EFED  F004         	goto	u850
  1959  0009D4                     u851:
  1960  0009D4  FFFF               	dw	65535	; assembler added errata NOP
  1961  0009D6  EF61  F005         	goto	l180
  1962  0009DA                     u850:
  1963  0009DA  FFFF               	dw	65535	; assembler added errata NOP
  1964  0009DC                     
  1965                           ; BSR set to: 0
  1966                           ;main.c: 166:   {;main.c: 167:    if(*etat == enumEtat_NIP)
  1967  0009DC  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1968  0009E0  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1969  0009E4  0E02               	movlw	2
  1970  0009E6  18DE               	xorwf	postinc2,w,c
  1971  0009E8  10DE               	iorwf	postinc2,w,c
  1972  0009EA  A4D8               	btfss	status,2,c
  1973  0009EC  EFFA  F004         	goto	u861
  1974  0009F0  EFFD  F004         	goto	u860
  1975  0009F4                     u861:
  1976  0009F4  FFFF               	dw	65535	; assembler added errata NOP
  1977  0009F6  EF26  F005         	goto	l1829
  1978  0009FA                     u860:
  1979  0009FA  FFFF               	dw	65535	; assembler added errata NOP
  1980  0009FC                     
  1981                           ; BSR set to: 0
  1982                           ;main.c: 168:    {;main.c: 169:     *etat = enumEtat_NoUsager;
  1983  0009FC  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1984  000A00  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1985  000A04  0E01               	movlw	1
  1986  000A06  6EDE               	movwf	postinc2,c
  1987  000A08  0E00               	movlw	0
  1988  000A0A  6EDD               	movwf	postdec2,c
  1989                           
  1990                           ;main.c: 170:     *usager = -1;
  1991  000A0C  C0B4  FFD9         	movff	gereTouche@usager,fsr2l
  1992  000A10  C0B5  FFDA         	movff	gereTouche@usager+1,fsr2h
  1993  000A14  0EFF               	movlw	255
  1994  000A16  6EDE               	movwf	postinc2,c
  1995  000A18  0EFF               	movlw	255
  1996  000A1A  6EDD               	movwf	postdec2,c
  1997  000A1C                     
  1998                           ; BSR set to: 0
  1999                           ;main.c: 171:     memset(nip, '\0', 5);
  2000  000A1C  0EC1               	movlw	low gereTouche@nip
  2001  000A1E  0100               	movlb	0	; force () banked
  2002  000A20  6FA0               	movwf	memset@dest& (0+255),b
  2003  000A22  0E00               	movlw	high gereTouche@nip
  2004  000A24  6FA1               	movwf	(memset@dest+1)& (0+255),b
  2005  000A26  0E00               	movlw	0
  2006  000A28  0100               	movlb	0	; force () banked
  2007  000A2A  6FA3               	movwf	(memset@c+1)& (0+255),b
  2008  000A2C  0E00               	movlw	0
  2009  000A2E  6FA2               	movwf	memset@c& (0+255),b
  2010  000A30  0E00               	movlw	0
  2011  000A32  0100               	movlb	0	; force () banked
  2012  000A34  6FA5               	movwf	(memset@n+1)& (0+255),b
  2013  000A36  0E05               	movlw	5
  2014  000A38  6FA4               	movwf	memset@n& (0+255),b
  2015  000A3A  EC7D  F006         	call	_memset	;wreg free
  2016  000A3E                     
  2017                           ;main.c: 172:     indexNIP = 0;
  2018  000A3E  0E00               	movlw	0
  2019  000A40  0100               	movlb	0	; force () banked
  2020  000A42  6FC0               	movwf	(gereTouche@indexNIP+1)& (0+255),b
  2021  000A44  0E00               	movlw	0
  2022  000A46  6FBF               	movwf	gereTouche@indexNIP& (0+255),b
  2023                           
  2024                           ;main.c: 173:    }
  2025  000A48  EF61  F005         	goto	l180
  2026  000A4C                     l1829:
  2027  000A4C  FFFF               	dw	65535	; assembler added errata NOP
  2028                           
  2029                           ; BSR set to: 0
  2030  000A4E  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  2031  000A52  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  2032  000A56  04DE               	decf	postinc2,w,c
  2033  000A58  10DE               	iorwf	postinc2,w,c
  2034  000A5A  A4D8               	btfss	status,2,c
  2035  000A5C  EF32  F005         	goto	u871
  2036  000A60  EF35  F005         	goto	u870
  2037  000A64                     u871:
  2038  000A64  FFFF               	dw	65535	; assembler added errata NOP
  2039  000A66  EF5E  F005         	goto	l175
  2040  000A6A                     u870:
  2041  000A6A  FFFF               	dw	65535	; assembler added errata NOP
  2042  000A6C                     
  2043                           ; BSR set to: 0
  2044                           ;main.c: 175:    {;main.c: 176:     *etat = enumEtat_Depart;
  2045  000A6C  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  2046  000A70  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  2047  000A74  0E00               	movlw	0
  2048  000A76  6EDE               	movwf	postinc2,c
  2049  000A78  0E00               	movlw	0
  2050  000A7A  6EDD               	movwf	postdec2,c
  2051                           
  2052                           ;main.c: 177:     *usager = -1;
  2053  000A7C  C0B4  FFD9         	movff	gereTouche@usager,fsr2l
  2054  000A80  C0B5  FFDA         	movff	gereTouche@usager+1,fsr2h
  2055  000A84  0EFF               	movlw	255
  2056  000A86  6EDE               	movwf	postinc2,c
  2057  000A88  0EFF               	movlw	255
  2058  000A8A  6EDD               	movwf	postdec2,c
  2059  000A8C                     
  2060                           ; BSR set to: 0
  2061                           ;main.c: 178:     memset(nip, '\0', 5);
  2062  000A8C  0EC1               	movlw	low gereTouche@nip
  2063  000A8E  0100               	movlb	0	; force () banked
  2064  000A90  6FA0               	movwf	memset@dest& (0+255),b
  2065  000A92  0E00               	movlw	high gereTouche@nip
  2066  000A94  6FA1               	movwf	(memset@dest+1)& (0+255),b
  2067  000A96  0E00               	movlw	0
  2068  000A98  0100               	movlb	0	; force () banked
  2069  000A9A  6FA3               	movwf	(memset@c+1)& (0+255),b
  2070  000A9C  0E00               	movlw	0
  2071  000A9E  6FA2               	movwf	memset@c& (0+255),b
  2072  000AA0  0E00               	movlw	0
  2073  000AA2  0100               	movlb	0	; force () banked
  2074  000AA4  6FA5               	movwf	(memset@n+1)& (0+255),b
  2075  000AA6  0E05               	movlw	5
  2076  000AA8  6FA4               	movwf	memset@n& (0+255),b
  2077  000AAA  EC7D  F006         	call	_memset	;wreg free
  2078  000AAE                     
  2079                           ;main.c: 179:     indexNIP = 0;
  2080  000AAE  0E00               	movlw	0
  2081  000AB0  0100               	movlb	0	; force () banked
  2082  000AB2  6FC0               	movwf	(gereTouche@indexNIP+1)& (0+255),b
  2083  000AB4  0E00               	movlw	0
  2084  000AB6  6FBF               	movwf	gereTouche@indexNIP& (0+255),b
  2085  000AB8  EF61  F005         	goto	l180
  2086  000ABC                     l175:
  2087  000ABC  FFFF               	dw	65535	; assembler added errata NOP
  2088                           
  2089                           ; BSR set to: 0
  2090  000ABE  EF61  F005         	goto	l180
  2091  000AC2                     l163:
  2092  000AC2                     l180:
  2093  000AC2  FFFF               	dw	65535	; assembler added errata NOP
  2094  000AC4  0012               	return		;funcret
  2095  000AC6  FFFF               	dw	65535	; errata NOP
  2096  000AC8                     __end_of_gereTouche:
  2097                           	callstack 0
  2098                           
  2099 ;; *************** function _verifNip *****************
  2100 ;; Defined at:
  2101 ;;		line 190 in file "main.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  usager          2   12[BANK0 ] int 
  2104 ;;  no              2   14[BANK0 ] PTR unsigned char 
  2105 ;;		 -> gereTouche@nip(5), 
  2106 ;;  index           2   16[BANK0 ] int 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;		None
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      _Bool 
  2111 ;; Registers used:
  2112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2118 ;;      Params:         0       6       0       0       0       0       0
  2119 ;;      Locals:         0       0       0       0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0
  2121 ;;      Totals:         0       6       0       0       0       0       0
  2122 ;;Total ram usage:        6 bytes
  2123 ;; Hardware stack levels used: 1
  2124 ;; Hardware stack levels required when called: 1
  2125 ;; This function calls:
  2126 ;;		___wmul
  2127 ;;		_strcmp
  2128 ;; This function is called by:
  2129 ;;		_gereTouche
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text7
  2134  0015BC                     __ptext7:
  2135                           	callstack 0
  2136  0015BC                     _verifNip:
  2137                           	callstack 0
  2138  0015BC  FFFF               	dw	65535	; assembler added errata NOP
  2139  0015BE                     
  2140                           ;main.c: 190: _Bool verifNip(int usager, char* no, int index);main.c: 191: {;main.c: 193
      +                          :  no[index] = '\0';
  2141  0015BE  0100               	movlb	0	; force () banked
  2142  0015C0  51B0               	movf	verifNip@index& (0+255),w,b
  2143  0015C2  0100               	movlb	0	; force () banked
  2144  0015C4  25AE               	addwf	verifNip@no& (0+255),w,b
  2145  0015C6  6ED9               	movwf	fsr2l,c
  2146  0015C8  0100               	movlb	0	; force () banked
  2147  0015CA  51B1               	movf	(verifNip@index+1)& (0+255),w,b
  2148  0015CC  0100               	movlb	0	; force () banked
  2149  0015CE  21AF               	addwfc	(verifNip@no+1)& (0+255),w,b
  2150  0015D0  6EDA               	movwf	fsr2h,c
  2151  0015D2  0E00               	movlw	0
  2152  0015D4  6EDF               	movwf	indf2,c
  2153  0015D6                     
  2154                           ; BSR set to: 0
  2155                           ;main.c: 195:  if(!strcmp(no, listeUsager[usager].nip))
  2156  0015D6  C0AE  F0A6         	movff	verifNip@no,strcmp@l
  2157  0015DA  C0AF  F0A7         	movff	verifNip@no+1,strcmp@l+1
  2158  0015DE  C0AC  F0A0         	movff	verifNip@usager,___wmul@multiplier
  2159  0015E2  C0AD  F0A1         	movff	verifNip@usager+1,___wmul@multiplier+1
  2160  0015E6  0E00               	movlw	0
  2161  0015E8  0100               	movlb	0	; force () banked
  2162  0015EA  6FA3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2163  0015EC  0E19               	movlw	25
  2164  0015EE  6FA2               	movwf	___wmul@multiplicand& (0+255),b
  2165  0015F0  ECAB  F00C         	call	___wmul	;wreg free
  2166  0015F4  0EDA               	movlw	low (_listeUsager+20)
  2167  0015F6  0100               	movlb	0	; force () banked
  2168  0015F8  25A0               	addwf	?___wmul& (0+255),w,b
  2169  0015FA  0100               	movlb	0	; force () banked
  2170  0015FC  6FA8               	movwf	strcmp@r& (0+255),b
  2171  0015FE  0E00               	movlw	high (_listeUsager+20)
  2172  001600  0100               	movlb	0	; force () banked
  2173  001602  21A1               	addwfc	(?___wmul+1)& (0+255),w,b
  2174  001604  0100               	movlb	0	; force () banked
  2175  001606  6FA9               	movwf	(strcmp@r+1)& (0+255),b
  2176  001608  EC61  F00A         	call	_strcmp	;wreg free
  2177  00160C  0100               	movlb	0	; force () banked
  2178  00160E  51A6               	movf	?_strcmp& (0+255),w,b
  2179  001610  11A7               	iorwf	(?_strcmp+1)& (0+255),w,b
  2180  001612  A4D8               	btfss	status,2,c
  2181  001614  EF0E  F00B         	goto	u651
  2182  001618  EF11  F00B         	goto	u650
  2183  00161C                     u651:
  2184  00161C  FFFF               	dw	65535	; assembler added errata NOP
  2185  00161E  EF15  F00B         	goto	l1709
  2186  001622                     u650:
  2187  001622  FFFF               	dw	65535	; assembler added errata NOP
  2188  001624                     
  2189                           ; BSR set to: 0
  2190                           ;main.c: 196:   return 1;
  2191  001624  0E01               	movlw	1
  2192  001626  EF17  F00B         	goto	l184
  2193  00162A                     l1709:
  2194  00162A  FFFF               	dw	65535	; assembler added errata NOP
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;main.c: 198:  return 0;
  2198  00162C  0E00               	movlw	0
  2199  00162E                     l184:
  2200  00162E  FFFF               	dw	65535	; assembler added errata NOP
  2201                           
  2202                           ; BSR set to: 0
  2203  001630  0012               	return		;funcret
  2204  001632  FFFF               	dw	65535	; errata NOP
  2205  001634                     __end_of_verifNip:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function _strcmp *****************
  2209 ;; Defined at:
  2210 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcmp.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  l               2    6[BANK0 ] PTR const unsigned char 
  2213 ;;		 -> gereTouche@nip(5), 
  2214 ;;  r               2    8[BANK0 ] PTR const unsigned char 
  2215 ;;		 -> listeUsager.nip(5), listeUsager(300), 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;		None
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  2    6[BANK0 ] int 
  2220 ;; Registers used:
  2221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2227 ;;      Params:         0       4       0       0       0       0       0
  2228 ;;      Locals:         0       0       0       0       0       0       0
  2229 ;;      Temps:          0       2       0       0       0       0       0
  2230 ;;      Totals:         0       6       0       0       0       0       0
  2231 ;;Total ram usage:        6 bytes
  2232 ;; Hardware stack levels used: 1
  2233 ;; This function calls:
  2234 ;;		Nothing
  2235 ;; This function is called by:
  2236 ;;		_verifNip
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text8
  2241  0014C2                     __ptext8:
  2242                           	callstack 0
  2243  0014C2                     _strcmp:
  2244                           	callstack 0
  2245  0014C2  FFFF               	dw	65535	; assembler added errata NOP
  2246  0014C4  EF6A  F00A         	goto	l1613
  2247  0014C8                     l1611:
  2248  0014C8  FFFF               	dw	65535	; assembler added errata NOP
  2249  0014CA  0100               	movlb	0	; () banked
  2250  0014CC  4BA6               	infsnz	strcmp@l& (0+255),f,b
  2251  0014CE  2BA7               	incf	(strcmp@l+1)& (0+255),f,b
  2252  0014D0  4BA8               	infsnz	strcmp@r& (0+255),f,b
  2253  0014D2  2BA9               	incf	(strcmp@r+1)& (0+255),f,b
  2254  0014D4                     l1613:
  2255  0014D4  FFFF               	dw	65535	; assembler added errata NOP
  2256  0014D6  C0A8  FFD9         	movff	strcmp@r,fsr2l
  2257  0014DA  C0A9  FFDA         	movff	strcmp@r+1,fsr2h
  2258  0014DE  C0A6  FFE1         	movff	strcmp@l,fsr1l
  2259  0014E2  C0A7  FFE2         	movff	strcmp@l+1,fsr1h
  2260  0014E6  50DE               	movf	postinc2,w,c
  2261  0014E8  18E6               	xorwf	postinc1,w,c
  2262  0014EA  A4D8               	btfss	status,2,c
  2263  0014EC  EF7A  F00A         	goto	u521
  2264  0014F0  EF7D  F00A         	goto	u520
  2265  0014F4                     u521:
  2266  0014F4  FFFF               	dw	65535	; assembler added errata NOP
  2267  0014F6  EF8B  F00A         	goto	l1617
  2268  0014FA                     u520:
  2269  0014FA  FFFF               	dw	65535	; assembler added errata NOP
  2270  0014FC  C0A6  FFD9         	movff	strcmp@l,fsr2l
  2271  001500  C0A7  FFDA         	movff	strcmp@l+1,fsr2h
  2272  001504  50DF               	movf	indf2,w,c
  2273  001506  A4D8               	btfss	status,2,c
  2274  001508  EF88  F00A         	goto	u531
  2275  00150C  EF8B  F00A         	goto	u530
  2276  001510                     u531:
  2277  001510  FFFF               	dw	65535	; assembler added errata NOP
  2278  001512  EF64  F00A         	goto	l1611
  2279  001516                     u530:
  2280  001516                     l1617:
  2281  001516  FFFF               	dw	65535	; assembler added errata NOP
  2282  001518  C0A6  FFD9         	movff	strcmp@l,fsr2l
  2283  00151C  C0A7  FFDA         	movff	strcmp@l+1,fsr2h
  2284  001520  50DF               	movf	indf2,w,c
  2285  001522  0100               	movlb	0	; () banked
  2286  001524  6FAA               	movwf	??_strcmp& (0+255),b
  2287  001526  C0A8  FFD9         	movff	strcmp@r,fsr2l
  2288  00152A  C0A9  FFDA         	movff	strcmp@r+1,fsr2h
  2289  00152E  50DF               	movf	indf2,w,c
  2290  001530  6FAB               	movwf	(??_strcmp+1)& (0+255),b
  2291  001532  51AB               	movf	(??_strcmp+1)& (0+255),w,b
  2292  001534  5DAA               	subwf	??_strcmp& (0+255),w,b
  2293  001536  6FA6               	movwf	?_strcmp& (0+255),b
  2294  001538  6BA7               	clrf	(?_strcmp+1)& (0+255),b
  2295  00153A  A0D8               	btfss	status,0,c
  2296  00153C  07A7               	decf	(?_strcmp+1)& (0+255),f,b
  2297  00153E                     
  2298                           ; BSR set to: 0
  2299  00153E  0012               	return		;funcret
  2300  001540  FFFF               	dw	65535	; errata NOP
  2301  001542                     __end_of_strcmp:
  2302                           	callstack 0
  2303                           
  2304 ;; *************** function _memset *****************
  2305 ;; Defined at:
  2306 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memset.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  dest            2    0[BANK0 ] PTR void 
  2309 ;;		 -> gereTouche@nip(5), 
  2310 ;;  c               2    2[BANK0 ] int 
  2311 ;;  n               2    4[BANK0 ] unsigned int 
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;  s               2   10[BANK0 ] PTR unsigned char 
  2314 ;;		 -> gereTouche@nip(5), 
  2315 ;;  k               2    8[BANK0 ] unsigned int 
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  2    0[BANK0 ] PTR void 
  2318 ;; Registers used:
  2319 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2325 ;;      Params:         0       6       0       0       0       0       0
  2326 ;;      Locals:         0       4       0       0       0       0       0
  2327 ;;      Temps:          0       2       0       0       0       0       0
  2328 ;;      Totals:         0      12       0       0       0       0       0
  2329 ;;Total ram usage:       12 bytes
  2330 ;; Hardware stack levels used: 1
  2331 ;; This function calls:
  2332 ;;		Nothing
  2333 ;; This function is called by:
  2334 ;;		_gereTouche
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           	psect	text9
  2339  000CFA                     __ptext9:
  2340                           	callstack 0
  2341  000CFA                     _memset:
  2342                           	callstack 0
  2343  000CFA  FFFF               	dw	65535	; assembler added errata NOP
  2344  000CFC  C0A0  F0AA         	movff	memset@dest,memset@s
  2345  000D00  C0A1  F0AB         	movff	memset@dest+1,memset@s+1
  2346  000D04  0100               	movlb	0	; () banked
  2347  000D06  51A4               	movf	memset@n& (0+255),w,b
  2348  000D08  11A5               	iorwf	(memset@n+1)& (0+255),w,b
  2349  000D0A  A4D8               	btfss	status,2,c
  2350  000D0C  EF8A  F006         	goto	u661
  2351  000D10  EF8D  F006         	goto	u660
  2352  000D14                     u661:
  2353  000D14  FFFF               	dw	65535	; assembler added errata NOP
  2354  000D16  EF94  F006         	goto	l1719
  2355  000D1A                     u660:
  2356  000D1A  FFFF               	dw	65535	; assembler added errata NOP
  2357  000D1C                     
  2358                           ; BSR set to: 0
  2359  000D1C  C0A0  F0A0         	movff	memset@dest,?_memset
  2360  000D20  C0A1  F0A1         	movff	memset@dest+1,?_memset+1
  2361  000D24  EF5D  F007         	goto	l967
  2362  000D28                     l1719:
  2363  000D28  FFFF               	dw	65535	; assembler added errata NOP
  2364                           
  2365                           ; BSR set to: 0
  2366  000D2A  C0AA  FFD9         	movff	memset@s,fsr2l
  2367  000D2E  C0AB  FFDA         	movff	memset@s+1,fsr2h
  2368  000D32  C0A2  FFDF         	movff	memset@c,indf2
  2369  000D36                     
  2370                           ; BSR set to: 0
  2371  000D36  51A4               	movf	memset@n& (0+255),w,b
  2372  000D38  25AA               	addwf	memset@s& (0+255),w,b
  2373  000D3A  6FA6               	movwf	??_memset& (0+255),b
  2374  000D3C  51A5               	movf	(memset@n+1)& (0+255),w,b
  2375  000D3E  21AB               	addwfc	(memset@s+1)& (0+255),w,b
  2376  000D40  6FA7               	movwf	(??_memset+1)& (0+255),b
  2377  000D42  0EFF               	movlw	255
  2378  000D44  25A6               	addwf	??_memset& (0+255),w,b
  2379  000D46  6ED9               	movwf	fsr2l,c
  2380  000D48  0EFF               	movlw	255
  2381  000D4A  21A7               	addwfc	(??_memset+1)& (0+255),w,b
  2382  000D4C  6EDA               	movwf	fsr2h,c
  2383  000D4E  C0A2  FFDF         	movff	memset@c,indf2
  2384  000D52  51A5               	movf	(memset@n+1)& (0+255),w,b
  2385  000D54  E107               	bnz	u671
  2386  000D56  0E03               	movlw	3
  2387  000D58  5DA4               	subwf	memset@n& (0+255),w,b
  2388  000D5A  B0D8               	btfsc	status,0,c
  2389  000D5C  EFB2  F006         	goto	u671
  2390  000D60  EFB5  F006         	goto	u670
  2391  000D64                     u671:
  2392  000D64  FFFF               	dw	65535	; assembler added errata NOP
  2393  000D66  EFBC  F006         	goto	l1727
  2394  000D6A                     u670:
  2395  000D6A  FFFF               	dw	65535	; assembler added errata NOP
  2396  000D6C                     
  2397                           ; BSR set to: 0
  2398  000D6C  C0A0  F0A0         	movff	memset@dest,?_memset
  2399  000D70  C0A1  F0A1         	movff	memset@dest+1,?_memset+1
  2400  000D74  EF5D  F007         	goto	l967
  2401  000D78                     l1727:
  2402  000D78  FFFF               	dw	65535	; assembler added errata NOP
  2403                           
  2404                           ; BSR set to: 0
  2405  000D7A  EE20 F001          	lfsr	2,1
  2406  000D7E  51AA               	movf	memset@s& (0+255),w,b
  2407  000D80  26D9               	addwf	fsr2l,f,c
  2408  000D82  51AB               	movf	(memset@s+1)& (0+255),w,b
  2409  000D84  22DA               	addwfc	fsr2h,f,c
  2410  000D86  C0A2  FFDF         	movff	memset@c,indf2
  2411  000D8A  EE20 F002          	lfsr	2,2
  2412  000D8E  51AA               	movf	memset@s& (0+255),w,b
  2413  000D90  26D9               	addwf	fsr2l,f,c
  2414  000D92  51AB               	movf	(memset@s+1)& (0+255),w,b
  2415  000D94  22DA               	addwfc	fsr2h,f,c
  2416  000D96  C0A2  FFDF         	movff	memset@c,indf2
  2417  000D9A  51A4               	movf	memset@n& (0+255),w,b
  2418  000D9C  25AA               	addwf	memset@s& (0+255),w,b
  2419  000D9E  6FA6               	movwf	??_memset& (0+255),b
  2420  000DA0  51A5               	movf	(memset@n+1)& (0+255),w,b
  2421  000DA2  21AB               	addwfc	(memset@s+1)& (0+255),w,b
  2422  000DA4  6FA7               	movwf	(??_memset+1)& (0+255),b
  2423  000DA6  0EFE               	movlw	254
  2424  000DA8  25A6               	addwf	??_memset& (0+255),w,b
  2425  000DAA  6ED9               	movwf	fsr2l,c
  2426  000DAC  0EFF               	movlw	255
  2427  000DAE  21A7               	addwfc	(??_memset+1)& (0+255),w,b
  2428  000DB0  6EDA               	movwf	fsr2h,c
  2429  000DB2  C0A2  FFDF         	movff	memset@c,indf2
  2430  000DB6  51A4               	movf	memset@n& (0+255),w,b
  2431  000DB8  25AA               	addwf	memset@s& (0+255),w,b
  2432  000DBA  6FA6               	movwf	??_memset& (0+255),b
  2433  000DBC  51A5               	movf	(memset@n+1)& (0+255),w,b
  2434  000DBE  21AB               	addwfc	(memset@s+1)& (0+255),w,b
  2435  000DC0  6FA7               	movwf	(??_memset+1)& (0+255),b
  2436  000DC2  0EFD               	movlw	253
  2437  000DC4  25A6               	addwf	??_memset& (0+255),w,b
  2438  000DC6  6ED9               	movwf	fsr2l,c
  2439  000DC8  0EFF               	movlw	255
  2440  000DCA  21A7               	addwfc	(??_memset+1)& (0+255),w,b
  2441  000DCC  6EDA               	movwf	fsr2h,c
  2442  000DCE  C0A2  FFDF         	movff	memset@c,indf2
  2443  000DD2                     
  2444                           ; BSR set to: 0
  2445  000DD2  51A5               	movf	(memset@n+1)& (0+255),w,b
  2446  000DD4  E107               	bnz	u681
  2447  000DD6  0E07               	movlw	7
  2448  000DD8  5DA4               	subwf	memset@n& (0+255),w,b
  2449  000DDA  B0D8               	btfsc	status,0,c
  2450  000DDC  EFF2  F006         	goto	u681
  2451  000DE0  EFF5  F006         	goto	u680
  2452  000DE4                     u681:
  2453  000DE4  FFFF               	dw	65535	; assembler added errata NOP
  2454  000DE6  EFFC  F006         	goto	l1735
  2455  000DEA                     u680:
  2456  000DEA  FFFF               	dw	65535	; assembler added errata NOP
  2457  000DEC                     
  2458                           ; BSR set to: 0
  2459  000DEC  C0A0  F0A0         	movff	memset@dest,?_memset
  2460  000DF0  C0A1  F0A1         	movff	memset@dest+1,?_memset+1
  2461  000DF4  EF5D  F007         	goto	l967
  2462  000DF8                     l1735:
  2463  000DF8  FFFF               	dw	65535	; assembler added errata NOP
  2464                           
  2465                           ; BSR set to: 0
  2466  000DFA  EE20 F003          	lfsr	2,3
  2467  000DFE  51AA               	movf	memset@s& (0+255),w,b
  2468  000E00  26D9               	addwf	fsr2l,f,c
  2469  000E02  51AB               	movf	(memset@s+1)& (0+255),w,b
  2470  000E04  22DA               	addwfc	fsr2h,f,c
  2471  000E06  C0A2  FFDF         	movff	memset@c,indf2
  2472  000E0A  51A4               	movf	memset@n& (0+255),w,b
  2473  000E0C  25AA               	addwf	memset@s& (0+255),w,b
  2474  000E0E  6FA6               	movwf	??_memset& (0+255),b
  2475  000E10  51A5               	movf	(memset@n+1)& (0+255),w,b
  2476  000E12  21AB               	addwfc	(memset@s+1)& (0+255),w,b
  2477  000E14  6FA7               	movwf	(??_memset+1)& (0+255),b
  2478  000E16  0EFC               	movlw	252
  2479  000E18  25A6               	addwf	??_memset& (0+255),w,b
  2480  000E1A  6ED9               	movwf	fsr2l,c
  2481  000E1C  0EFF               	movlw	255
  2482  000E1E  21A7               	addwfc	(??_memset+1)& (0+255),w,b
  2483  000E20  6EDA               	movwf	fsr2h,c
  2484  000E22  C0A2  FFDF         	movff	memset@c,indf2
  2485  000E26                     
  2486                           ; BSR set to: 0
  2487  000E26  51A5               	movf	(memset@n+1)& (0+255),w,b
  2488  000E28  E107               	bnz	u691
  2489  000E2A  0E09               	movlw	9
  2490  000E2C  5DA4               	subwf	memset@n& (0+255),w,b
  2491  000E2E  B0D8               	btfsc	status,0,c
  2492  000E30  EF1C  F007         	goto	u691
  2493  000E34  EF1F  F007         	goto	u690
  2494  000E38                     u691:
  2495  000E38  FFFF               	dw	65535	; assembler added errata NOP
  2496  000E3A  EF26  F007         	goto	l1743
  2497  000E3E                     u690:
  2498  000E3E  FFFF               	dw	65535	; assembler added errata NOP
  2499  000E40                     
  2500                           ; BSR set to: 0
  2501  000E40  C0A0  F0A0         	movff	memset@dest,?_memset
  2502  000E44  C0A1  F0A1         	movff	memset@dest+1,?_memset+1
  2503  000E48  EF5D  F007         	goto	l967
  2504  000E4C                     l1743:
  2505  000E4C  FFFF               	dw	65535	; assembler added errata NOP
  2506                           
  2507                           ; BSR set to: 0
  2508  000E4E  C0AA  F0A6         	movff	memset@s,??_memset
  2509  000E52  C0AB  F0A7         	movff	memset@s+1,??_memset+1
  2510  000E56  1FA6               	comf	??_memset& (0+255),f,b
  2511  000E58  1FA7               	comf	(??_memset+1)& (0+255),f,b
  2512  000E5A  4BA6               	infsnz	??_memset& (0+255),f,b
  2513  000E5C  2BA7               	incf	(??_memset+1)& (0+255),f,b
  2514  000E5E  0E03               	movlw	3
  2515  000E60  15A6               	andwf	??_memset& (0+255),w,b
  2516  000E62  6FA8               	movwf	memset@k& (0+255),b
  2517  000E64  6BA9               	clrf	(memset@k+1)& (0+255),b
  2518  000E66  51A8               	movf	memset@k& (0+255),w,b
  2519  000E68  27AA               	addwf	memset@s& (0+255),f,b
  2520  000E6A  51A9               	movf	(memset@k+1)& (0+255),w,b
  2521  000E6C  23AB               	addwfc	(memset@s+1)& (0+255),f,b
  2522  000E6E  51A8               	movf	memset@k& (0+255),w,b
  2523  000E70  5FA4               	subwf	memset@n& (0+255),f,b
  2524  000E72  51A9               	movf	(memset@k+1)& (0+255),w,b
  2525  000E74  5BA5               	subwfb	(memset@n+1)& (0+255),f,b
  2526  000E76  0EFC               	movlw	252
  2527  000E78  17A4               	andwf	memset@n& (0+255),f,b
  2528  000E7A  0EFF               	movlw	255
  2529  000E7C  17A5               	andwf	(memset@n+1)& (0+255),f,b
  2530  000E7E  EF4D  F007         	goto	l1751
  2531  000E82                     l1745:
  2532  000E82  FFFF               	dw	65535	; assembler added errata NOP
  2533                           
  2534                           ; BSR set to: 0
  2535  000E84  C0AA  FFD9         	movff	memset@s,fsr2l
  2536  000E88  C0AB  FFDA         	movff	memset@s+1,fsr2h
  2537  000E8C  C0A2  FFDF         	movff	memset@c,indf2
  2538  000E90                     
  2539                           ; BSR set to: 0
  2540  000E90  07A4               	decf	memset@n& (0+255),f,b
  2541  000E92  A0D8               	btfss	status,0,c
  2542  000E94  07A5               	decf	(memset@n+1)& (0+255),f,b
  2543  000E96                     
  2544                           ; BSR set to: 0
  2545  000E96  4BAA               	infsnz	memset@s& (0+255),f,b
  2546  000E98  2BAB               	incf	(memset@s+1)& (0+255),f,b
  2547  000E9A                     l1751:
  2548  000E9A  FFFF               	dw	65535	; assembler added errata NOP
  2549                           
  2550                           ; BSR set to: 0
  2551  000E9C  51A4               	movf	memset@n& (0+255),w,b
  2552  000E9E  11A5               	iorwf	(memset@n+1)& (0+255),w,b
  2553  000EA0  A4D8               	btfss	status,2,c
  2554  000EA2  EF55  F007         	goto	u701
  2555  000EA6  EF58  F007         	goto	u700
  2556  000EAA                     u701:
  2557  000EAA  FFFF               	dw	65535	; assembler added errata NOP
  2558  000EAC  EF41  F007         	goto	l1745
  2559  000EB0                     u700:
  2560  000EB0  FFFF               	dw	65535	; assembler added errata NOP
  2561  000EB2                     
  2562                           ; BSR set to: 0
  2563  000EB2  C0A0  F0A0         	movff	memset@dest,?_memset
  2564  000EB6  C0A1  F0A1         	movff	memset@dest+1,?_memset+1
  2565  000EBA                     l967:
  2566  000EBA  FFFF               	dw	65535	; assembler added errata NOP
  2567                           
  2568                           ; BSR set to: 0
  2569  000EBC  0012               	return		;funcret
  2570  000EBE  FFFF               	dw	65535	; errata NOP
  2571  000EC0                     __end_of_memset:
  2572                           	callstack 0
  2573                           
  2574 ;; *************** function _kbhit *****************
  2575 ;; Defined at:
  2576 ;;		line 126 in file "serie_458.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;		None
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;		None
  2581 ;; Return value:  Size  Location     Type
  2582 ;;		None               void
  2583 ;; Registers used:
  2584 ;;		status,0
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2590 ;;      Params:         0       0       0       0       0       0       0
  2591 ;;      Locals:         0       0       0       0       0       0       0
  2592 ;;      Temps:          0       0       0       0       0       0       0
  2593 ;;      Totals:         0       0       0       0       0       0       0
  2594 ;;Total ram usage:        0 bytes
  2595 ;; Hardware stack levels used: 1
  2596 ;; This function calls:
  2597 ;;		Nothing
  2598 ;; This function is called by:
  2599 ;;		_main
  2600 ;;		_gereTouche
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text10
  2605  001982                     __ptext10:
  2606                           	callstack 0
  2607  001982                     _kbhit:
  2608                           	callstack 0
  2609  001982  FFFF               	dw	65535	; assembler added errata NOP
  2610  001984                     
  2611                           ;serie_458.c: 128:     return RCIF;
  2612  001984  BA9E               	btfsc	158,5,c	;volatile
  2613  001986  EFC7  F00C         	goto	u171
  2614  00198A  EFCA  F00C         	goto	u170
  2615  00198E                     u171:
  2616  00198E  FFFF               	dw	65535	; assembler added errata NOP
  2617  001990  EFCE  F00C         	goto	l1221
  2618  001994                     u170:
  2619  001994  FFFF               	dw	65535	; assembler added errata NOP
  2620  001996  90D8               	bcf	status,0,c
  2621  001998  EFD0  F00C         	goto	l250
  2622  00199C                     l1221:
  2623  00199C  FFFF               	dw	65535	; assembler added errata NOP
  2624  00199E  80D8               	bsf	status,0,c
  2625  0019A0                     l250:
  2626  0019A0  FFFF               	dw	65535	; assembler added errata NOP
  2627  0019A2  0012               	return		;funcret
  2628  0019A4  FFFF               	dw	65535	; errata NOP
  2629  0019A6                     __end_of_kbhit:
  2630                           	callstack 0
  2631                           
  2632 ;; *************** function _getch *****************
  2633 ;; Defined at:
  2634 ;;		line 92 in file "serie_458.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;		None
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  c               1    0[BANK0 ] unsigned char 
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      unsigned char 
  2641 ;; Registers used:
  2642 ;;		wreg, status,2
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2648 ;;      Params:         0       0       0       0       0       0       0
  2649 ;;      Locals:         0       1       0       0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0       0       0
  2651 ;;      Totals:         0       1       0       0       0       0       0
  2652 ;;Total ram usage:        1 bytes
  2653 ;; Hardware stack levels used: 1
  2654 ;; This function calls:
  2655 ;;		Nothing
  2656 ;; This function is called by:
  2657 ;;		_gereTouche
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           	psect	text11
  2662  0019A6                     __ptext11:
  2663                           	callstack 0
  2664  0019A6                     _getch:
  2665                           	callstack 0
  2666  0019A6  FFFF               	dw	65535	; assembler added errata NOP
  2667  0019A8                     l231:
  2668  0019A8  FFFF               	dw	65535	; assembler added errata NOP
  2669                           
  2670                           ;serie_458.c: 96:     while (!RCIF)
  2671  0019AA  AA9E               	btfss	158,5,c	;volatile
  2672  0019AC  EFDA  F00C         	goto	u181
  2673  0019B0  EFDD  F00C         	goto	u180
  2674  0019B4                     u181:
  2675  0019B4  FFFF               	dw	65535	; assembler added errata NOP
  2676  0019B6  EFD4  F00C         	goto	l231
  2677  0019BA                     u180:
  2678  0019BA  FFFF               	dw	65535	; assembler added errata NOP
  2679  0019BC                     
  2680                           ;serie_458.c: 98:     c = RCREG;
  2681  0019BC  CFAE F0A0          	movff	4014,getch@c	;volatile
  2682  0019C0                     
  2683                           ;serie_458.c: 100:     return c;
  2684  0019C0  0100               	movlb	0	; force () banked
  2685  0019C2  51A0               	movf	getch@c& (0+255),w,b
  2686  0019C4                     
  2687                           ; BSR set to: 0
  2688  0019C4  0012               	return		;funcret
  2689  0019C6  FFFF               	dw	65535	; errata NOP
  2690  0019C8                     __end_of_getch:
  2691                           	callstack 0
  2692                           
  2693 ;; *************** function _atoi *****************
  2694 ;; Defined at:
  2695 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;  s               2    7[BANK0 ] PTR const unsigned char 
  2698 ;;		 -> gereTouche@touche(1), 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;  n               2   15[BANK0 ] int 
  2701 ;;  neg             2   13[BANK0 ] int 
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  2    7[BANK0 ] int 
  2704 ;; Registers used:
  2705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2711 ;;      Params:         0       2       0       0       0       0       0
  2712 ;;      Locals:         0       4       0       0       0       0       0
  2713 ;;      Temps:          0       4       0       0       0       0       0
  2714 ;;      Totals:         0      10       0       0       0       0       0
  2715 ;;Total ram usage:       10 bytes
  2716 ;; Hardware stack levels used: 1
  2717 ;; Hardware stack levels required when called: 1
  2718 ;; This function calls:
  2719 ;;		___wmul
  2720 ;;		_isdigit
  2721 ;;		_isspace
  2722 ;; This function is called by:
  2723 ;;		_gereTouche
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           	psect	text12
  2728  000EC0                     __ptext12:
  2729                           	callstack 0
  2730  000EC0                     _atoi:
  2731                           	callstack 0
  2732  000EC0  FFFF               	dw	65535	; assembler added errata NOP
  2733  000EC2  0E00               	movlw	0
  2734  000EC4  0100               	movlb	0	; () banked
  2735  000EC6  6FB0               	movwf	(atoi@n+1)& (0+255),b
  2736  000EC8  0E00               	movlw	0
  2737  000ECA  6FAF               	movwf	atoi@n& (0+255),b
  2738  000ECC  0E00               	movlw	0
  2739  000ECE  6FAE               	movwf	(atoi@neg+1)& (0+255),b
  2740  000ED0  0E00               	movlw	0
  2741  000ED2  6FAD               	movwf	atoi@neg& (0+255),b
  2742  000ED4  EF6F  F007         	goto	l1675
  2743  000ED8                     l1671:
  2744  000ED8  FFFF               	dw	65535	; assembler added errata NOP
  2745                           
  2746                           ; BSR set to: 0
  2747  000EDA  4BA7               	infsnz	atoi@s& (0+255),f,b
  2748  000EDC  2BA8               	incf	(atoi@s+1)& (0+255),f,b
  2749  000EDE                     l1675:
  2750  000EDE  FFFF               	dw	65535	; assembler added errata NOP
  2751                           
  2752                           ; BSR set to: 0
  2753  000EE0  C0A7  FFD9         	movff	atoi@s,fsr2l
  2754  000EE4  C0A8  FFDA         	movff	atoi@s+1,fsr2h
  2755  000EE8  0E20               	movlw	32
  2756  000EEA  18DE               	xorwf	postinc2,w,c
  2757  000EEC  B4D8               	btfsc	status,2,c
  2758  000EEE  EF7B  F007         	goto	u611
  2759  000EF2  EF7E  F007         	goto	u610
  2760  000EF6                     u611:
  2761  000EF6  FFFF               	dw	65535	; assembler added errata NOP
  2762  000EF8  EF6C  F007         	goto	l1671
  2763  000EFC                     u610:
  2764  000EFC  FFFF               	dw	65535	; assembler added errata NOP
  2765  000EFE                     
  2766                           ; BSR set to: 0
  2767  000EFE  0EF7               	movlw	247
  2768  000F00  6FA9               	movwf	??_atoi& (0+255),b
  2769  000F02  0EFF               	movlw	255
  2770  000F04  6FAA               	movwf	(??_atoi+1)& (0+255),b
  2771  000F06  C0A7  FFD9         	movff	atoi@s,fsr2l
  2772  000F0A  C0A8  FFDA         	movff	atoi@s+1,fsr2h
  2773  000F0E  50DF               	movf	indf2,w,c
  2774  000F10  6FAB               	movwf	(??_atoi+2)& (0+255),b
  2775  000F12  6BAC               	clrf	(??_atoi+3)& (0+255),b
  2776  000F14  51A9               	movf	??_atoi& (0+255),w,b
  2777  000F16  27AB               	addwf	(??_atoi+2)& (0+255),f,b
  2778  000F18  51AA               	movf	(??_atoi+1)& (0+255),w,b
  2779  000F1A  23AC               	addwfc	(??_atoi+3)& (0+255),f,b
  2780  000F1C  51AC               	movf	(??_atoi+3)& (0+255),w,b
  2781  000F1E  E10A               	bnz	u620
  2782  000F20  0E05               	movlw	5
  2783  000F22  5DAB               	subwf	(??_atoi+2)& (0+255),w,b
  2784  000F24  A0D8               	btfss	status,0,c
  2785  000F26  EF97  F007         	goto	u621
  2786  000F2A  EF9A  F007         	goto	u620
  2787  000F2E                     u621:
  2788  000F2E  FFFF               	dw	65535	; assembler added errata NOP
  2789  000F30  EF6C  F007         	goto	l1671
  2790  000F34                     u620:
  2791  000F34  FFFF               	dw	65535	; assembler added errata NOP
  2792  000F36  EFA7  F007         	goto	l1683
  2793  000F3A                     l1679:
  2794  000F3A  FFFF               	dw	65535	; assembler added errata NOP
  2795                           
  2796                           ; BSR set to: 0
  2797  000F3C  0E00               	movlw	0
  2798  000F3E  6FAE               	movwf	(atoi@neg+1)& (0+255),b
  2799  000F40  0E01               	movlw	1
  2800  000F42  6FAD               	movwf	atoi@neg& (0+255),b
  2801  000F44                     l1681:
  2802  000F44  FFFF               	dw	65535	; assembler added errata NOP
  2803                           
  2804                           ; BSR set to: 0
  2805  000F46  4BA7               	infsnz	atoi@s& (0+255),f,b
  2806  000F48  2BA8               	incf	(atoi@s+1)& (0+255),f,b
  2807  000F4A  EFE0  F007         	goto	l1691
  2808  000F4E                     l1683:
  2809  000F4E  FFFF               	dw	65535	; assembler added errata NOP
  2810                           
  2811                           ; BSR set to: 0
  2812  000F50  C0A7  FFD9         	movff	atoi@s,fsr2l
  2813  000F54  C0A8  FFDA         	movff	atoi@s+1,fsr2h
  2814  000F58  50DF               	movf	indf2,w,c
  2815  000F5A  6FA9               	movwf	??_atoi& (0+255),b
  2816  000F5C  6BAA               	clrf	(??_atoi+1)& (0+255),b
  2817                           
  2818                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2819                           ; Switch size 1, requested type "simple"
  2820                           ; Number of cases is 1, Range of values is 0 to 0
  2821                           ; switch strategies available:
  2822                           ; Name         Instructions Cycles
  2823                           ; simple_byte            4     3 (average)
  2824                           ;	Chosen strategy is simple_byte
  2825  000F5E  51AA               	movf	(??_atoi+1)& (0+255),w,b
  2826  000F60  0A00               	xorlw	0	; case 0
  2827  000F62  B4D8               	btfsc	status,2,c
  2828  000F64  EFB6  F007         	goto	l1995
  2829  000F68  EFE0  F007         	goto	l1691
  2830  000F6C                     l1995:
  2831  000F6C  FFFF               	dw	65535	; assembler added errata NOP
  2832                           
  2833                           ; BSR set to: 0
  2834                           ; Switch size 1, requested type "simple"
  2835                           ; Number of cases is 2, Range of values is 43 to 45
  2836                           ; switch strategies available:
  2837                           ; Name         Instructions Cycles
  2838                           ; simple_byte            7     4 (average)
  2839                           ;	Chosen strategy is simple_byte
  2840  000F6E  51A9               	movf	??_atoi& (0+255),w,b
  2841  000F70  0A2B               	xorlw	43	; case 43
  2842  000F72  B4D8               	btfsc	status,2,c
  2843  000F74  EFA2  F007         	goto	l1681
  2844  000F78  0A06               	xorlw	6	; case 45
  2845  000F7A  B4D8               	btfsc	status,2,c
  2846  000F7C  EF9D  F007         	goto	l1679
  2847  000F80  EFE0  F007         	goto	l1691
  2848  000F84                     l1685:
  2849  000F84  FFFF               	dw	65535	; assembler added errata NOP
  2850                           
  2851                           ; BSR set to: 0
  2852  000F86  C0AF  F0A0         	movff	atoi@n,___wmul@multiplier
  2853  000F8A  C0B0  F0A1         	movff	atoi@n+1,___wmul@multiplier+1
  2854  000F8E  0E00               	movlw	0
  2855  000F90  6FA3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2856  000F92  0E0A               	movlw	10
  2857  000F94  6FA2               	movwf	___wmul@multiplicand& (0+255),b
  2858  000F96  ECAB  F00C         	call	___wmul	;wreg free
  2859  000F9A  C0A7  FFD9         	movff	atoi@s,fsr2l
  2860  000F9E  C0A8  FFDA         	movff	atoi@s+1,fsr2h
  2861  000FA2  50DF               	movf	indf2,w,c
  2862  000FA4  0100               	movlb	0	; () banked
  2863  000FA6  6FA9               	movwf	??_atoi& (0+255),b
  2864  000FA8  51A9               	movf	??_atoi& (0+255),w,b
  2865  000FAA  5FA0               	subwf	?___wmul& (0+255),f,b
  2866  000FAC  0E00               	movlw	0
  2867  000FAE  5BA1               	subwfb	(?___wmul+1)& (0+255),f,b
  2868  000FB0  0E30               	movlw	48
  2869  000FB2  25A0               	addwf	?___wmul& (0+255),w,b
  2870  000FB4  6FAF               	movwf	atoi@n& (0+255),b
  2871  000FB6  0E00               	movlw	0
  2872  000FB8  21A1               	addwfc	(?___wmul+1)& (0+255),w,b
  2873  000FBA  6FB0               	movwf	(atoi@n+1)& (0+255),b
  2874  000FBC                     
  2875                           ; BSR set to: 0
  2876  000FBC  4BA7               	infsnz	atoi@s& (0+255),f,b
  2877  000FBE  2BA8               	incf	(atoi@s+1)& (0+255),f,b
  2878  000FC0                     l1691:
  2879  000FC0  FFFF               	dw	65535	; assembler added errata NOP
  2880                           
  2881                           ; BSR set to: 0
  2882  000FC2  0ED0               	movlw	208
  2883  000FC4  6FA9               	movwf	??_atoi& (0+255),b
  2884  000FC6  0EFF               	movlw	255
  2885  000FC8  6FAA               	movwf	(??_atoi+1)& (0+255),b
  2886  000FCA  C0A7  FFD9         	movff	atoi@s,fsr2l
  2887  000FCE  C0A8  FFDA         	movff	atoi@s+1,fsr2h
  2888  000FD2  50DF               	movf	indf2,w,c
  2889  000FD4  6FAB               	movwf	(??_atoi+2)& (0+255),b
  2890  000FD6  6BAC               	clrf	(??_atoi+3)& (0+255),b
  2891  000FD8  51A9               	movf	??_atoi& (0+255),w,b
  2892  000FDA  27AB               	addwf	(??_atoi+2)& (0+255),f,b
  2893  000FDC  51AA               	movf	(??_atoi+1)& (0+255),w,b
  2894  000FDE  23AC               	addwfc	(??_atoi+3)& (0+255),f,b
  2895  000FE0  51AC               	movf	(??_atoi+3)& (0+255),w,b
  2896  000FE2  E10A               	bnz	u630
  2897  000FE4  0E0A               	movlw	10
  2898  000FE6  5DAB               	subwf	(??_atoi+2)& (0+255),w,b
  2899  000FE8  A0D8               	btfss	status,0,c
  2900  000FEA  EFF9  F007         	goto	u631
  2901  000FEE  EFFC  F007         	goto	u630
  2902  000FF2                     u631:
  2903  000FF2  FFFF               	dw	65535	; assembler added errata NOP
  2904  000FF4  EFC2  F007         	goto	l1685
  2905  000FF8                     u630:
  2906  000FF8  FFFF               	dw	65535	; assembler added errata NOP
  2907  000FFA                     
  2908                           ; BSR set to: 0
  2909  000FFA  51AD               	movf	atoi@neg& (0+255),w,b
  2910  000FFC  11AE               	iorwf	(atoi@neg+1)& (0+255),w,b
  2911  000FFE  A4D8               	btfss	status,2,c
  2912  001000  EF04  F008         	goto	u641
  2913  001004  EF07  F008         	goto	u640
  2914  001008                     u641:
  2915  001008  FFFF               	dw	65535	; assembler added errata NOP
  2916  00100A  EF16  F008         	goto	l946
  2917  00100E                     u640:
  2918  00100E  FFFF               	dw	65535	; assembler added errata NOP
  2919  001010                     
  2920                           ; BSR set to: 0
  2921  001010  C0AF  F0A9         	movff	atoi@n,??_atoi
  2922  001014  C0B0  F0AA         	movff	atoi@n+1,??_atoi+1
  2923  001018  1FA9               	comf	??_atoi& (0+255),f,b
  2924  00101A  1FAA               	comf	(??_atoi+1)& (0+255),f,b
  2925  00101C  4BA9               	infsnz	??_atoi& (0+255),f,b
  2926  00101E  2BAA               	incf	(??_atoi+1)& (0+255),f,b
  2927  001020  C0A9  F0A7         	movff	??_atoi,?_atoi
  2928  001024  C0AA  F0A8         	movff	??_atoi+1,?_atoi+1
  2929  001028  EF1B  F008         	goto	l949
  2930  00102C                     l946:
  2931  00102C  FFFF               	dw	65535	; assembler added errata NOP
  2932                           
  2933                           ; BSR set to: 0
  2934  00102E  C0AF  F0A7         	movff	atoi@n,?_atoi
  2935  001032  C0B0  F0A8         	movff	atoi@n+1,?_atoi+1
  2936  001036                     l949:
  2937  001036  FFFF               	dw	65535	; assembler added errata NOP
  2938                           
  2939                           ; BSR set to: 0
  2940  001038  0012               	return		;funcret
  2941  00103A  FFFF               	dw	65535	; errata NOP
  2942  00103C                     __end_of_atoi:
  2943                           	callstack 0
  2944                           
  2945 ;; *************** function _isspace *****************
  2946 ;; Defined at:
  2947 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;  c               2    0[BANK0 ] int 
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;		None
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  2    0[BANK0 ] int 
  2954 ;; Registers used:
  2955 ;;		wreg, status,2, status,0
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2961 ;;      Params:         0       2       0       0       0       0       0
  2962 ;;      Locals:         0       1       0       0       0       0       0
  2963 ;;      Temps:          0       4       0       0       0       0       0
  2964 ;;      Totals:         0       7       0       0       0       0       0
  2965 ;;Total ram usage:        7 bytes
  2966 ;; Hardware stack levels used: 1
  2967 ;; This function calls:
  2968 ;;		Nothing
  2969 ;; This function is called by:
  2970 ;;		_atoi
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           	psect	text13
  2975  001790                     __ptext13:
  2976                           	callstack 0
  2977  001790                     _isspace:
  2978                           	callstack 28
  2979  001790  FFFF               	dw	65535	; assembler added errata NOP
  2980  001792  0E01               	movlw	1
  2981  001794  0100               	movlb	0	; () banked
  2982  001796  6FA6               	movwf	_isspace$1197& (0+255),b
  2983  001798                     
  2984                           ; BSR set to: 0
  2985  001798  0E20               	movlw	32
  2986  00179A  19A0               	xorwf	isspace@c& (0+255),w,b
  2987  00179C  11A1               	iorwf	(isspace@c+1)& (0+255),w,b
  2988  00179E  B4D8               	btfsc	status,2,c
  2989  0017A0  EFD4  F00B         	goto	u541
  2990  0017A4  EFD7  F00B         	goto	u540
  2991  0017A8                     u541:
  2992  0017A8  FFFF               	dw	65535	; assembler added errata NOP
  2993  0017AA  EFF3  F00B         	goto	l1635
  2994  0017AE                     u540:
  2995  0017AE  FFFF               	dw	65535	; assembler added errata NOP
  2996  0017B0                     
  2997                           ; BSR set to: 0
  2998  0017B0  0EF7               	movlw	247
  2999  0017B2  6FA2               	movwf	??_isspace& (0+255),b
  3000  0017B4  0EFF               	movlw	255
  3001  0017B6  6FA3               	movwf	(??_isspace+1)& (0+255),b
  3002  0017B8  C0A0  F0A4         	movff	isspace@c,??_isspace+2
  3003  0017BC  C0A1  F0A5         	movff	isspace@c+1,??_isspace+3
  3004  0017C0  51A2               	movf	??_isspace& (0+255),w,b
  3005  0017C2  27A4               	addwf	(??_isspace+2)& (0+255),f,b
  3006  0017C4  51A3               	movf	(??_isspace+1)& (0+255),w,b
  3007  0017C6  23A5               	addwfc	(??_isspace+3)& (0+255),f,b
  3008  0017C8  51A5               	movf	(??_isspace+3)& (0+255),w,b
  3009  0017CA  E10A               	bnz	u550
  3010  0017CC  0E05               	movlw	5
  3011  0017CE  5DA4               	subwf	(??_isspace+2)& (0+255),w,b
  3012  0017D0  A0D8               	btfss	status,0,c
  3013  0017D2  EFED  F00B         	goto	u551
  3014  0017D6  EFF0  F00B         	goto	u550
  3015  0017DA                     u551:
  3016  0017DA  FFFF               	dw	65535	; assembler added errata NOP
  3017  0017DC  EFF3  F00B         	goto	l1635
  3018  0017E0                     u550:
  3019  0017E0  FFFF               	dw	65535	; assembler added errata NOP
  3020  0017E2                     
  3021                           ; BSR set to: 0
  3022  0017E2  0E00               	movlw	0
  3023  0017E4  6FA6               	movwf	_isspace$1197& (0+255),b
  3024  0017E6                     l1635:
  3025  0017E6  FFFF               	dw	65535	; assembler added errata NOP
  3026                           
  3027                           ; BSR set to: 0
  3028  0017E8  C0A6  F0A0         	movff	_isspace$1197,?_isspace
  3029  0017EC  6BA1               	clrf	(?_isspace+1)& (0+255),b
  3030  0017EE                     
  3031                           ; BSR set to: 0
  3032  0017EE  0012               	return		;funcret
  3033  0017F0  FFFF               	dw	65535	; errata NOP
  3034  0017F2                     __end_of_isspace:
  3035                           	callstack 0
  3036                           
  3037 ;; *************** function _isdigit *****************
  3038 ;; Defined at:
  3039 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;  c               2    0[BANK0 ] int 
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;		None
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  2    0[BANK0 ] int 
  3046 ;; Registers used:
  3047 ;;		wreg, status,2, status,0
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3053 ;;      Params:         0       2       0       0       0       0       0
  3054 ;;      Locals:         0       0       0       0       0       0       0
  3055 ;;      Temps:          0       4       0       0       0       0       0
  3056 ;;      Totals:         0       6       0       0       0       0       0
  3057 ;;Total ram usage:        6 bytes
  3058 ;; Hardware stack levels used: 1
  3059 ;; This function calls:
  3060 ;;		Nothing
  3061 ;; This function is called by:
  3062 ;;		_atoi
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           	psect	text14
  3067  0018A0                     __ptext14:
  3068                           	callstack 0
  3069  0018A0                     _isdigit:
  3070                           	callstack 28
  3071  0018A0  FFFF               	dw	65535	; assembler added errata NOP
  3072  0018A2  0ED0               	movlw	208
  3073  0018A4  0100               	movlb	0	; () banked
  3074  0018A6  6FA2               	movwf	??_isdigit& (0+255),b
  3075  0018A8  0EFF               	movlw	255
  3076  0018AA  6FA3               	movwf	(??_isdigit+1)& (0+255),b
  3077  0018AC  C0A0  F0A4         	movff	isdigit@c,??_isdigit+2
  3078  0018B0  C0A1  F0A5         	movff	isdigit@c+1,??_isdigit+3
  3079  0018B4  51A2               	movf	??_isdigit& (0+255),w,b
  3080  0018B6  27A4               	addwf	(??_isdigit+2)& (0+255),f,b
  3081  0018B8  51A3               	movf	(??_isdigit+1)& (0+255),w,b
  3082  0018BA  23A5               	addwfc	(??_isdigit+3)& (0+255),f,b
  3083  0018BC  51A5               	movf	(??_isdigit+3)& (0+255),w,b
  3084  0018BE  E10B               	bnz	u560
  3085  0018C0  0E0A               	movlw	10
  3086  0018C2  5DA4               	subwf	(??_isdigit+2)& (0+255),w,b
  3087  0018C4  A0D8               	btfss	status,0,c
  3088  0018C6  EF67  F00C         	goto	u561
  3089  0018CA  EF6B  F00C         	goto	u560
  3090  0018CE                     u561:
  3091  0018CE  FFFF               	dw	65535	; assembler added errata NOP
  3092  0018D0  0E01               	movlw	1
  3093  0018D2  EF6D  F00C         	goto	u570
  3094  0018D6                     u560:
  3095  0018D6  FFFF               	dw	65535	; assembler added errata NOP
  3096  0018D8  0E00               	movlw	0
  3097  0018DA                     u570:
  3098  0018DA  FFFF               	dw	65535	; assembler added errata NOP
  3099  0018DC  6FA0               	movwf	?_isdigit& (0+255),b
  3100  0018DE  6BA1               	clrf	(?_isdigit+1)& (0+255),b
  3101  0018E0                     
  3102                           ; BSR set to: 0
  3103  0018E0  0012               	return		;funcret
  3104  0018E2  FFFF               	dw	65535	; errata NOP
  3105  0018E4                     __end_of_isdigit:
  3106                           	callstack 0
  3107                           
  3108 ;; *************** function _affiche *****************
  3109 ;; Defined at:
  3110 ;;		line 207 in file "main.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;  etat            2   19[BANK0 ] unsigned int 
  3113 ;;  usager          2   21[BANK0 ] int 
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;		None
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  1    wreg      void 
  3118 ;; Registers used:
  3119 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3125 ;;      Params:         0       4       0       0       0       0       0
  3126 ;;      Locals:         0       0       0       0       0       0       0
  3127 ;;      Temps:          0       2       0       0       0       0       0
  3128 ;;      Totals:         0       6       0       0       0       0       0
  3129 ;;Total ram usage:        6 bytes
  3130 ;; Hardware stack levels used: 1
  3131 ;; Hardware stack levels required when called: 5
  3132 ;; This function calls:
  3133 ;;		___wmul
  3134 ;;		_lcd_curseurHome
  3135 ;;		_lcd_effaceAffichage
  3136 ;;		_lcd_gotoXY
  3137 ;;		_lcd_putMessage
  3138 ;; This function is called by:
  3139 ;;		_main
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text15
  3144  000AC8                     __ptext15:
  3145                           	callstack 0
  3146  000AC8                     _affiche:
  3147                           	callstack 0
  3148  000AC8  FFFF               	dw	65535	; assembler added errata NOP
  3149  000ACA                     
  3150                           ;main.c: 207: void affiche(unsigned int etat, int usager);main.c: 208: {;main.c: 209:  s
      +                          witch(etat)
  3151  000ACA  EF55  F006         	goto	l1885
  3152  000ACE                     l1839:
  3153  000ACE  FFFF               	dw	65535	; assembler added errata NOP
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;main.c: 212:    lcd_effaceAffichage();
  3157  000AD0  ECFA  F00C         	call	_lcd_effaceAffichage	;wreg free
  3158                           
  3159                           ;main.c: 213:    lcd_curseurHome();
  3160  000AD4  EC03  F00D         	call	_lcd_curseurHome	;wreg free
  3161  000AD8                     
  3162                           ;main.c: 214:    lcd_putMessage("acces local 283");
  3163  000AD8  0E2D               	movlw	low STR_1
  3164  000ADA  0100               	movlb	0	; force () banked
  3165  000ADC  6FAA               	movwf	lcd_putMessage@chaine& (0+255),b
  3166  000ADE  0E06               	movlw	high STR_1
  3167  000AE0  6FAB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3168  000AE2  51AA               	movf	lcd_putMessage@chaine& (0+255),w,b
  3169  000AE4  11AB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3170  000AE6  A4D8               	btfss	status,2,c
  3171  000AE8  0E00               	movlw	low (__mediumconst shr (0+16))
  3172  000AEA  6FAC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3173  000AEC  ECB4  F008         	call	_lcd_putMessage	;wreg free
  3174  000AF0                     
  3175                           ;main.c: 215:    lcd_gotoXY(1, 2);
  3176  000AF0  0E02               	movlw	2
  3177  000AF2  0100               	movlb	0	; force () banked
  3178  000AF4  6FA6               	movwf	lcd_gotoXY@y& (0+255),b
  3179  000AF6  0E01               	movlw	1
  3180  000AF8  EC15  F00A         	call	_lcd_gotoXY
  3181                           
  3182                           ;main.c: 216:    lcd_putMessage("<Enter>");
  3183  000AFC  0E53               	movlw	low STR_2
  3184  000AFE  0100               	movlb	0	; force () banked
  3185  000B00  6FAA               	movwf	lcd_putMessage@chaine& (0+255),b
  3186  000B02  0E06               	movlw	high STR_2
  3187  000B04  6FAB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3188  000B06  51AA               	movf	lcd_putMessage@chaine& (0+255),w,b
  3189  000B08  11AB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3190  000B0A  A4D8               	btfss	status,2,c
  3191  000B0C  0E00               	movlw	low (__mediumconst shr (0+16))
  3192  000B0E  6FAC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3193  000B10  ECB4  F008         	call	_lcd_putMessage	;wreg free
  3194                           
  3195                           ;main.c: 217:    break;
  3196  000B14  EF7A  F006         	goto	l194
  3197  000B18                     l1845:
  3198  000B18  FFFF               	dw	65535	; assembler added errata NOP
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;main.c: 220:    lcd_effaceAffichage();
  3202  000B1A  ECFA  F00C         	call	_lcd_effaceAffichage	;wreg free
  3203                           
  3204                           ;main.c: 221:    lcd_curseurHome();
  3205  000B1E  EC03  F00D         	call	_lcd_curseurHome	;wreg free
  3206  000B22                     
  3207                           ;main.c: 222:    lcd_putMessage("Entrez votre no d'etudiant");
  3208  000B22  0E01               	movlw	low STR_3
  3209  000B24  0100               	movlb	0	; force () banked
  3210  000B26  6FAA               	movwf	lcd_putMessage@chaine& (0+255),b
  3211  000B28  0E06               	movlw	high STR_3
  3212  000B2A  6FAB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3213  000B2C  51AA               	movf	lcd_putMessage@chaine& (0+255),w,b
  3214  000B2E  11AB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3215  000B30  A4D8               	btfss	status,2,c
  3216  000B32  0E00               	movlw	low (__mediumconst shr (0+16))
  3217  000B34  6FAC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3218  000B36  ECB4  F008         	call	_lcd_putMessage	;wreg free
  3219  000B3A                     
  3220                           ;main.c: 223:    lcd_gotoXY(1, 3);
  3221  000B3A  0E03               	movlw	3
  3222  000B3C  0100               	movlb	0	; force () banked
  3223  000B3E  6FA6               	movwf	lcd_gotoXY@y& (0+255),b
  3224  000B40  0E01               	movlw	1
  3225  000B42  EC15  F00A         	call	_lcd_gotoXY
  3226                           
  3227                           ;main.c: 224:    lcd_putMessage("<Enter>");
  3228  000B46  0E53               	movlw	low STR_2
  3229  000B48  0100               	movlb	0	; force () banked
  3230  000B4A  6FAA               	movwf	lcd_putMessage@chaine& (0+255),b
  3231  000B4C  0E06               	movlw	high STR_2
  3232  000B4E  6FAB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3233  000B50  51AA               	movf	lcd_putMessage@chaine& (0+255),w,b
  3234  000B52  11AB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3235  000B54  A4D8               	btfss	status,2,c
  3236  000B56  0E00               	movlw	low (__mediumconst shr (0+16))
  3237  000B58  6FAC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3238  000B5A  ECB4  F008         	call	_lcd_putMessage	;wreg free
  3239  000B5E                     
  3240                           ;main.c: 225:    lcd_gotoXY(1, 4);
  3241  000B5E  0E04               	movlw	4
  3242  000B60  0100               	movlb	0	; force () banked
  3243  000B62  6FA6               	movwf	lcd_gotoXY@y& (0+255),b
  3244  000B64  0E01               	movlw	1
  3245  000B66  EC15  F00A         	call	_lcd_gotoXY
  3246                           
  3247                           ;main.c: 226:    break;
  3248  000B6A  EF7A  F006         	goto	l194
  3249  000B6E                     l1853:
  3250  000B6E  FFFF               	dw	65535	; assembler added errata NOP
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;main.c: 229:    lcd_effaceAffichage();
  3254  000B70  ECFA  F00C         	call	_lcd_effaceAffichage	;wreg free
  3255                           
  3256                           ;main.c: 230:    lcd_curseurHome();
  3257  000B74  EC03  F00D         	call	_lcd_curseurHome	;wreg free
  3258  000B78                     
  3259                           ;main.c: 231:    lcd_putMessage("Entrez votre NIP");
  3260  000B78  0E1C               	movlw	low STR_5
  3261  000B7A  0100               	movlb	0	; force () banked
  3262  000B7C  6FAA               	movwf	lcd_putMessage@chaine& (0+255),b
  3263  000B7E  0E06               	movlw	high STR_5
  3264  000B80  6FAB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3265  000B82  51AA               	movf	lcd_putMessage@chaine& (0+255),w,b
  3266  000B84  11AB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3267  000B86  A4D8               	btfss	status,2,c
  3268  000B88  0E00               	movlw	low (__mediumconst shr (0+16))
  3269  000B8A  6FAC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3270  000B8C  ECB4  F008         	call	_lcd_putMessage	;wreg free
  3271  000B90                     
  3272                           ;main.c: 232:    lcd_gotoXY(1, 2);
  3273  000B90  0E02               	movlw	2
  3274  000B92  0100               	movlb	0	; force () banked
  3275  000B94  6FA6               	movwf	lcd_gotoXY@y& (0+255),b
  3276  000B96  0E01               	movlw	1
  3277  000B98  EC15  F00A         	call	_lcd_gotoXY
  3278                           
  3279                           ;main.c: 233:    lcd_putMessage("<Enter>");
  3280  000B9C  0E53               	movlw	low STR_2
  3281  000B9E  0100               	movlb	0	; force () banked
  3282  000BA0  6FAA               	movwf	lcd_putMessage@chaine& (0+255),b
  3283  000BA2  0E06               	movlw	high STR_2
  3284  000BA4  6FAB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3285  000BA6  51AA               	movf	lcd_putMessage@chaine& (0+255),w,b
  3286  000BA8  11AB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3287  000BAA  A4D8               	btfss	status,2,c
  3288  000BAC  0E00               	movlw	low (__mediumconst shr (0+16))
  3289  000BAE  6FAC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3290  000BB0  ECB4  F008         	call	_lcd_putMessage	;wreg free
  3291  000BB4                     
  3292                           ;main.c: 234:    lcd_gotoXY(1, 3);
  3293  000BB4  0E03               	movlw	3
  3294  000BB6  0100               	movlb	0	; force () banked
  3295  000BB8  6FA6               	movwf	lcd_gotoXY@y& (0+255),b
  3296  000BBA  0E01               	movlw	1
  3297  000BBC  EC15  F00A         	call	_lcd_gotoXY
  3298                           
  3299                           ;main.c: 235:    break;
  3300  000BC0  EF7A  F006         	goto	l194
  3301  000BC4                     l1861:
  3302  000BC4  FFFF               	dw	65535	; assembler added errata NOP
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;main.c: 238:    lcd_effaceAffichage();
  3306  000BC6  ECFA  F00C         	call	_lcd_effaceAffichage	;wreg free
  3307                           
  3308                           ;main.c: 239:    lcd_curseurHome();
  3309  000BCA  EC03  F00D         	call	_lcd_curseurHome	;wreg free
  3310  000BCE                     
  3311                           ;main.c: 240:    lcd_putMessage("Bonjour ");
  3312  000BCE  0E4A               	movlw	low STR_7
  3313  000BD0  0100               	movlb	0	; force () banked
  3314  000BD2  6FAA               	movwf	lcd_putMessage@chaine& (0+255),b
  3315  000BD4  0E06               	movlw	high STR_7
  3316  000BD6  6FAB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3317  000BD8  51AA               	movf	lcd_putMessage@chaine& (0+255),w,b
  3318  000BDA  11AB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3319  000BDC  A4D8               	btfss	status,2,c
  3320  000BDE  0E00               	movlw	low (__mediumconst shr (0+16))
  3321  000BE0  6FAC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3322  000BE2  ECB4  F008         	call	_lcd_putMessage	;wreg free
  3323  000BE6                     
  3324                           ;main.c: 241:    lcd_putMessage(listeUsager[usager].nom);
  3325  000BE6  C0B5  F0A0         	movff	affiche@usager,___wmul@multiplier
  3326  000BEA  C0B6  F0A1         	movff	affiche@usager+1,___wmul@multiplier+1
  3327  000BEE  0E00               	movlw	0
  3328  000BF0  0100               	movlb	0	; force () banked
  3329  000BF2  6FA3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3330  000BF4  0E19               	movlw	25
  3331  000BF6  6FA2               	movwf	___wmul@multiplicand& (0+255),b
  3332  000BF8  ECAB  F00C         	call	___wmul	;wreg free
  3333  000BFC  0EC6               	movlw	low _listeUsager
  3334  000BFE  0100               	movlb	0	; force () banked
  3335  000C00  25A0               	addwf	?___wmul& (0+255),w,b
  3336  000C02  0100               	movlb	0	; force () banked
  3337  000C04  6FB7               	movwf	??_affiche& (0+255),b
  3338  000C06  0E00               	movlw	high _listeUsager
  3339  000C08  0100               	movlb	0	; force () banked
  3340  000C0A  21A1               	addwfc	(?___wmul+1)& (0+255),w,b
  3341  000C0C  0100               	movlb	0	; force () banked
  3342  000C0E  6FB8               	movwf	(??_affiche+1)& (0+255),b
  3343  000C10  C0B7  F0AA         	movff	??_affiche,lcd_putMessage@chaine
  3344  000C14  C0B8  F0AB         	movff	??_affiche+1,lcd_putMessage@chaine+1
  3345  000C18  0100               	movlb	0	; force () banked
  3346  000C1A  51AA               	movf	lcd_putMessage@chaine& (0+255),w,b
  3347  000C1C  11AB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3348  000C1E  A4D8               	btfss	status,2,c
  3349  000C20  0E20               	movlw	32
  3350  000C22  6FAC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3351  000C24  ECB4  F008         	call	_lcd_putMessage	;wreg free
  3352  000C28                     
  3353                           ;main.c: 242:    lcd_gotoXY(1, 2);
  3354  000C28  0E02               	movlw	2
  3355  000C2A  0100               	movlb	0	; force () banked
  3356  000C2C  6FA6               	movwf	lcd_gotoXY@y& (0+255),b
  3357  000C2E  0E01               	movlw	1
  3358  000C30  EC15  F00A         	call	_lcd_gotoXY
  3359  000C34                     
  3360                           ;main.c: 243:    lcd_putMessage("<Enter>");
  3361  000C34  0E53               	movlw	low STR_2
  3362  000C36  0100               	movlb	0	; force () banked
  3363  000C38  6FAA               	movwf	lcd_putMessage@chaine& (0+255),b
  3364  000C3A  0E06               	movlw	high STR_2
  3365  000C3C  6FAB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3366  000C3E  51AA               	movf	lcd_putMessage@chaine& (0+255),w,b
  3367  000C40  11AB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3368  000C42  A4D8               	btfss	status,2,c
  3369  000C44  0E00               	movlw	low (__mediumconst shr (0+16))
  3370  000C46  6FAC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3371  000C48  ECB4  F008         	call	_lcd_putMessage	;wreg free
  3372  000C4C                     
  3373                           ;main.c: 244:    lcd_gotoXY(1, 3);
  3374  000C4C  0E03               	movlw	3
  3375  000C4E  0100               	movlb	0	; force () banked
  3376  000C50  6FA6               	movwf	lcd_gotoXY@y& (0+255),b
  3377  000C52  0E01               	movlw	1
  3378  000C54  EC15  F00A         	call	_lcd_gotoXY
  3379  000C58                     
  3380                           ;main.c: 245:    PORTCbits.RC0 = 1;
  3381  000C58  8082               	bsf	130,0,c	;volatile
  3382                           
  3383                           ;main.c: 246:    break;
  3384  000C5A  EF7A  F006         	goto	l194
  3385  000C5E                     l1875:
  3386  000C5E  FFFF               	dw	65535	; assembler added errata NOP
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;main.c: 249:    lcd_effaceAffichage();
  3390  000C60  ECFA  F00C         	call	_lcd_effaceAffichage	;wreg free
  3391                           
  3392                           ;main.c: 250:    lcd_curseurHome();
  3393  000C64  EC03  F00D         	call	_lcd_curseurHome	;wreg free
  3394  000C68                     
  3395                           ;main.c: 251:    lcd_putMessage("acces refuse");
  3396  000C68  0E3D               	movlw	low STR_9
  3397  000C6A  0100               	movlb	0	; force () banked
  3398  000C6C  6FAA               	movwf	lcd_putMessage@chaine& (0+255),b
  3399  000C6E  0E06               	movlw	high STR_9
  3400  000C70  6FAB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3401  000C72  51AA               	movf	lcd_putMessage@chaine& (0+255),w,b
  3402  000C74  11AB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3403  000C76  A4D8               	btfss	status,2,c
  3404  000C78  0E00               	movlw	low (__mediumconst shr (0+16))
  3405  000C7A  6FAC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3406  000C7C  ECB4  F008         	call	_lcd_putMessage	;wreg free
  3407  000C80                     
  3408                           ;main.c: 252:    lcd_gotoXY(1, 2);
  3409  000C80  0E02               	movlw	2
  3410  000C82  0100               	movlb	0	; force () banked
  3411  000C84  6FA6               	movwf	lcd_gotoXY@y& (0+255),b
  3412  000C86  0E01               	movlw	1
  3413  000C88  EC15  F00A         	call	_lcd_gotoXY
  3414                           
  3415                           ;main.c: 253:    lcd_putMessage("<Enter>");
  3416  000C8C  0E53               	movlw	low STR_2
  3417  000C8E  0100               	movlb	0	; force () banked
  3418  000C90  6FAA               	movwf	lcd_putMessage@chaine& (0+255),b
  3419  000C92  0E06               	movlw	high STR_2
  3420  000C94  6FAB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3421  000C96  51AA               	movf	lcd_putMessage@chaine& (0+255),w,b
  3422  000C98  11AB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3423  000C9A  A4D8               	btfss	status,2,c
  3424  000C9C  0E00               	movlw	low (__mediumconst shr (0+16))
  3425  000C9E  6FAC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3426  000CA0  ECB4  F008         	call	_lcd_putMessage	;wreg free
  3427  000CA4                     
  3428                           ;main.c: 254:    PORTDbits.RD7 = 1;
  3429  000CA4  8E83               	bsf	131,7,c	;volatile
  3430                           
  3431                           ;main.c: 255:    break;
  3432  000CA6  EF7A  F006         	goto	l194
  3433  000CAA                     l1885:
  3434  000CAA  FFFF               	dw	65535	; assembler added errata NOP
  3435  000CAC  C0B3  F0B7         	movff	affiche@etat,??_affiche
  3436  000CB0  C0B4  F0B8         	movff	affiche@etat+1,??_affiche+1
  3437                           
  3438                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3439                           ; Switch size 1, requested type "simple"
  3440                           ; Number of cases is 1, Range of values is 0 to 0
  3441                           ; switch strategies available:
  3442                           ; Name         Instructions Cycles
  3443                           ; simple_byte            4     3 (average)
  3444                           ;	Chosen strategy is simple_byte
  3445  000CB4  0100               	movlb	0	; force () banked
  3446  000CB6  51B8               	movf	(??_affiche+1)& (0+255),w,b
  3447  000CB8  0A00               	xorlw	0	; case 0
  3448  000CBA  B4D8               	btfsc	status,2,c
  3449  000CBC  EF62  F006         	goto	l1997
  3450  000CC0  EF7A  F006         	goto	l194
  3451  000CC4                     l1997:
  3452  000CC4  FFFF               	dw	65535	; assembler added errata NOP
  3453                           
  3454                           ; BSR set to: 0
  3455                           ; Switch size 1, requested type "simple"
  3456                           ; Number of cases is 5, Range of values is 0 to 4
  3457                           ; switch strategies available:
  3458                           ; Name         Instructions Cycles
  3459                           ; simple_byte           16     9 (average)
  3460                           ;	Chosen strategy is simple_byte
  3461  000CC6  51B7               	movf	??_affiche& (0+255),w,b
  3462  000CC8  0A00               	xorlw	0	; case 0
  3463  000CCA  B4D8               	btfsc	status,2,c
  3464  000CCC  EF67  F005         	goto	l1839
  3465  000CD0  0A01               	xorlw	1	; case 1
  3466  000CD2  B4D8               	btfsc	status,2,c
  3467  000CD4  EF8C  F005         	goto	l1845
  3468  000CD8  0A03               	xorlw	3	; case 2
  3469  000CDA  B4D8               	btfsc	status,2,c
  3470  000CDC  EFB7  F005         	goto	l1853
  3471  000CE0  0A01               	xorlw	1	; case 3
  3472  000CE2  B4D8               	btfsc	status,2,c
  3473  000CE4  EFE2  F005         	goto	l1861
  3474  000CE8  0A07               	xorlw	7	; case 4
  3475  000CEA  B4D8               	btfsc	status,2,c
  3476  000CEC  EF2F  F006         	goto	l1875
  3477  000CF0  EF7A  F006         	goto	l194
  3478  000CF4                     l194:
  3479  000CF4  FFFF               	dw	65535	; assembler added errata NOP
  3480  000CF6  0012               	return		;funcret
  3481  000CF8  FFFF               	dw	65535	; errata NOP
  3482  000CFA                     __end_of_affiche:
  3483                           	callstack 0
  3484                           
  3485 ;; *************** function _lcd_putMessage *****************
  3486 ;; Defined at:
  3487 ;;		line 386 in file "Lcd4Lignes.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;  chaine          3   10[BANK0 ] PTR const unsigned char 
  3490 ;;		 -> STR_10(8), STR_9(13), STR_8(8), STR_7(9), 
  3491 ;;		 -> STR_6(8), STR_5(17), STR_4(8), STR_3(27), 
  3492 ;;		 -> STR_2(8), STR_1(16), listeUsager.nom(20), listeUsager(300), 
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;  j               1   18[BANK0 ] unsigned char 
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  1    wreg      void 
  3497 ;; Registers used:
  3498 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3504 ;;      Params:         0       3       0       0       0       0       0
  3505 ;;      Locals:         0       1       0       0       0       0       0
  3506 ;;      Temps:          0       5       0       0       0       0       0
  3507 ;;      Totals:         0       9       0       0       0       0       0
  3508 ;;Total ram usage:        9 bytes
  3509 ;; Hardware stack levels used: 1
  3510 ;; Hardware stack levels required when called: 4
  3511 ;; This function calls:
  3512 ;;		_lcd_ecritChar
  3513 ;; This function is called by:
  3514 ;;		_affiche
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           	psect	text16
  3519  001168                     __ptext16:
  3520                           	callstack 0
  3521  001168                     _lcd_putMessage:
  3522                           	callstack 0
  3523  001168  FFFF               	dw	65535	; assembler added errata NOP
  3524  00116A                     
  3525                           ;Lcd4Lignes.c: 386: void lcd_putMessage(const unsigned char *chaine);Lcd4Lignes.c: 387: 
      +                          {;Lcd4Lignes.c: 388:     unsigned char j;;Lcd4Lignes.c: 390:     for(j = 0; chaine[j] !=
      +                           0; j++)
  3526  00116A  0E00               	movlw	0
  3527  00116C  0100               	movlb	0	; force () banked
  3528  00116E  6FB2               	movwf	lcd_putMessage@j& (0+255),b
  3529  001170  EFE4  F008         	goto	l1667
  3530  001174                     l1663:
  3531  001174  FFFF               	dw	65535	; assembler added errata NOP
  3532                           
  3533                           ;Lcd4Lignes.c: 391:         lcd_ecritChar(chaine[j]);
  3534  001176  0100               	movlb	0	; force () banked
  3535  001178  51B2               	movf	lcd_putMessage@j& (0+255),w,b
  3536  00117A  0100               	movlb	0	; force () banked
  3537  00117C  6FAD               	movwf	??_lcd_putMessage& (0+255),b
  3538  00117E  6BAE               	clrf	(??_lcd_putMessage+1)& (0+255),b
  3539  001180  51AD               	movf	??_lcd_putMessage& (0+255),w,b
  3540  001182  0100               	movlb	0	; force () banked
  3541  001184  25AA               	addwf	lcd_putMessage@chaine& (0+255),w,b
  3542  001186  0100               	movlb	0	; force () banked
  3543  001188  6FAF               	movwf	(??_lcd_putMessage+2)& (0+255),b
  3544  00118A  51AE               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  3545  00118C  0100               	movlb	0	; force () banked
  3546  00118E  21AB               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  3547  001190  0100               	movlb	0	; force () banked
  3548  001192  6FB0               	movwf	(??_lcd_putMessage+3)& (0+255),b
  3549  001194  0E00               	movlw	0
  3550  001196  0100               	movlb	0	; force () banked
  3551  001198  21AC               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  3552  00119A  0100               	movlb	0	; force () banked
  3553  00119C  6FB1               	movwf	(??_lcd_putMessage+4)& (0+255),b
  3554  00119E  C0AF  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  3555  0011A2  C0B0  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  3556  0011A6  C0B1  FFF8         	movff	??_lcd_putMessage+4,tblptru
  3557  0011AA  BAF8               	btfsc	tblptru,5,c
  3558  0011AC  D004               	bra	u587
  3559  0011AE  0008               	tblrd		*
  3560  0011B0  FFFF               	dw	65535	; errata NOP
  3561  0011B2  50F5               	movf	tablat,w,c
  3562  0011B4  D005               	bra	u580
  3563  0011B6                     u587:
  3564  0011B6  CFF6 FFE1          	movff	tblptrl,fsr1l
  3565  0011BA  CFF7 FFE2          	movff	tblptrh,fsr1h
  3566  0011BE  50E7               	movf	indf1,w,c
  3567  0011C0                     u580:
  3568  0011C0  ECA1  F00A         	call	_lcd_ecritChar
  3569  0011C4  0100               	movlb	0	; force () banked
  3570  0011C6  2BB2               	incf	lcd_putMessage@j& (0+255),f,b
  3571  0011C8                     l1667:
  3572  0011C8  FFFF               	dw	65535	; assembler added errata NOP
  3573                           
  3574                           ; BSR set to: 0
  3575  0011CA  0100               	movlb	0	; force () banked
  3576  0011CC  51B2               	movf	lcd_putMessage@j& (0+255),w,b
  3577  0011CE  0100               	movlb	0	; force () banked
  3578  0011D0  6FAD               	movwf	??_lcd_putMessage& (0+255),b
  3579  0011D2  6BAE               	clrf	(??_lcd_putMessage+1)& (0+255),b
  3580  0011D4  51AD               	movf	??_lcd_putMessage& (0+255),w,b
  3581  0011D6  0100               	movlb	0	; force () banked
  3582  0011D8  25AA               	addwf	lcd_putMessage@chaine& (0+255),w,b
  3583  0011DA  0100               	movlb	0	; force () banked
  3584  0011DC  6FAF               	movwf	(??_lcd_putMessage+2)& (0+255),b
  3585  0011DE  51AE               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  3586  0011E0  0100               	movlb	0	; force () banked
  3587  0011E2  21AB               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  3588  0011E4  0100               	movlb	0	; force () banked
  3589  0011E6  6FB0               	movwf	(??_lcd_putMessage+3)& (0+255),b
  3590  0011E8  0E00               	movlw	0
  3591  0011EA  0100               	movlb	0	; force () banked
  3592  0011EC  21AC               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  3593  0011EE  0100               	movlb	0	; force () banked
  3594  0011F0  6FB1               	movwf	(??_lcd_putMessage+4)& (0+255),b
  3595  0011F2  C0AF  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  3596  0011F6  C0B0  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  3597  0011FA  C0B1  FFF8         	movff	??_lcd_putMessage+4,tblptru
  3598  0011FE  BAF8               	btfsc	tblptru,5,c
  3599  001200  D004               	bra	u597
  3600  001202  0008               	tblrd		*
  3601  001204  FFFF               	dw	65535	; errata NOP
  3602  001206  50F5               	movf	tablat,w,c
  3603  001208  D005               	bra	u590
  3604  00120A                     u597:
  3605  00120A  CFF6 FFE1          	movff	tblptrl,fsr1l
  3606  00120E  CFF7 FFE2          	movff	tblptrh,fsr1h
  3607  001212  50E7               	movf	indf1,w,c
  3608  001214                     u590:
  3609  001214  0900               	iorlw	0
  3610  001216  A4D8               	btfss	status,2,c
  3611  001218  EF10  F009         	goto	u601
  3612  00121C  EF13  F009         	goto	u600
  3613  001220                     u601:
  3614  001220  FFFF               	dw	65535	; assembler added errata NOP
  3615  001222  EFBA  F008         	goto	l1663
  3616  001226                     u600:
  3617  001226  FFFF               	dw	65535	; assembler added errata NOP
  3618  001228  0012               	return		;funcret
  3619  00122A  FFFF               	dw	65535	; errata NOP
  3620  00122C                     __end_of_lcd_putMessage:
  3621                           	callstack 0
  3622                           
  3623 ;; *************** function _lcd_ecritChar *****************
  3624 ;; Defined at:
  3625 ;;		line 358 in file "Lcd4Lignes.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  car             1    wreg     unsigned char 
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;  car             1    8[BANK0 ] unsigned char 
  3630 ;;  posRam          1    9[BANK0 ] unsigned char 
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  1    wreg      void 
  3633 ;; Registers used:
  3634 ;;		wreg, status,2, status,0, cstack
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3640 ;;      Params:         0       0       0       0       0       0       0
  3641 ;;      Locals:         0       2       0       0       0       0       0
  3642 ;;      Temps:          0       2       0       0       0       0       0
  3643 ;;      Totals:         0       4       0       0       0       0       0
  3644 ;;Total ram usage:        4 bytes
  3645 ;; Hardware stack levels used: 1
  3646 ;; Hardware stack levels required when called: 3
  3647 ;; This function calls:
  3648 ;;		_lcd_wrCom
  3649 ;;		_lcd_wrData
  3650 ;; This function is called by:
  3651 ;;		_lcd_putMessage
  3652 ;;		_gereTouche
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text17
  3657  001542                     __ptext17:
  3658                           	callstack 0
  3659  001542                     _lcd_ecritChar:
  3660                           	callstack 0
  3661  001542  FFFF               	dw	65535	; assembler added errata NOP
  3662                           
  3663                           ;incstack = 0
  3664                           ;lcd_ecritChar@car stored from wreg
  3665  001544  0100               	movlb	0	; force () banked
  3666  001546  6FA8               	movwf	lcd_ecritChar@car& (0+255),b
  3667  001548                     
  3668                           ;Lcd4Lignes.c: 358: void lcd_ecritChar(unsigned char car);Lcd4Lignes.c: 359: {;Lcd4Ligne
      +                          s.c: 360:     unsigned char posRam;;Lcd4Lignes.c: 362:     posRam = lcd_wrData(car);
  3669  001548  0100               	movlb	0	; force () banked
  3670  00154A  51A8               	movf	lcd_ecritChar@car& (0+255),w,b
  3671  00154C  ECF9  F00B         	call	_lcd_wrData
  3672  001550  0100               	movlb	0	; force () banked
  3673  001552  6FA9               	movwf	lcd_ecritChar@posRam& (0+255),b
  3674                           
  3675                           ;Lcd4Lignes.c: 363:     switch(posRam)
  3676  001554  EFBE  F00A         	goto	l1089
  3677  001558                     l1081:
  3678  001558  FFFF               	dw	65535	; assembler added errata NOP
  3679                           
  3680                           ; BSR set to: 0
  3681                           ;Lcd4Lignes.c: 366:             lcd_wrCom(0x40|0x80);
  3682  00155A  0EC0               	movlw	192
  3683  00155C  ECC7  F009         	call	_lcd_wrCom
  3684                           
  3685                           ;Lcd4Lignes.c: 367:             break;
  3686  001560  EFDB  F00A         	goto	l78
  3687  001564                     l1083:
  3688  001564  FFFF               	dw	65535	; assembler added errata NOP
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;Lcd4Lignes.c: 369:             lcd_wrCom(0x14|0x80);
  3692  001566  0E94               	movlw	148
  3693  001568  ECC7  F009         	call	_lcd_wrCom
  3694                           
  3695                           ;Lcd4Lignes.c: 370:             break;
  3696  00156C  EFDB  F00A         	goto	l78
  3697  001570                     l1085:
  3698  001570  FFFF               	dw	65535	; assembler added errata NOP
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;Lcd4Lignes.c: 372:             lcd_wrCom(0x54|0x80);
  3702  001572  0ED4               	movlw	212
  3703  001574  ECC7  F009         	call	_lcd_wrCom
  3704                           
  3705                           ;Lcd4Lignes.c: 373:             break;
  3706  001578  EFDB  F00A         	goto	l78
  3707  00157C                     l1089:
  3708  00157C  FFFF               	dw	65535	; assembler added errata NOP
  3709                           
  3710                           ; BSR set to: 0
  3711  00157E  0100               	movlb	0	; force () banked
  3712  001580  51A9               	movf	lcd_ecritChar@posRam& (0+255),w,b
  3713  001582  0100               	movlb	0	; force () banked
  3714  001584  6FA6               	movwf	??_lcd_ecritChar& (0+255),b
  3715  001586  6BA7               	clrf	(??_lcd_ecritChar+1)& (0+255),b
  3716                           
  3717                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3718                           ; Switch size 1, requested type "simple"
  3719                           ; Number of cases is 1, Range of values is 0 to 0
  3720                           ; switch strategies available:
  3721                           ; Name         Instructions Cycles
  3722                           ; simple_byte            4     3 (average)
  3723                           ;	Chosen strategy is simple_byte
  3724  001588  51A7               	movf	(??_lcd_ecritChar+1)& (0+255),w,b
  3725  00158A  0A00               	xorlw	0	; case 0
  3726  00158C  B4D8               	btfsc	status,2,c
  3727  00158E  EFCB  F00A         	goto	l1999
  3728  001592  EFDB  F00A         	goto	l78
  3729  001596                     l1999:
  3730  001596  FFFF               	dw	65535	; assembler added errata NOP
  3731                           
  3732                           ; BSR set to: 0
  3733                           ; Switch size 1, requested type "simple"
  3734                           ; Number of cases is 3, Range of values is 20 to 84
  3735                           ; switch strategies available:
  3736                           ; Name         Instructions Cycles
  3737                           ; simple_byte           10     6 (average)
  3738                           ;	Chosen strategy is simple_byte
  3739  001598  51A6               	movf	??_lcd_ecritChar& (0+255),w,b
  3740  00159A  0A14               	xorlw	20	; case 20
  3741  00159C  B4D8               	btfsc	status,2,c
  3742  00159E  EFAC  F00A         	goto	l1081
  3743  0015A2  0A54               	xorlw	84	; case 64
  3744  0015A4  B4D8               	btfsc	status,2,c
  3745  0015A6  EFB8  F00A         	goto	l1085
  3746  0015AA  0A14               	xorlw	20	; case 84
  3747  0015AC  B4D8               	btfsc	status,2,c
  3748  0015AE  EFB2  F00A         	goto	l1083
  3749  0015B2  EFDB  F00A         	goto	l78
  3750  0015B6                     l78:
  3751  0015B6  FFFF               	dw	65535	; assembler added errata NOP
  3752  0015B8  0012               	return		;funcret
  3753  0015BA  FFFF               	dw	65535	; errata NOP
  3754  0015BC                     __end_of_lcd_ecritChar:
  3755                           	callstack 0
  3756                           
  3757 ;; *************** function _lcd_wrData *****************
  3758 ;; Defined at:
  3759 ;;		line 187 in file "Lcd4Lignes.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  caractere       1    wreg     unsigned char 
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;  caractere       1    4[BANK0 ] unsigned char 
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  1    wreg      unsigned char 
  3766 ;; Registers used:
  3767 ;;		wreg, status,2, status,0, cstack
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3773 ;;      Params:         0       0       0       0       0       0       0
  3774 ;;      Locals:         0       1       0       0       0       0       0
  3775 ;;      Temps:          0       0       0       0       0       0       0
  3776 ;;      Totals:         0       1       0       0       0       0       0
  3777 ;;Total ram usage:        1 bytes
  3778 ;; Hardware stack levels used: 1
  3779 ;; Hardware stack levels required when called: 2
  3780 ;; This function calls:
  3781 ;;		_lcd_busy
  3782 ;;		_lcd_ecrireDonnees
  3783 ;;		_lcd_strobeEnableBit
  3784 ;; This function is called by:
  3785 ;;		_lcd_ecritChar
  3786 ;;		_lcd_initCGRam
  3787 ;;		_lcd_effaceChar
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791                           	psect	text18
  3792  0017F2                     __ptext18:
  3793                           	callstack 0
  3794  0017F2                     _lcd_wrData:
  3795                           	callstack 0
  3796  0017F2  FFFF               	dw	65535	; assembler added errata NOP
  3797                           
  3798                           ;incstack = 0
  3799                           ;lcd_wrData@caractere stored from wreg
  3800  0017F4  0100               	movlb	0	; force () banked
  3801  0017F6  6FA4               	movwf	lcd_wrData@caractere& (0+255),b
  3802  0017F8                     
  3803                           ;Lcd4Lignes.c: 187: static unsigned char lcd_wrData(unsigned char caractere);Lcd4Lignes.
      +                          c: 188: {;Lcd4Lignes.c: 189:     lcd_busy();
  3804  0017F8  EC56  F00B         	call	_lcd_busy	;wreg free
  3805  0017FC                     
  3806                           ;Lcd4Lignes.c: 190:     TRISA = 0b00000000;
  3807  0017FC  0E00               	movlw	0
  3808  0017FE  6E92               	movwf	146,c	;volatile
  3809  001800                     
  3810                           ;Lcd4Lignes.c: 191:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  3811  001800  D000               	nop2		;2 cycle nop
  3812  001802  D000               	nop2		;2 cycle nop
  3813  001804  D000               	nop2		;2 cycle nop
  3814  001806  D000               	nop2		;2 cycle nop
  3815  001808                     
  3816                           ;Lcd4Lignes.c: 193:     PORTBbits.RB4 = 1;
  3817  001808  8881               	bsf	129,4,c	;volatile
  3818  00180A                     
  3819                           ;Lcd4Lignes.c: 194:     PORTAbits.RA5 = 0;
  3820  00180A  9A80               	bcf	128,5,c	;volatile
  3821  00180C                     
  3822                           ;Lcd4Lignes.c: 196:     lcd_ecrireDonnees(caractere >> 4);
  3823  00180C  0100               	movlb	0	; force () banked
  3824  00180E  39A4               	swapf	lcd_wrData@caractere& (0+255),w,b
  3825  001810  0B0F               	andlw	15
  3826  001812  EC1A  F00B         	call	_lcd_ecrireDonnees
  3827  001816                     
  3828                           ;Lcd4Lignes.c: 197:     lcd_strobeEnableBit();
  3829  001816  EC09  F00D         	call	_lcd_strobeEnableBit	;wreg free
  3830  00181A                     
  3831                           ;Lcd4Lignes.c: 198:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  3832  00181A  D000               	nop2		;2 cycle nop
  3833  00181C  D000               	nop2		;2 cycle nop
  3834  00181E  D000               	nop2		;2 cycle nop
  3835  001820  D000               	nop2		;2 cycle nop
  3836  001822                     
  3837                           ;Lcd4Lignes.c: 200:     lcd_ecrireDonnees(caractere);
  3838  001822  0100               	movlb	0	; force () banked
  3839  001824  51A4               	movf	lcd_wrData@caractere& (0+255),w,b
  3840  001826  EC1A  F00B         	call	_lcd_ecrireDonnees
  3841  00182A                     
  3842                           ;Lcd4Lignes.c: 201:     lcd_strobeEnableBit();
  3843  00182A  EC09  F00D         	call	_lcd_strobeEnableBit	;wreg free
  3844  00182E                     
  3845                           ;Lcd4Lignes.c: 202:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  3846  00182E  D000               	nop2		;2 cycle nop
  3847  001830  D000               	nop2		;2 cycle nop
  3848  001832  D000               	nop2		;2 cycle nop
  3849  001834  D000               	nop2		;2 cycle nop
  3850  001836                     
  3851                           ;Lcd4Lignes.c: 204:     TRISA = 0b00001111;
  3852  001836  0E0F               	movlw	15
  3853  001838  6E92               	movwf	146,c	;volatile
  3854  00183A                     
  3855                           ;Lcd4Lignes.c: 205:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  3856  00183A  D000               	nop2		;2 cycle nop
  3857  00183C  D000               	nop2		;2 cycle nop
  3858  00183E  D000               	nop2		;2 cycle nop
  3859  001840  D000               	nop2		;2 cycle nop
  3860                           
  3861                           ;Lcd4Lignes.c: 206:     return(lcd_busy());
  3862  001842  EC56  F00B         	call	_lcd_busy	;wreg free
  3863  001846  0012               	return		;funcret
  3864  001848  FFFF               	dw	65535	; errata NOP
  3865  00184A                     __end_of_lcd_wrData:
  3866                           	callstack 0
  3867                           
  3868 ;; *************** function _lcd_gotoXY *****************
  3869 ;; Defined at:
  3870 ;;		line 313 in file "Lcd4Lignes.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  x               1    wreg     unsigned char 
  3873 ;;  y               1    6[BANK0 ] unsigned char 
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;  x               1    9[BANK0 ] unsigned char 
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      void 
  3878 ;; Registers used:
  3879 ;;		wreg, status,2, status,0, cstack
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3885 ;;      Params:         0       1       0       0       0       0       0
  3886 ;;      Locals:         0       1       0       0       0       0       0
  3887 ;;      Temps:          0       2       0       0       0       0       0
  3888 ;;      Totals:         0       4       0       0       0       0       0
  3889 ;;Total ram usage:        4 bytes
  3890 ;; Hardware stack levels used: 1
  3891 ;; Hardware stack levels required when called: 3
  3892 ;; This function calls:
  3893 ;;		_lcd_wrCom
  3894 ;; This function is called by:
  3895 ;;		_affiche
  3896 ;;		_lcd_effaceLigne
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           	psect	text19
  3901  00142A                     __ptext19:
  3902                           	callstack 0
  3903  00142A                     _lcd_gotoXY:
  3904                           	callstack 0
  3905  00142A  FFFF               	dw	65535	; assembler added errata NOP
  3906                           
  3907                           ;incstack = 0
  3908                           ;lcd_gotoXY@x stored from wreg
  3909  00142C  0100               	movlb	0	; force () banked
  3910  00142E  6FA9               	movwf	lcd_gotoXY@x& (0+255),b
  3911  001430                     
  3912                           ;Lcd4Lignes.c: 313: void lcd_gotoXY(unsigned char x, unsigned char y);Lcd4Lignes.c: 314:
      +                           {;Lcd4Lignes.c: 315:     switch(y)
  3913  001430  EF3D  F00A         	goto	l1655
  3914  001434                     l1645:
  3915  001434  FFFF               	dw	65535	; assembler added errata NOP
  3916                           
  3917                           ; BSR set to: 0
  3918                           ;Lcd4Lignes.c: 318:             lcd_wrCom((x-1+0x00)|0x80);
  3919  001436  0100               	movlb	0	; force () banked
  3920  001438  05A9               	decf	lcd_gotoXY@x& (0+255),w,b
  3921  00143A  0980               	iorlw	128
  3922  00143C  ECC7  F009         	call	_lcd_wrCom
  3923                           
  3924                           ;Lcd4Lignes.c: 319:             break;
  3925  001440  EF5E  F00A         	goto	l67
  3926  001444                     l1647:
  3927  001444  FFFF               	dw	65535	; assembler added errata NOP
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;Lcd4Lignes.c: 321:             lcd_wrCom((x-1+0x40)|0x80);
  3931  001446  0100               	movlb	0	; force () banked
  3932  001448  51A9               	movf	lcd_gotoXY@x& (0+255),w,b
  3933  00144A  0F3F               	addlw	63
  3934  00144C  0980               	iorlw	128
  3935  00144E  ECC7  F009         	call	_lcd_wrCom
  3936                           
  3937                           ;Lcd4Lignes.c: 322:             break;
  3938  001452  EF5E  F00A         	goto	l67
  3939  001456                     l1649:
  3940  001456  FFFF               	dw	65535	; assembler added errata NOP
  3941                           
  3942                           ; BSR set to: 0
  3943                           ;Lcd4Lignes.c: 324:             lcd_wrCom((x-1+0x14)|0x80);
  3944  001458  0100               	movlb	0	; force () banked
  3945  00145A  51A9               	movf	lcd_gotoXY@x& (0+255),w,b
  3946  00145C  0F13               	addlw	19
  3947  00145E  0980               	iorlw	128
  3948  001460  ECC7  F009         	call	_lcd_wrCom
  3949                           
  3950                           ;Lcd4Lignes.c: 325:             break;
  3951  001464  EF5E  F00A         	goto	l67
  3952  001468                     l1651:
  3953  001468  FFFF               	dw	65535	; assembler added errata NOP
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;Lcd4Lignes.c: 327:             lcd_wrCom((x-1+0x54)|0x80);
  3957  00146A  0100               	movlb	0	; force () banked
  3958  00146C  51A9               	movf	lcd_gotoXY@x& (0+255),w,b
  3959  00146E  0F53               	addlw	83
  3960  001470  0980               	iorlw	128
  3961  001472  ECC7  F009         	call	_lcd_wrCom
  3962                           
  3963                           ;Lcd4Lignes.c: 328:             break;
  3964  001476  EF5E  F00A         	goto	l67
  3965  00147A                     l1655:
  3966  00147A  FFFF               	dw	65535	; assembler added errata NOP
  3967  00147C  0100               	movlb	0	; force () banked
  3968  00147E  51A6               	movf	lcd_gotoXY@y& (0+255),w,b
  3969  001480  0100               	movlb	0	; force () banked
  3970  001482  6FA7               	movwf	??_lcd_gotoXY& (0+255),b
  3971  001484  6BA8               	clrf	(??_lcd_gotoXY+1)& (0+255),b
  3972                           
  3973                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3974                           ; Switch size 1, requested type "simple"
  3975                           ; Number of cases is 1, Range of values is 0 to 0
  3976                           ; switch strategies available:
  3977                           ; Name         Instructions Cycles
  3978                           ; simple_byte            4     3 (average)
  3979                           ;	Chosen strategy is simple_byte
  3980  001486  51A8               	movf	(??_lcd_gotoXY+1)& (0+255),w,b
  3981  001488  0A00               	xorlw	0	; case 0
  3982  00148A  B4D8               	btfsc	status,2,c
  3983  00148C  EF4A  F00A         	goto	l2001
  3984  001490  EF5E  F00A         	goto	l67
  3985  001494                     l2001:
  3986  001494  FFFF               	dw	65535	; assembler added errata NOP
  3987                           
  3988                           ; BSR set to: 0
  3989                           ; Switch size 1, requested type "simple"
  3990                           ; Number of cases is 4, Range of values is 1 to 4
  3991                           ; switch strategies available:
  3992                           ; Name         Instructions Cycles
  3993                           ; simple_byte           13     7 (average)
  3994                           ;	Chosen strategy is simple_byte
  3995  001496  51A7               	movf	??_lcd_gotoXY& (0+255),w,b
  3996  001498  0A01               	xorlw	1	; case 1
  3997  00149A  B4D8               	btfsc	status,2,c
  3998  00149C  EF1A  F00A         	goto	l1645
  3999  0014A0  0A03               	xorlw	3	; case 2
  4000  0014A2  B4D8               	btfsc	status,2,c
  4001  0014A4  EF22  F00A         	goto	l1647
  4002  0014A8  0A01               	xorlw	1	; case 3
  4003  0014AA  B4D8               	btfsc	status,2,c
  4004  0014AC  EF2B  F00A         	goto	l1649
  4005  0014B0  0A07               	xorlw	7	; case 4
  4006  0014B2  B4D8               	btfsc	status,2,c
  4007  0014B4  EF34  F00A         	goto	l1651
  4008  0014B8  EF5E  F00A         	goto	l67
  4009  0014BC                     l67:
  4010  0014BC  FFFF               	dw	65535	; assembler added errata NOP
  4011  0014BE  0012               	return		;funcret
  4012  0014C0  FFFF               	dw	65535	; errata NOP
  4013  0014C2                     __end_of_lcd_gotoXY:
  4014                           	callstack 0
  4015                           
  4016 ;; *************** function _lcd_effaceAffichage *****************
  4017 ;; Defined at:
  4018 ;;		line 275 in file "Lcd4Lignes.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;		None
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;		None
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1    wreg      void 
  4025 ;; Registers used:
  4026 ;;		wreg, status,2, status,0, cstack
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4032 ;;      Params:         0       0       0       0       0       0       0
  4033 ;;      Locals:         0       0       0       0       0       0       0
  4034 ;;      Temps:          0       0       0       0       0       0       0
  4035 ;;      Totals:         0       0       0       0       0       0       0
  4036 ;;Total ram usage:        0 bytes
  4037 ;; Hardware stack levels used: 1
  4038 ;; Hardware stack levels required when called: 3
  4039 ;; This function calls:
  4040 ;;		_lcd_wrCom
  4041 ;; This function is called by:
  4042 ;;		_affiche
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           	psect	text20
  4047  0019F4                     __ptext20:
  4048                           	callstack 0
  4049  0019F4                     _lcd_effaceAffichage:
  4050                           	callstack 0
  4051  0019F4  FFFF               	dw	65535	; assembler added errata NOP
  4052  0019F6                     
  4053                           ;Lcd4Lignes.c: 277:     lcd_wrCom(0x01);
  4054  0019F6  0E01               	movlw	1
  4055  0019F8  ECC7  F009         	call	_lcd_wrCom
  4056                           
  4057                           ;Lcd4Lignes.c: 278:     lcd_wrCom(0x80);
  4058  0019FC  0E80               	movlw	128
  4059  0019FE  ECC7  F009         	call	_lcd_wrCom
  4060  001A02  0012               	return		;funcret
  4061  001A04  FFFF               	dw	65535	; errata NOP
  4062  001A06                     __end_of_lcd_effaceAffichage:
  4063                           	callstack 0
  4064                           
  4065 ;; *************** function _lcd_curseurHome *****************
  4066 ;; Defined at:
  4067 ;;		line 287 in file "Lcd4Lignes.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;		None
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;		None
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg, status,2, status,0, cstack
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4081 ;;      Params:         0       0       0       0       0       0       0
  4082 ;;      Locals:         0       0       0       0       0       0       0
  4083 ;;      Temps:          0       0       0       0       0       0       0
  4084 ;;      Totals:         0       0       0       0       0       0       0
  4085 ;;Total ram usage:        0 bytes
  4086 ;; Hardware stack levels used: 1
  4087 ;; Hardware stack levels required when called: 3
  4088 ;; This function calls:
  4089 ;;		_lcd_wrCom
  4090 ;; This function is called by:
  4091 ;;		_lcd_initCGRam
  4092 ;;		_main
  4093 ;;		_affiche
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           
  4097                           	psect	text21
  4098  001A06                     __ptext21:
  4099                           	callstack 0
  4100  001A06                     _lcd_curseurHome:
  4101                           	callstack 0
  4102  001A06  FFFF               	dw	65535	; assembler added errata NOP
  4103  001A08                     
  4104                           ;Lcd4Lignes.c: 289:     lcd_wrCom(0x02);
  4105  001A08  0E02               	movlw	2
  4106  001A0A  ECC7  F009         	call	_lcd_wrCom
  4107  001A0E  0012               	return		;funcret
  4108  001A10  FFFF               	dw	65535	; errata NOP
  4109  001A12                     __end_of_lcd_curseurHome:
  4110                           	callstack 0
  4111                           
  4112 ;; *************** function _lcd_wrCom *****************
  4113 ;; Defined at:
  4114 ;;		line 155 in file "Lcd4Lignes.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;  commande        1    wreg     unsigned char 
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;  commande        1    5[BANK0 ] unsigned char 
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  1    wreg      unsigned char 
  4121 ;; Registers used:
  4122 ;;		wreg, status,2, status,0, cstack
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4128 ;;      Params:         0       0       0       0       0       0       0
  4129 ;;      Locals:         0       1       0       0       0       0       0
  4130 ;;      Temps:          0       1       0       0       0       0       0
  4131 ;;      Totals:         0       2       0       0       0       0       0
  4132 ;;Total ram usage:        2 bytes
  4133 ;; Hardware stack levels used: 1
  4134 ;; Hardware stack levels required when called: 2
  4135 ;; This function calls:
  4136 ;;		_lcd_busy
  4137 ;;		_lcd_ecrireDonnees
  4138 ;;		_lcd_strobeEnableBit
  4139 ;; This function is called by:
  4140 ;;		_lcd_init
  4141 ;;		_lcd_effaceAffichage
  4142 ;;		_lcd_curseurHome
  4143 ;;		_lcd_gotoXY
  4144 ;;		_lcd_ecritChar
  4145 ;;		_lcd_initCGRam
  4146 ;;		_lcd_cacheCurseur
  4147 ;;		_lcd_montreCurseur
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text22
  4152  00138E                     __ptext22:
  4153                           	callstack 0
  4154  00138E                     _lcd_wrCom:
  4155                           	callstack 0
  4156  00138E  FFFF               	dw	65535	; assembler added errata NOP
  4157                           
  4158                           ;incstack = 0
  4159                           ;lcd_wrCom@commande stored from wreg
  4160  001390  0100               	movlb	0	; force () banked
  4161  001392  6FA5               	movwf	lcd_wrCom@commande& (0+255),b
  4162  001394                     
  4163                           ;Lcd4Lignes.c: 155: static unsigned char lcd_wrCom(unsigned char commande);Lcd4Lignes.c:
      +                           156: {;Lcd4Lignes.c: 157:     lcd_busy();
  4164  001394  EC56  F00B         	call	_lcd_busy	;wreg free
  4165  001398                     
  4166                           ;Lcd4Lignes.c: 159:     TRISA = 0b00000000;
  4167  001398  0E00               	movlw	0
  4168  00139A  6E92               	movwf	146,c	;volatile
  4169  00139C                     
  4170                           ;Lcd4Lignes.c: 160:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  4171  00139C  D000               	nop2		;2 cycle nop
  4172  00139E  D000               	nop2		;2 cycle nop
  4173  0013A0  D000               	nop2		;2 cycle nop
  4174  0013A2  D000               	nop2		;2 cycle nop
  4175  0013A4                     
  4176                           ;Lcd4Lignes.c: 162:     PORTBbits.RB4 = 0;
  4177  0013A4  9881               	bcf	129,4,c	;volatile
  4178  0013A6                     
  4179                           ;Lcd4Lignes.c: 163:     PORTAbits.RA5 = 0;
  4180  0013A6  9A80               	bcf	128,5,c	;volatile
  4181  0013A8                     
  4182                           ;Lcd4Lignes.c: 165:     lcd_ecrireDonnees(commande >> 4);
  4183  0013A8  0100               	movlb	0	; force () banked
  4184  0013AA  39A5               	swapf	lcd_wrCom@commande& (0+255),w,b
  4185  0013AC  0B0F               	andlw	15
  4186  0013AE  EC1A  F00B         	call	_lcd_ecrireDonnees
  4187  0013B2                     
  4188                           ;Lcd4Lignes.c: 166:     lcd_strobeEnableBit();
  4189  0013B2  EC09  F00D         	call	_lcd_strobeEnableBit	;wreg free
  4190  0013B6                     
  4191                           ;Lcd4Lignes.c: 167:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  4192  0013B6  D000               	nop2		;2 cycle nop
  4193  0013B8  D000               	nop2		;2 cycle nop
  4194  0013BA  D000               	nop2		;2 cycle nop
  4195  0013BC  D000               	nop2		;2 cycle nop
  4196  0013BE                     
  4197                           ;Lcd4Lignes.c: 169:     lcd_ecrireDonnees(commande);
  4198  0013BE  0100               	movlb	0	; force () banked
  4199  0013C0  51A5               	movf	lcd_wrCom@commande& (0+255),w,b
  4200  0013C2  EC1A  F00B         	call	_lcd_ecrireDonnees
  4201  0013C6                     
  4202                           ;Lcd4Lignes.c: 170:     lcd_strobeEnableBit();
  4203  0013C6  EC09  F00D         	call	_lcd_strobeEnableBit	;wreg free
  4204  0013CA                     
  4205                           ;Lcd4Lignes.c: 171:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  4206  0013CA  0E28               	movlw	40
  4207  0013CC                     u957:
  4208  0013CC  FFFF               	dw	65535	; errata NOP
  4209  0013CE  2EE8               	decfsz	wreg,f,c
  4210  0013D0  D7FD               	bra	u957
  4211  0013D2                     
  4212                           ;Lcd4Lignes.c: 173:     if ((commande == 0x01) || commande == 0x02)
  4213  0013D2  0100               	movlb	0	; force () banked
  4214  0013D4  05A5               	decf	lcd_wrCom@commande& (0+255),w,b
  4215  0013D6  B4D8               	btfsc	status,2,c
  4216  0013D8  EFF0  F009         	goto	u21
  4217  0013DC  EFF3  F009         	goto	u20
  4218  0013E0                     u21:
  4219  0013E0  FFFF               	dw	65535	; assembler added errata NOP
  4220  0013E2  EFFF  F009         	goto	l1039
  4221  0013E6                     u20:
  4222  0013E6  FFFF               	dw	65535	; assembler added errata NOP
  4223  0013E8                     
  4224                           ; BSR set to: 0
  4225  0013E8  0E02               	movlw	2
  4226  0013EA  0100               	movlb	0	; force () banked
  4227  0013EC  19A5               	xorwf	lcd_wrCom@commande& (0+255),w,b
  4228  0013EE  A4D8               	btfss	status,2,c
  4229  0013F0  EFFC  F009         	goto	u31
  4230  0013F4  EFFF  F009         	goto	u30
  4231  0013F8                     u31:
  4232  0013F8  FFFF               	dw	65535	; assembler added errata NOP
  4233  0013FA  EF0A  F00A         	goto	l1041
  4234  0013FE                     u30:
  4235  0013FE                     l1039:
  4236  0013FE  FFFF               	dw	65535	; assembler added errata NOP
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;Lcd4Lignes.c: 174:         _delay((unsigned long)((2)*(16000000/4000.0)));
  4240  001400  0E08               	movlw	8
  4241  001402  0100               	movlb	0	; force () banked
  4242  001404  6FA4               	movwf	??_lcd_wrCom& (0+255),b
  4243  001406  0ECB               	movlw	203
  4244  001408                     u967:
  4245  001408  FFFF               	dw	65535	; errata NOP
  4246  00140A  2EE8               	decfsz	wreg,f,c
  4247  00140C  D7FD               	bra	u967
  4248  00140E  2FA4               	decfsz	??_lcd_wrCom& (0+255),f,b
  4249  001410  D7FB               	bra	u967
  4250  001412  F000               	nop	
  4251  001414                     l1041:
  4252  001414  FFFF               	dw	65535	; assembler added errata NOP
  4253                           
  4254                           ;Lcd4Lignes.c: 176:     TRISA = 0b00001111;
  4255  001416  0E0F               	movlw	15
  4256  001418  6E92               	movwf	146,c	;volatile
  4257  00141A                     
  4258                           ;Lcd4Lignes.c: 177:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  4259  00141A  D000               	nop2		;2 cycle nop
  4260  00141C  D000               	nop2		;2 cycle nop
  4261  00141E  D000               	nop2		;2 cycle nop
  4262  001420  D000               	nop2		;2 cycle nop
  4263  001422                     
  4264                           ;Lcd4Lignes.c: 178:     return(lcd_busy());
  4265  001422  EC56  F00B         	call	_lcd_busy	;wreg free
  4266  001426  0012               	return		;funcret
  4267  001428  FFFF               	dw	65535	; errata NOP
  4268  00142A                     __end_of_lcd_wrCom:
  4269                           	callstack 0
  4270                           
  4271 ;; *************** function _lcd_strobeEnableBit *****************
  4272 ;; Defined at:
  4273 ;;		line 430 in file "Lcd4Lignes.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;		None
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;		None
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  1    wreg      void 
  4280 ;; Registers used:
  4281 ;;		None
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4287 ;;      Params:         0       0       0       0       0       0       0
  4288 ;;      Locals:         0       0       0       0       0       0       0
  4289 ;;      Temps:          0       0       0       0       0       0       0
  4290 ;;      Totals:         0       0       0       0       0       0       0
  4291 ;;Total ram usage:        0 bytes
  4292 ;; Hardware stack levels used: 1
  4293 ;; This function calls:
  4294 ;;		Nothing
  4295 ;; This function is called by:
  4296 ;;		_lcd_wrCom
  4297 ;;		_lcd_wrData
  4298 ;;		_lcd_resetSequence
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           	psect	text23
  4303  001A12                     __ptext23:
  4304                           	callstack 0
  4305  001A12                     _lcd_strobeEnableBit:
  4306                           	callstack 0
  4307  001A12  FFFF               	dw	65535	; assembler added errata NOP
  4308  001A14                     
  4309                           ;Lcd4Lignes.c: 432:     PORTAbits.RA4 = 1;
  4310  001A14  8880               	bsf	128,4,c	;volatile
  4311                           
  4312                           ;Lcd4Lignes.c: 433:     __nop();
  4313  001A16  F000               	nop	
  4314                           
  4315                           ;Lcd4Lignes.c: 434:     PORTAbits.RA4 = 0;
  4316  001A18  9880               	bcf	128,4,c	;volatile
  4317  001A1A  0012               	return		;funcret
  4318  001A1C  FFFF               	dw	65535	; errata NOP
  4319  001A1E                     __end_of_lcd_strobeEnableBit:
  4320                           	callstack 0
  4321                           
  4322 ;; *************** function _lcd_ecrireDonnees *****************
  4323 ;; Defined at:
  4324 ;;		line 105 in file "Lcd4Lignes.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;  donnee          1    wreg     unsigned char 
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;  donnee          1    1[BANK0 ] unsigned char 
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  1    wreg      void 
  4331 ;; Registers used:
  4332 ;;		wreg, status,2, status,0
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4338 ;;      Params:         0       0       0       0       0       0       0
  4339 ;;      Locals:         0       1       0       0       0       0       0
  4340 ;;      Temps:          0       1       0       0       0       0       0
  4341 ;;      Totals:         0       2       0       0       0       0       0
  4342 ;;Total ram usage:        2 bytes
  4343 ;; Hardware stack levels used: 1
  4344 ;; This function calls:
  4345 ;;		Nothing
  4346 ;; This function is called by:
  4347 ;;		_lcd_wrCom
  4348 ;;		_lcd_wrData
  4349 ;;		_lcd_resetSequence
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353                           	psect	text24
  4354  001634                     __ptext24:
  4355                           	callstack 0
  4356  001634                     _lcd_ecrireDonnees:
  4357                           	callstack 0
  4358  001634  FFFF               	dw	65535	; assembler added errata NOP
  4359                           
  4360                           ;incstack = 0
  4361                           ;lcd_ecrireDonnees@donnee stored from wreg
  4362  001636  0100               	movlb	0	; force () banked
  4363  001638  6FA1               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  4364  00163A                     
  4365                           ;Lcd4Lignes.c: 105: static void lcd_ecrireDonnees(unsigned char donnee);Lcd4Lignes.c: 10
      +                          6: {;Lcd4Lignes.c: 109:     PORTAbits.RA0 = (donnee & 0x01);
  4366  00163A  C0A1  F0A0         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  4367  00163E  0E01               	movlw	1
  4368  001640  0100               	movlb	0	; force () banked
  4369  001642  17A0               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  4370  001644  5080               	movf	128,w,c	;volatile
  4371  001646  19A0               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4372  001648  0BFE               	andlw	-2
  4373  00164A  19A0               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4374  00164C  6E80               	movwf	128,c	;volatile
  4375                           
  4376                           ;Lcd4Lignes.c: 110:     PORTAbits.RA1 = ((donnee >> 1) & 0x01);
  4377  00164E  C0A1  F0A0         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  4378  001652  90D8               	bcf	status,0,c
  4379  001654  33A0               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  4380  001656  0E01               	movlw	1
  4381  001658  17A0               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  4382  00165A  47A0               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  4383  00165C  5080               	movf	128,w,c	;volatile
  4384  00165E  19A0               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4385  001660  0BFD               	andlw	-3
  4386  001662  19A0               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4387  001664  6E80               	movwf	128,c	;volatile
  4388                           
  4389                           ;Lcd4Lignes.c: 111:     PORTAbits.RA2 = ((donnee >> 2) & 0x01);
  4390  001666  C0A1  F0A0         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  4391  00166A  90D8               	bcf	status,0,c
  4392  00166C  33A0               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  4393  00166E  90D8               	bcf	status,0,c
  4394  001670  33A0               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  4395  001672  0E01               	movlw	1
  4396  001674  17A0               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  4397  001676  47A0               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  4398  001678  47A0               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  4399  00167A  5080               	movf	128,w,c	;volatile
  4400  00167C  19A0               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4401  00167E  0BFB               	andlw	-5
  4402  001680  19A0               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4403  001682  6E80               	movwf	128,c	;volatile
  4404                           
  4405                           ;Lcd4Lignes.c: 112:     PORTAbits.RA3 = ((donnee >> 3) & 0x01);
  4406  001684  C0A1  F0A0         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  4407  001688  90D8               	bcf	status,0,c
  4408  00168A  33A0               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  4409  00168C  90D8               	bcf	status,0,c
  4410  00168E  33A0               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  4411  001690  90D8               	bcf	status,0,c
  4412  001692  33A0               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  4413  001694  0E01               	movlw	1
  4414  001696  17A0               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  4415  001698  47A0               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  4416  00169A  47A0               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  4417  00169C  47A0               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  4418  00169E  5080               	movf	128,w,c	;volatile
  4419  0016A0  19A0               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4420  0016A2  0BF7               	andlw	-9
  4421  0016A4  19A0               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4422  0016A6  6E80               	movwf	128,c	;volatile
  4423  0016A8                     
  4424                           ; BSR set to: 0
  4425  0016A8  0012               	return		;funcret
  4426  0016AA  FFFF               	dw	65535	; errata NOP
  4427  0016AC                     __end_of_lcd_ecrireDonnees:
  4428                           	callstack 0
  4429                           
  4430 ;; *************** function _lcd_busy *****************
  4431 ;; Defined at:
  4432 ;;		line 122 in file "Lcd4Lignes.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;		None
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;  adresse         2    2[BANK0 ] int 
  4437 ;; Return value:  Size  Location     Type
  4438 ;;                  1    wreg      unsigned char 
  4439 ;; Registers used:
  4440 ;;		wreg, status,2, status,0, cstack
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4446 ;;      Params:         0       0       0       0       0       0       0
  4447 ;;      Locals:         0       2       0       0       0       0       0
  4448 ;;      Temps:          0       2       0       0       0       0       0
  4449 ;;      Totals:         0       4       0       0       0       0       0
  4450 ;;Total ram usage:        4 bytes
  4451 ;; Hardware stack levels used: 1
  4452 ;; Hardware stack levels required when called: 1
  4453 ;; This function calls:
  4454 ;;		_lcd_lireDonnees
  4455 ;; This function is called by:
  4456 ;;		_lcd_wrCom
  4457 ;;		_lcd_wrData
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           
  4461                           	psect	text25
  4462  0016AC                     __ptext25:
  4463                           	callstack 0
  4464  0016AC                     _lcd_busy:
  4465                           	callstack 0
  4466  0016AC  FFFF               	dw	65535	; assembler added errata NOP
  4467  0016AE                     
  4468                           ;Lcd4Lignes.c: 125:     int adresse;;Lcd4Lignes.c: 127:     PORTBbits.RB4 = 0;
  4469  0016AE  9881               	bcf	129,4,c	;volatile
  4470                           
  4471                           ;Lcd4Lignes.c: 128:     PORTAbits.RA5 = 1;
  4472  0016B0  8A80               	bsf	128,5,c	;volatile
  4473  0016B2                     l29:
  4474  0016B2  FFFF               	dw	65535	; assembler added errata NOP
  4475                           
  4476                           ;Lcd4Lignes.c: 131:     {;Lcd4Lignes.c: 132:         PORTAbits.RA4 = 1;
  4477  0016B4  8880               	bsf	128,4,c	;volatile
  4478                           
  4479                           ;Lcd4Lignes.c: 133:         __nop();
  4480  0016B6  F000               	nop	
  4481  0016B8                     
  4482                           ;Lcd4Lignes.c: 134:         adresse = lcd_lireDonnees() << 4;
  4483  0016B8  EC0F  F00D         	call	_lcd_lireDonnees	;wreg free
  4484  0016BC  0100               	movlb	0	; force () banked
  4485  0016BE  6FA0               	movwf	??_lcd_busy& (0+255),b
  4486  0016C0  6BA1               	clrf	(??_lcd_busy+1)& (0+255),b
  4487  0016C2  3BA0               	swapf	??_lcd_busy& (0+255),f,b
  4488  0016C4  3BA1               	swapf	(??_lcd_busy+1)& (0+255),f,b
  4489  0016C6  0EF0               	movlw	240
  4490  0016C8  17A1               	andwf	(??_lcd_busy+1)& (0+255),f,b
  4491  0016CA  51A0               	movf	??_lcd_busy& (0+255),w,b
  4492  0016CC  0B0F               	andlw	15
  4493  0016CE  13A1               	iorwf	(??_lcd_busy+1)& (0+255),f,b
  4494  0016D0  0EF0               	movlw	240
  4495  0016D2  17A0               	andwf	??_lcd_busy& (0+255),f,b
  4496  0016D4  C0A0  F0A2         	movff	??_lcd_busy,lcd_busy@adresse
  4497  0016D8  C0A1  F0A3         	movff	??_lcd_busy+1,lcd_busy@adresse+1
  4498  0016DC                     
  4499                           ; BSR set to: 0
  4500                           ;Lcd4Lignes.c: 135:         PORTAbits.RA4 = 0;
  4501  0016DC  9880               	bcf	128,4,c	;volatile
  4502  0016DE                     
  4503                           ; BSR set to: 0
  4504                           ;Lcd4Lignes.c: 136:         _delay((unsigned long)((2)*(16000000/4000000.0)));
  4505  0016DE  D000               	nop2		;2 cycle nop
  4506  0016E0  D000               	nop2		;2 cycle nop
  4507  0016E2  D000               	nop2		;2 cycle nop
  4508  0016E4  D000               	nop2		;2 cycle nop
  4509  0016E6                     
  4510                           ;Lcd4Lignes.c: 137:         PORTAbits.RA4 = 1;
  4511  0016E6  8880               	bsf	128,4,c	;volatile
  4512  0016E8                     
  4513                           ;Lcd4Lignes.c: 138:         __nop();
  4514  0016E8  F000               	nop	
  4515                           
  4516                           ;Lcd4Lignes.c: 139:         adresse |= lcd_lireDonnees();
  4517  0016EA  EC0F  F00D         	call	_lcd_lireDonnees	;wreg free
  4518  0016EE  0100               	movlb	0	; force () banked
  4519  0016F0  6FA0               	movwf	??_lcd_busy& (0+255),b
  4520  0016F2  51A0               	movf	??_lcd_busy& (0+255),w,b
  4521  0016F4  0100               	movlb	0	; force () banked
  4522  0016F6  13A2               	iorwf	lcd_busy@adresse& (0+255),f,b
  4523  0016F8                     
  4524                           ; BSR set to: 0
  4525                           ;Lcd4Lignes.c: 140:         PORTAbits.RA4 = 0;
  4526  0016F8  9880               	bcf	128,4,c	;volatile
  4527  0016FA                     
  4528                           ; BSR set to: 0
  4529                           ;Lcd4Lignes.c: 141:         _delay((unsigned long)((2)*(16000000/4000000.0)));
  4530  0016FA  D000               	nop2		;2 cycle nop
  4531  0016FC  D000               	nop2		;2 cycle nop
  4532  0016FE  D000               	nop2		;2 cycle nop
  4533  001700  D000               	nop2		;2 cycle nop
  4534  001702                     
  4535                           ;Lcd4Lignes.c: 142:     }
  4536  001702  0100               	movlb	0	; force () banked
  4537  001704  BFA2               	btfsc	lcd_busy@adresse& (0+255),7,b
  4538  001706  EF87  F00B         	goto	u11
  4539  00170A  EF8A  F00B         	goto	u10
  4540  00170E                     u11:
  4541  00170E  FFFF               	dw	65535	; assembler added errata NOP
  4542  001710  EF59  F00B         	goto	l29
  4543  001714                     u10:
  4544  001714  FFFF               	dw	65535	; assembler added errata NOP
  4545  001716                     
  4546                           ; BSR set to: 0
  4547                           ;Lcd4Lignes.c: 145:     PORTAbits.RA5 = 0;
  4548  001716  9A80               	bcf	128,5,c	;volatile
  4549  001718                     
  4550                           ; BSR set to: 0
  4551                           ;Lcd4Lignes.c: 146:     return(adresse&0x7f);
  4552  001718  0100               	movlb	0	; force () banked
  4553  00171A  51A2               	movf	lcd_busy@adresse& (0+255),w,b
  4554  00171C  0B7F               	andlw	127
  4555  00171E                     
  4556                           ; BSR set to: 0
  4557  00171E  0012               	return		;funcret
  4558  001720  FFFF               	dw	65535	; errata NOP
  4559  001722                     __end_of_lcd_busy:
  4560                           	callstack 0
  4561                           
  4562 ;; *************** function _lcd_lireDonnees *****************
  4563 ;; Defined at:
  4564 ;;		line 92 in file "Lcd4Lignes.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;		None
  4567 ;; Auto vars:     Size  Location     Type
  4568 ;;		None
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  1    wreg      unsigned char 
  4571 ;; Registers used:
  4572 ;;		wreg, status,2, status,0
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4578 ;;      Params:         0       0       0       0       0       0       0
  4579 ;;      Locals:         0       0       0       0       0       0       0
  4580 ;;      Temps:          0       0       0       0       0       0       0
  4581 ;;      Totals:         0       0       0       0       0       0       0
  4582 ;;Total ram usage:        0 bytes
  4583 ;; Hardware stack levels used: 1
  4584 ;; This function calls:
  4585 ;;		Nothing
  4586 ;; This function is called by:
  4587 ;;		_lcd_busy
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           	psect	text26
  4592  001A1E                     __ptext26:
  4593                           	callstack 0
  4594  001A1E                     _lcd_lireDonnees:
  4595                           	callstack 0
  4596  001A1E  FFFF               	dw	65535	; assembler added errata NOP
  4597  001A20                     
  4598                           ;Lcd4Lignes.c: 95:     return (PORTA & 0x0F);
  4599  001A20  5080               	movf	128,w,c	;volatile
  4600  001A22  0B0F               	andlw	15
  4601  001A24  0012               	return		;funcret
  4602  001A26  FFFF               	dw	65535	; errata NOP
  4603  001A28                     __end_of_lcd_lireDonnees:
  4604                           	callstack 0
  4605                           
  4606 ;; *************** function ___wmul *****************
  4607 ;; Defined at:
  4608 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  4609 ;; Parameters:    Size  Location     Type
  4610 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4611 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;  product         2    4[BANK0 ] unsigned int 
  4614 ;; Return value:  Size  Location     Type
  4615 ;;                  2    0[BANK0 ] unsigned int 
  4616 ;; Registers used:
  4617 ;;		wreg, status,2, status,0, prodl, prodh
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4623 ;;      Params:         0       4       0       0       0       0       0
  4624 ;;      Locals:         0       2       0       0       0       0       0
  4625 ;;      Temps:          0       0       0       0       0       0       0
  4626 ;;      Totals:         0       6       0       0       0       0       0
  4627 ;;Total ram usage:        6 bytes
  4628 ;; Hardware stack levels used: 1
  4629 ;; This function calls:
  4630 ;;		Nothing
  4631 ;; This function is called by:
  4632 ;;		_gereTouche
  4633 ;;		_verifNip
  4634 ;;		_affiche
  4635 ;;		_atoi
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639                           	psect	text27
  4640  001956                     __ptext27:
  4641                           	callstack 0
  4642  001956                     ___wmul:
  4643                           	callstack 0
  4644  001956  FFFF               	dw	65535	; assembler added errata NOP
  4645  001958  0100               	movlb	0	; () banked
  4646  00195A  51A0               	movf	___wmul@multiplier& (0+255),w,b
  4647  00195C  03A2               	mulwf	___wmul@multiplicand& (0+255),b
  4648  00195E  CFF3 F0A4          	movff	prodl,___wmul@product
  4649  001962  CFF4 F0A5          	movff	prodh,___wmul@product+1
  4650  001966  51A0               	movf	___wmul@multiplier& (0+255),w,b
  4651  001968  03A3               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  4652  00196A  50F3               	movf	243,w,c
  4653  00196C  27A5               	addwf	(___wmul@product+1)& (0+255),f,b
  4654  00196E  51A1               	movf	(___wmul@multiplier+1)& (0+255),w,b
  4655  001970  03A2               	mulwf	___wmul@multiplicand& (0+255),b
  4656  001972  50F3               	movf	243,w,c
  4657  001974  27A5               	addwf	(___wmul@product+1)& (0+255),f,b
  4658  001976                     
  4659                           ; BSR set to: 0
  4660  001976  C0A4  F0A0         	movff	___wmul@product,?___wmul
  4661  00197A  C0A5  F0A1         	movff	___wmul@product+1,?___wmul+1
  4662  00197E                     
  4663                           ; BSR set to: 0
  4664  00197E  0012               	return		;funcret
  4665  001980  FFFF               	dw	65535	; errata NOP
  4666  001982                     __end_of___wmul:
  4667                           	callstack 0
  4668                           
  4669                           	psect	param0
  4670  0000                     
  4671                           	psect	idloc
  4672                           
  4673                           ;Config register IDLOC0 @ 0x200000
  4674                           ;	unspecified, using default values
  4675  200000                     	org	2097152
  4676  200000  FF                 	db	255
  4677                           
  4678                           ;Config register IDLOC1 @ 0x200001
  4679                           ;	unspecified, using default values
  4680  200001                     	org	2097153
  4681  200001  FF                 	db	255
  4682                           
  4683                           ;Config register IDLOC2 @ 0x200002
  4684                           ;	unspecified, using default values
  4685  200002                     	org	2097154
  4686  200002  FF                 	db	255
  4687                           
  4688                           ;Config register IDLOC3 @ 0x200003
  4689                           ;	unspecified, using default values
  4690  200003                     	org	2097155
  4691  200003  FF                 	db	255
  4692                           
  4693                           ;Config register IDLOC4 @ 0x200004
  4694                           ;	unspecified, using default values
  4695  200004                     	org	2097156
  4696  200004  FF                 	db	255
  4697                           
  4698                           ;Config register IDLOC5 @ 0x200005
  4699                           ;	unspecified, using default values
  4700  200005                     	org	2097157
  4701  200005  FF                 	db	255
  4702                           
  4703                           ;Config register IDLOC6 @ 0x200006
  4704                           ;	unspecified, using default values
  4705  200006                     	org	2097158
  4706  200006  FF                 	db	255
  4707                           
  4708                           ;Config register IDLOC7 @ 0x200007
  4709                           ;	unspecified, using default values
  4710  200007                     	org	2097159
  4711  200007  FF                 	db	255
  4712                           
  4713                           	psect	config
  4714                           
  4715                           ; Padding undefined space
  4716  300000                     	org	3145728
  4717  300000  FF                 	db	255
  4718                           
  4719                           ;Config register CONFIG1H @ 0x300001
  4720                           ;	Oscillator Selection bits
  4721                           ;	OSC = HS, HS oscillator
  4722                           ;	Oscillator System Clock Switch Enable bit
  4723                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  4724  300001                     	org	3145729
  4725  300001  22                 	db	34
  4726                           
  4727                           ;Config register CONFIG2L @ 0x300002
  4728                           ;	Power-up Timer Enable bit
  4729                           ;	PWRT = OFF, PWRT disabled
  4730                           ;	Brown-out Reset Enable bit
  4731                           ;	BOR = OFF, Brown-out Reset disabled
  4732                           ;	Brown-out Reset Voltage bits
  4733                           ;	BORV = 25, VBOR set to 2.5V
  4734  300002                     	org	3145730
  4735  300002  0D                 	db	13
  4736                           
  4737                           ;Config register CONFIG2H @ 0x300003
  4738                           ;	Watchdog Timer Enable bit
  4739                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4740                           ;	Watchdog Timer Postscale Select bits
  4741                           ;	WDTPS = 128, 1:128
  4742  300003                     	org	3145731
  4743  300003  0E                 	db	14
  4744                           
  4745                           ;Config register CONFIG4L @ 0x300006
  4746                           ;	Stack Full/Underflow Reset Enable bit
  4747                           ;	STVR = OFF, Stack Full/Underflow will not cause Reset
  4748                           ;	Low-Voltage ICSP Enable bit
  4749                           ;	LVP = OFF, Low-Voltage ICSP disabled
  4750                           ;	Background Debugger Enable bit
  4751                           ;	DEBUG = 0x1, unprogrammed default
  4752  300006                     	org	3145734
  4753  300006  80                 	db	128
  4754                           
  4755                           ; Padding undefined space
  4756  300007                     	org	3145735
  4757  300007  FF                 	db	255
  4758                           
  4759                           ;Config register CONFIG5L @ 0x300008
  4760                           ;	Code Protection bit
  4761                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  4762                           ;	Code Protection bit
  4763                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  4764                           ;	Code Protection bit
  4765                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  4766                           ;	Code Protection bit
  4767                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  4768  300008                     	org	3145736
  4769  300008  0F                 	db	15
  4770                           
  4771                           ;Config register CONFIG5H @ 0x300009
  4772                           ;	Boot Block Code Protection bit
  4773                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  4774                           ;	Data EEPROM Code Protection bit
  4775                           ;	CPD = OFF, Data EEPROM not code protected
  4776  300009                     	org	3145737
  4777  300009  C0                 	db	192
  4778                           
  4779                           ;Config register CONFIG6L @ 0x30000A
  4780                           ;	Write Protection bit
  4781                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  4782                           ;	Write Protection bit
  4783                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  4784                           ;	Write Protection bit
  4785                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  4786                           ;	Write Protection bit
  4787                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  4788  30000A                     	org	3145738
  4789  30000A  0F                 	db	15
  4790                           
  4791                           ;Config register CONFIG6H @ 0x30000B
  4792                           ;	Configuration Register Write Protection bit
  4793                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  4794                           ;	Boot Block Write Protection bit
  4795                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  4796                           ;	Data EEPROM Write Protection bit
  4797                           ;	WRTD = OFF, Data EEPROM not write protected
  4798  30000B                     	org	3145739
  4799  30000B  E0                 	db	224
  4800                           
  4801                           ;Config register CONFIG7L @ 0x30000C
  4802                           ;	Table Read Protection bit
  4803                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  4804                           ;	Table Read Protection bit
  4805                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  4806                           ;	Table Read Protection bit
  4807                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  4808                           ;	Table Read Protection bit
  4809                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  4810  30000C                     	org	3145740
  4811  30000C  0F                 	db	15
  4812                           
  4813                           ;Config register CONFIG7H @ 0x30000D
  4814                           ;	Boot Block Table Read Protection bit
  4815                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  4816  30000D                     	org	3145741
  4817  30000D  40                 	db	64
  4818                           tosu	equ	0xFFF
  4819                           tosh	equ	0xFFE
  4820                           tosl	equ	0xFFD
  4821                           stkptr	equ	0xFFC
  4822                           pclatu	equ	0xFFB
  4823                           pclath	equ	0xFFA
  4824                           pcl	equ	0xFF9
  4825                           tblptru	equ	0xFF8
  4826                           tblptrh	equ	0xFF7
  4827                           tblptrl	equ	0xFF6
  4828                           tablat	equ	0xFF5
  4829                           prodh	equ	0xFF4
  4830                           prodl	equ	0xFF3
  4831                           indf0	equ	0xFEF
  4832                           postinc0	equ	0xFEE
  4833                           postdec0	equ	0xFED
  4834                           preinc0	equ	0xFEC
  4835                           plusw0	equ	0xFEB
  4836                           fsr0h	equ	0xFEA
  4837                           fsr0l	equ	0xFE9
  4838                           wreg	equ	0xFE8
  4839                           indf1	equ	0xFE7
  4840                           postinc1	equ	0xFE6
  4841                           postdec1	equ	0xFE5
  4842                           preinc1	equ	0xFE4
  4843                           plusw1	equ	0xFE3
  4844                           fsr1h	equ	0xFE2
  4845                           fsr1l	equ	0xFE1
  4846                           bsr	equ	0xFE0
  4847                           indf2	equ	0xFDF
  4848                           postinc2	equ	0xFDE
  4849                           postdec2	equ	0xFDD
  4850                           preinc2	equ	0xFDC
  4851                           plusw2	equ	0xFDB
  4852                           fsr2h	equ	0xFDA
  4853                           fsr2l	equ	0xFD9
  4854                           status	equ	0xFD8

Data Sizes:
    Strings     90
    Constant    0
    Data        364
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     31     102
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcmp@r	PTR const unsigned char  size(2) Largest target is 300
		 -> listeUsager.nip(BIGRAM[5]), listeUsager(BIGRAM[300]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 5
		 -> gereTouche@nip(BANK0[5]), 

    memset@dest	PTR void  size(2) Largest target is 5
		 -> gereTouche@nip(BANK0[5]), 

    memset@s	PTR unsigned char  size(2) Largest target is 5
		 -> gereTouche@nip(BANK0[5]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 1
		 -> gereTouche@touche(BANK0[1]), 

    verifNip@no	PTR unsigned char  size(2) Largest target is 5
		 -> gereTouche@nip(BANK0[5]), 

    sp__memset	PTR void  size(2) Largest target is 5
		 -> gereTouche@nip(BANK0[5]), 

    gereTouche@usager	PTR int  size(2) Largest target is 2
		 -> main@noUsagerCourant(BANK0[2]), 

    gereTouche@etat	PTR unsigned int  size(2) Largest target is 2
		 -> main@etatCourant(BANK0[2]), 

    lcd_putMessage@chaine	PTR const unsigned char  size(3) Largest target is 300
		 -> STR_10(CODE[8]), STR_9(CODE[13]), STR_8(CODE[8]), STR_7(CODE[9]), 
		 -> STR_6(CODE[8]), STR_5(CODE[17]), STR_4(CODE[8]), STR_3(CODE[27]), 
		 -> STR_2(CODE[8]), STR_1(CODE[16]), listeUsager.nom(BIGRAM[20]), listeUsager(BIGRAM[300]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_affiche
    _main->_gereTouche
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _gereTouche->_verifNip
    _verifNip->_strcmp
    _strcmp->___wmul
    _atoi->_isspace
    _affiche->_lcd_putMessage
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_wrData->_lcd_busy
    _lcd_gotoXY->_lcd_wrCom
    _lcd_effaceAffichage->_lcd_wrCom
    _lcd_curseurHome->_lcd_wrCom
    _lcd_wrCom->_lcd_busy

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   11161
                                             25 BANK0      6     6      0
                            _affiche
                         _gereTouche
                      _initRegistres
                         _init_serie
                              _kbhit
                    _lcd_curseurHome
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     720
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      60
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     510
                                              6 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (1) _init_serie                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initRegistres                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gereTouche                                           7     3      4    6584
                                             18 BANK0      7     3      4
                             ___wmul
                               _atoi
                              _getch
                              _kbhit
                      _lcd_ecritChar
                             _memset
                           _verifNip
 ---------------------------------------------------------------------------------
 (2) _verifNip                                             6     0      6    1347
                                             12 BANK0      6     0      6
                             ___wmul
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4     264
                                              6 BANK0      6     2      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1711
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (1) _kbhit                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getch                                                1     1      0      15
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                10     8      2    1536
                                              7 BANK0     10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (3) _isspace                                              7     5      2     207
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              6     4      2     161
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _affiche                                              6     2      4    3509
                                             19 BANK0      6     2      4
                             ___wmul
                    _lcd_curseurHome
                _lcd_effaceAffichage
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (2) _lcd_putMessage                                       9     6      3    1226
                                             10 BANK0      9     6      3
                             ___wmul (ARG)
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        4     4      0     300
                                              6 BANK0      4     4      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     120
                                              4 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoXY                                           4     3      1    1020
                                              6 BANK0      4     3      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_effaceAffichage                                  0     0      0     150
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     150
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_wrCom                                            2     2      0     150
                                              4 BANK0      2     2      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _lcd_ecrireDonnees                                    2     2      0      60
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             4     4      0      30
                                              0 BANK0      4     4      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (4) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     767
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _affiche
     ___wmul
     _lcd_curseurHome
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_effaceAffichage
       _lcd_wrCom
     _lcd_gotoXY
       _lcd_wrCom
     _lcd_putMessage
       ___wmul (ARG)
       _lcd_ecritChar (ARG)
         _lcd_wrCom
         _lcd_wrData
           _lcd_busy
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _gereTouche
     ___wmul
     _atoi
       ___wmul
       _isdigit
       _isspace
     _getch
     _kbhit
     _lcd_ecritChar
     _memset
     _verifNip
       ___wmul
       _strcmp
         ___wmul (ARG)
   _initRegistres
   _init_serie
   _kbhit
   _lcd_curseurHome
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
       _lcd_wrCom
       _lcd_wrData
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     12C      23       19.5%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1F      66       5       63.7%
BITBIGSFRl          80      0       0      21        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITBIGSFRhhh        3E      0       0      16        0.0%
BITBIGSFRhhlhh      11      0       0      17        0.0%
BITBIGSFRhl          E      0       0      20        0.0%
BITBIGSFRhhlhll      C      0       0      18        0.0%
BITBIGSFRhhlhll      8      0       0      19        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      66      22        0.0%
DATA                 0      0     192       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Feb 02 14:21:28 2023

                                                                     l30 1716  
                                                                     l23 1A24  
                                                                     l31 171E  
                                                                     l40 1846  
                                                                     l26 16A8  
                                                                     l43 178C  
                                                                     l52 1A0E  
                                                                     l29 16B2  
                                                                     l37 1426  
                                                                     l46 1952  
                                                                     l49 1A02  
                                                                     l67 14BC  
                                                                     l84 1228  
                                                                     l78 15B6  
                                                                     l97 12E2  
                                                                     u10 1714  
                                                                     u11 170E  
                                                                     u20 13E6  
                                                                     u21 13E0  
                                                                     u30 13FE  
                                                                     u31 13F8  
                                                    ___wmul@multiplicand 00A2  
                                                                    l100 1A1A  
                                                                    l205 19F0  
                                                                    l222 19DA  
                                                                    l231 19A8  
                                                                    l233 19BC  
                                                                    l234 19C4  
                                                                    l250 19A0  
                                                                    l163 0AC2  
                                                                    l180 0AC2  
                                                                    l253 197E  
                                                                    l175 0ABC  
                                                                    l184 162E  
                                                                    l194 0CF4  
                                                                    l952 18E0  
                                                                    l960 17EE  
                                                                    l946 102C  
                                                                    l949 1036  
                                                                    l981 153E  
                                                                    l983 1A20  
                                                                    l991 16B8  
                                                                    l967 0EBA  
                                                                    l993 16DC  
                                                                    l995 16DE  
                                                                    l987 163A  
                                                                    l997 16E6  
                                                                    l989 16AE  
                                                                    l999 16E8  
                                                                    u100 124E  
                                                                    u101 1248  
                                                                    u110 1270  
                                                                    u111 126A  
                                                                    u120 12C2  
                                                                    u121 12BC  
                                                                    u130 12DC  
                                                                    u131 12D6  
                                                                    u170 1994  
                                                                    u171 198E  
                                                                    u180 19BA  
                                                                    u181 19B4  
                                                                    u600 1226  
                                                                    u520 14FA  
                                                                    u601 1220  
                                                                    u521 14F4  
                                                                    u610 0EFC  
                                                                    u530 1516  
                                                                    u611 0EF6  
                                                                    u531 1510  
                                                                    u540 17AE  
                                                                    u620 0F34  
                                                                    u700 0EB0  
                                                                    u541 17A8  
                                                                    u621 0F2E  
                                                                    u701 0EAA  
                                                                    u550 17E0  
                                                                    u630 0FF8  
                                                                    u710 0674  
                                                                    u551 17DA  
                                                                    u631 0FF2  
                                                                    u711 066E  
                                                                    u560 18D6  
                                                                    u640 100E  
                                                                    u800 083A  
                                                                    u720 0692  
                                                                    u561 18CE  
                                                                    u641 1008  
                                                                    u801 0834  
                                                                    u721 068C  
                                                                    u570 18DA  
                                                                    u650 1622  
                                                                    u810 0856  
                                                                    u730 06A8  
                                                                    u651 161C  
                                                                    u811 0850  
                                                                    u731 06A2  
                                                                    u580 11C0  
                                                                    u660 0D1A  
                                                                    u820 0882  
                                                                    u740 06C6  
                                                                    u661 0D14  
                                                                    u821 087C  
                                                                    u741 06C0  
                                                                    u590 1214  
                                                                    u670 0D6A  
                                                                    u830 08CE  
                                                                    u750 06EA  
                                                                    u671 0D64  
                                                                    u831 08C8  
                                                                    u751 06E4  
                                                                    u680 0DEA  
                                                                    u840 0908  
                                                                    u760 078A  
                                                                    u681 0DE4  
                                                                    u841 0902  
                                                                    u761 0784  
                                                                    u690 0E3E  
                                                                    u850 09DA  
                                                                    u770 07AC  
                                                                    u587 11B6  
                                                                    u691 0E38  
                                                                    u851 09D4  
                                                                    u771 07A6  
                                                                    u907 1730  
                                                                    u860 09FA  
                                                                    u780 07E8  
                                                                    u597 120A  
                                                                    u861 09F4  
                                                                    u781 07E2  
                                                                    u917 174C  
                                                                    u870 0A6A  
                                                                    u790 0806  
                                                                    u871 0A64  
                                                                    u791 0800  
                                                                    u927 175E  
                                                                    u880 132A  
                                                                    u937 1770  
                                                                    u881 1324  
                                                                    u890 1368  
                                                                    u947 1782  
                                                                    u891 1362  
                                                                    u957 13CC  
                                                                    u967 1408  
                                                            lcd_gotoXY@x 00A9  
                                                                    wreg 000FE8  
                                                            lcd_gotoXY@y 00A6  
                                                                   l1001 16F8  
                                                                   l1003 16FA  
                                                                   l1011 1A14  
                                                                   l1005 1702  
                                                                   l1021 13A6  
                                                                   l1013 1394  
                                                                   l1007 1718  
                                                                   l1031 13C6  
                                                                   l1023 13A8  
                                                                   l1015 1398  
                                                                   l1041 1414  
                                                                   l1033 13CA  
                                                                   l1025 13B2  
                                                                   l1017 139C  
                                                                   l2001 1494  
                                                                   l1043 141A  
                                                                   l1035 13D2  
                                                                   l1027 13B6  
                                                                   l1019 13A4  
                                                                   l1051 17FC  
                                                                   l1131 1728  
                                                                   l1045 1422  
                                                                   l1037 13E8  
                                                                   l1029 13BE  
                                                                   l1061 1816  
                                                                   l1053 1800  
                                                                   l1221 199C  
                                                                   l1141 174A  
                                                                   l1133 173C  
                                                                   l1039 13FE  
                                                                   l1071 1836  
                                                                   l1063 181A  
                                                                   l1055 1808  
                                                                   l1151 176A  
                                                                   l1143 1752  
                                                                   l1135 173E  
                                                                   l1073 183A  
                                                                   l1065 1822  
                                                                   l1057 180A  
                                                                   l1049 17F8  
                                                                   l1081 1558  
                                                                   l1225 19A8  
                                                                   l1217 1984  
                                                                   l1161 1788  
                                                                   l1153 176E  
                                                                   l1145 1758  
                                                                   l1137 1740  
                                                                   l1129 1724  
                                                                   l1321 192C  
                                                                   l1067 182A  
                                                                   l1059 180C  
                                                                   l1083 1564  
                                                                   l1227 19C0  
                                                                   l1219 1996  
                                                                   l1171 1254  
                                                                   l1163 122E  
                                                                   l1155 1776  
                                                                   l1147 175C  
                                                                   l1139 1746  
                                                                   l1331 1948  
                                                                   l1323 1930  
                                                                   l1077 1A08  
                                                                   l1069 182E  
                                                                   l1085 1570  
                                                                   l1181 12AE  
                                                                   l1173 125C  
                                                                   l1165 1234  
                                                                   l1157 177C  
                                                                   l1149 1764  
                                                                   l1333 194E  
                                                                   l1325 1936  
                                                                   l1079 1548  
                                                                   l1343 19E0  
                                                                   l1351 19D4  
                                                                   l1183 12C2  
                                                                   l1167 123A  
                                                                   l1159 1780  
                                                                   l1327 193C  
                                                                   l1319 1926  
                                                                   l1089 157C  
                                                                   l1353 19D6  
                                                                   l1345 19CA  
                                                                   l1185 12C8  
                                                                   l1177 1276  
                                                                   l1329 1942  
                                                                   l1611 14C8  
                                                                   l1355 19D8  
                                                                   l1347 19CE  
                                                                   l1179 12AA  
                                                                   l1187 12DC  
                                                                   l1621 1958  
                                                                   l1189 19F6  
                                                                   l1613 14D4  
                                                                   l1701 15BE  
                                                                   l1349 19D2  
                                                                   l1623 1976  
                                                                   l1631 17B0  
                                                                   l1615 14FC  
                                                                   l1703 15D6  
                                                                   l1633 17E2  
                                                                   l1721 0D36  
                                                                   l1713 0CFC  
                                                                   l1617 1516  
                                                                   l1609 14C4  
                                                                   l1705 1624  
                                                                   l1801 08AE  
                                                                   l1651 1468  
                                                                   l1643 1430  
                                                                   l1635 17E6  
                                                                   l1627 1790  
                                                                   l1731 0DEC  
                                                                   l1723 0D6C  
                                                                   l1715 0D1C  
                                                                   l1811 0962  
                                                                   l1803 08D0  
                                                                   l1645 1434  
                                                                   l1661 116A  
                                                                   l1629 1798  
                                                                   l1709 162A  
                                                                   l1821 09DC  
                                                                   l1805 090A  
                                                                   l1813 0970  
                                                                   l1901 130A  
                                                                   l1647 1444  
                                                                   l1655 147A  
                                                                   l1663 1174  
                                                                   l1639 18A0  
                                                                   l1671 0ED8  
                                                                   l1751 0E9A  
                                                                   l1743 0E4C  
                                                                   l1735 0DF8  
                                                                   l1727 0D78  
                                                                   l1719 0D28  
                                                                   l1831 0A6C  
                                                                   l1823 09FC  
                                                                   l1815 0992  
                                                                   l1807 091E  
                                                                   l1911 136A  
                                                                   l1903 130E  
                                                                   l1649 1456  
                                                                   l1665 11C4  
                                                                   l1841 0AD8  
                                                                   l1681 0F44  
                                                                   l1753 0EB2  
                                                                   l1745 0E82  
                                                                   l1737 0E26  
                                                                   l1729 0DD2  
                                                                   l1833 0A8C  
                                                                   l1825 0A1C  
                                                                   l1817 09B4  
                                                                   l1809 0940  
                                                                   l1761 067E  
                                                                   l1913 137E  
                                                                   l1905 1312  
                                                                   l1667 11C8  
                                                                   l1851 0B5E  
                                                                   l1843 0AF0  
                                                                   l1691 0FC0  
                                                                   l1683 0F4E  
                                                                   l1675 0EDE  
                                                                   l1747 0E90  
                                                                   l1739 0E40  
                                                                   l1835 0AAE  
                                                                   l1827 0A3E  
                                                                   l1819 09C2  
                                                                   l1771 06EC  
                                                                   l1763 0694  
                                                                   l1907 132C  
                                                                   l1861 0BC4  
                                                                   l1853 0B6E  
                                                                   l1845 0B18  
                                                                   l1837 0ACA  
                                                                   l1693 0FFA  
                                                                   l1685 0F84  
                                                                   l1677 0EFE  
                                                                   l1669 0EC2  
                                                                   l1749 0E96  
                                                                   l1829 0A4C  
                                                                   l1781 07B4  
                                                                   l1773 0710  
                                                                   l1765 06AA  
                                                                   l1757 065E  
                                                                   l1909 1344  
                                                                   l1871 0C4C  
                                                                   l1863 0BCE  
                                                                   l1855 0B78  
                                                                   l1847 0B22  
                                                                   l1839 0ACE  
                                                                   l1695 1010  
                                                                   l1687 0FBC  
                                                                   l1679 0F3A  
                                                                   l1791 081C  
                                                                   l1783 07C6  
                                                                   l1767 06C8  
                                                                   l1775 076A  
                                                                   l1759 0676  
                                                                   l1881 0CA4  
                                                                   l1873 0C58  
                                                                   l1865 0BE6  
                                                                   l1857 0B90  
                                                                   l1849 0B3A  
                                                                   l1793 083C  
                                                                   l1777 078C  
                                                                   l1769 06D0  
                                                                   l1785 07D0  
                                                                   l1875 0C5E  
                                                                   l1867 0C28  
                                                                   l1859 0BB4  
                                                                   l1795 0858  
                                                                   l1787 07EA  
                                                                   l1779 07AE  
                                                                   l1877 0C68  
                                                                   l1869 0C34  
                                                                   l1885 0CAA  
                                                                   l1797 0884  
                                                                   l1789 0808  
                                                                   l1893 12E6  
                                                                   l1879 0C80  
                                                                   l1799 0898  
                                                                   l1895 12FC  
                                                                   l1897 1302  
                                                                   l1995 0F6C  
                                                                   l1899 1306  
                                                                   l1997 0CC4  
                                                                   l1999 1596  
                                                                   STR_1 062D  
                                                                   STR_2 0653  
                                                                   STR_3 0601  
                                                                   STR_4 0653  
                                                                   STR_5 061C  
                                                                   STR_6 0653  
                                                                   STR_7 064A  
                                                                   STR_8 0653  
                                                                   STR_9 063D  
                                                                   _RCIF 007CF5  
                                                                   _atoi 0EC0  
                                                                   _main 12E6  
                                                                   fsr1h 000FE2  
                                                                   fsr2h 000FDA  
                                                                   indf1 000FE7  
                                                                   indf2 000FDF  
                                                                   fsr1l 000FE1  
                                                                   fsr2l 000FD9  
                                                                   prodh 000FF4  
                                                                   prodl 000FF3  
                                                                   start 0002  
                                                        ?_lcd_putMessage 00AA  
                                                           ___param_bank 000000  
                                                          verifNip@index 00B0  
                                                        ??_lcd_ecritChar 00A6  
                                                                  ?_atoi 00A7  
                                                                  ?_main 00A0  
                                                                  STR_10 0653  
                                                                  _RCREG 000FAE  
                                                        __end_of_affiche 0CFA  
                                                                  _SPBRG 000FAF  
                                                                  _PORTA 000F80  
                                                                  _TRISA 000F92  
                                                                  _TRISB 000F93  
                                                                  _TRISC 000F94  
                                                                  _TRISD 000F95  
                                                                  _TXREG 000FAD  
                                                        ??_lcd_initCGRam 00A6  
                                                                  _getch 19A6  
                                                                  _kbhit 1982  
                                                        __end_of_isdigit 18E4  
                                                                  atoi@n 00AF  
                                                                  atoi@s 00A7  
                                                        __end_of_isspace 17F2  
                                                                  tablat 000FF5  
                                                                  plusw2 000FDB  
                                                                  status 000FD8  
                                                        __initialization 184A  
                                                           __end_of_atoi 103C  
                                                           __end_of_main 138E  
                                                   lcd_putMessage@chaine 00AA  
                                                                 ??_atoi 00A9  
                                                                 ??_main 00B9  
                                                          __activetblptr 000003  
                                                         verifNip@usager 00AC  
                                                                 ?_getch 00A0  
                                                                 _ADCON1 000FC1  
                                                                 ?_kbhit 00A0  
                                                         lcd_initCGRam@i 00A8  
                                                         lcd_initCGRam@j 00A9  
                                                       __end_of_lcd_busy 1722  
                                                       __end_of_lcd_init 1956  
                                                                 ___wmul 1956  
                                                              ??_affiche 00B7  
                                                                 _memset 0CFA  
                                                                 clear_0 1894  
                                                                 isa$std 000001  
                                                                 getch@c 00A0  
                                                                 _strcmp 14C2  
                                                           __pdataBIGRAM 00C6  
                                                              ??_isdigit 00A2  
                                                    main@noUsagerCourant 00BB  
                                                           __mediumconst 0000  
                                                              ??_isspace 00A2  
                                                       __end_of_verifNip 1634  
                                                                 tblptrh 000FF7  
                                                                 tblptrl 000FF6  
                                                                 tblptru 000FF8  
                                                          _initRegistres 19DE  
                                                      _lcd_resetSequence 1722  
                                                             __accesstop 0060  
                                                __end_of__initialization 189A  
                                                    _lcd_strobeEnableBit 1A12  
                                                     ?_lcd_resetSequence 00A0  
                                                          ___rparam_used 000000  
                                                    _lcd_effaceAffichage 19F4  
                                                           __pidataBANK0 18E4  
                                                    ??_lcd_resetSequence 00A2  
                                                          __end_of_getch 19C8  
                                                          __end_of_kbhit 19A6  
                                                   ?_lcd_strobeEnableBit 00A0  
                                                   ?_lcd_effaceAffichage 00A0  
                                                                ??_getch 00A0  
                                                                ??_kbhit 00A0  
                                                         ?_initRegistres 00A0  
                                              __end_of_lcd_resetSequence 1790  
                                                      _lcd_ecrireDonnees 1634  
                                                             __pbssBANK0 00BF  
                                                       ??_lcd_putMessage 00AD  
                                                     ?_lcd_ecrireDonnees 00A0  
                                                    ??_lcd_ecrireDonnees 00A0  
                                                                ?___wmul 00A0  
                                                                ?_memset 00A0  
                                                  ??_lcd_strobeEnableBit 00A0  
                                                                ?_strcmp 00A6  
                                                             _gereTouche 065C  
                                                             _lcd_gotoXY 142A  
                                                  ??_lcd_effaceAffichage 00A6  
                                                             _lcd_wrData 17F2  
                                              __end_of_lcd_ecrireDonnees 16AC  
                                                              ?_lcd_busy 00A0  
                                                              ?_lcd_init 00A0  
                                                lcd_ecrireDonnees@donnee 00A1  
                                                                __Hparam 0000  
                                                                __Lparam 0000  
                                                      __end_of_lcd_wrCom 142A  
                                                              ?_verifNip 00AC  
                                                           __psmallconst 0600  
                                                                _affiche 0AC8  
                                                                __pcinit 184A  
                                                             _init_serie 19C8  
                                                                __ramtop 0600  
                                                                __ptext0 12E6  
                                                                __ptext1 1924  
                                                                __ptext2 1722  
                                                                __ptext3 122C  
                                                                __ptext4 19C8  
                                                                __ptext5 19DE  
                                                                __ptext6 065C  
                                                                __ptext7 15BC  
                                                                __ptext8 14C2  
                                                                __ptext9 0CFA  
                                                  __end_of_lcd_ecritChar 15BC  
                                                        lcd_busy@adresse 00A2  
                                                                _isdigit 18A0  
                                                                _isspace 1790  
                                                        ??_initRegistres 00A0  
                                                       lcd_ecritChar@car 00A8  
                                                                atoi@neg 00AD  
                                                             ??_lcd_busy 00A0  
                                                             ??_lcd_init 00AA  
                                                   end_of_initialization 189A  
                                                  __end_of_lcd_initCGRam 12E6  
                                                                memset@c 00A2  
                                                                memset@k 00A8  
                                                                memset@n 00A4  
                                                                memset@s 00AA  
                                                      ??_lcd_lireDonnees 00A0  
                                                              _RCSTAbits 000FAB  
                                                                postdec1 000FE5  
                                                                postdec2 000FDD  
                                                             ??_verifNip 00B2  
                                                                postinc0 000FEE  
                                                                postinc1 000FE6  
                                                                postinc2 000FDE  
                                                      ??_lcd_curseurHome 00A6  
                                                                strcmp@l 00A6  
                                                                strcmp@r 00A8  
                                                    lcd_ecritChar@posRam 00A9  
                                                              _PORTAbits 000F80  
                                                              _PORTBbits 000F81  
                                                              _PORTCbits 000F82  
                                                              _PORTDbits 000F83  
                                                            ?_gereTouche 00B2  
                                                            ?_lcd_gotoXY 00A6  
                                                              _TRISCbits 000F94  
                                                            ?_lcd_wrData 00A0  
                                                              _TXSTAbits 000FAC  
                                                          __pidataBIGRAM 103C  
                                                         __end_of___wmul 1982  
                                                            ?_init_serie 00A0  
                                                         __end_of_memset 0EC0  
                                                         __end_of_strcmp 1542  
                                                    start_initialization 184A  
                                                               ??___wmul 00A4  
                                                            __pdataBANK0 0060  
                                                               ??_memset 00A6  
                                                             memset@dest 00A0  
                                                               ??_strcmp 00AA  
                                                          __pcstackBANK0 00A0  
                                            __end_of_lcd_strobeEnableBit 1A1E  
                                                        main@etatAffiche 00B9  
                                                               ?_affiche 00B3  
                                            __end_of_lcd_effaceAffichage 1A06  
                                                              _lcd_wrCom 138E  
                                                        main@etatCourant 00BD  
                                                            __smallconst 0600  
                                                               ?_isdigit 00A0  
                                                               ?_isspace 00A0  
                                                        _lcd_lireDonnees 1A1E  
                                                    lcd_wrData@caractere 00A4  
                                                        _lcd_curseurHome 1A06  
                                                         ___wmul@product 00A4  
                                                            affiche@etat 00B3  
                                                             ?_lcd_wrCom 00A0  
                                                      ___wmul@multiplier 00A0  
                                                           ??_gereTouche 00B6  
                                                             verifNip@no 00AE  
                                                           ??_lcd_gotoXY 00A7  
                                                           ??_lcd_wrData 00A4  
                                                           _isspace$1197 00A6  
                                                  __end_of_initRegistres 19F4  
                                                      lcd_wrCom@commande 00A5  
                                                              copy_data0 185E  
                                                              copy_data1 1882  
                                                     gereTouche@indexNIP 00BF  
                                                               __Hparam0 0000  
                                                               __Lparam0 0000  
                                                     __end_of_gereTouche 0AC8  
                                                     __end_of_lcd_gotoXY 14C2  
                                                     __end_of_lcd_wrData 184A  
                                                           ??_init_serie 00A0  
                                                        lcd_putMessage@j 00B2  
                                                __end_of_lcd_lireDonnees 1A28  
                                                               _matCGRAM 0060  
                                                __end_of_lcd_curseurHome 1A12  
                                                               __ptext10 1982  
                                                               __ptext11 19A6  
                                                               __ptext20 19F4  
                                                               __ptext12 0EC0  
                                                               __ptext21 1A06  
                                                               __ptext13 1790  
                                                               __ptext22 138E  
                                                               __ptext14 18A0  
                                                               __ptext23 1A12  
                                                               __ptext15 0AC8  
                                                               __ptext24 1634  
                                                               __ptext16 1168  
                                                               __ptext25 16AC  
                                                               __ptext17 1542  
                                                               __ptext26 1A1E  
                                                               __ptext18 17F2  
                                                               __ptext27 1956  
                                                               __ptext19 142A  
                                                               _lcd_busy 16AC  
                                                               _lcd_init 1924  
                                                     __end_of_init_serie 19DE  
                                                               isa$xinst 000000  
                                                               _verifNip 15BC  
                                                            _listeUsager 00C6  
                                                            ??_lcd_wrCom 00A4  
                                                          _lcd_ecritChar 1542  
                                                               isdigit@c 00A0  
                                                          _lcd_initCGRam 122C  
                                                               isspace@c 00A0  
                                                         _lcd_putMessage 1168  
                                                          affiche@usager 00B5  
                                                       gereTouche@usager 00B4  
                                                       gereTouche@touche 00B8  
                                                         ?_lcd_ecritChar 00A0  
                                                       ?_lcd_lireDonnees 00A0  
                                                       ?_lcd_curseurHome 00A0  
                                                         ?_lcd_initCGRam 00A0  
                                                         gereTouche@etat 00B2  
                                                 __end_of_lcd_putMessage 122C  
                                                          gereTouche@nip 00C1  
