

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Feb 02 14:15:49 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F458
     2                           	fnconf	param0,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec,minocg
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,minocg
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,minocg
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2,minocg
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2,minocg
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2,minocg
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2,minocg
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2,minocg
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,minocg
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1,minocg
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46  0000                     
    47                           ; Version 2.40
    48                           ; Generated 17/11/2021 GMT
    49                           ; 
    50                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F458 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataBIGRAM
    84  00103C                     __pidataBIGRAM:
    85                           	callstack 0
    86                           
    87                           ;initializer for _listeUsager
    88  00103C  4D                 	db	77
    89  00103D  72                 	db	114
    90  00103E  20                 	db	32
    91  00103F  5A                 	db	90
    92  001040  65                 	db	101
    93  001041  72                 	db	114
    94  001042  6F                 	db	111
    95  001043  00                 	db	0
    96  001044  00                 	db	0
    97  001045  00                 	db	0
    98  001046  00                 	db	0
    99  001047  00                 	db	0
   100  001048  00                 	db	0
   101  001049  00                 	db	0
   102  00104A  00                 	db	0
   103  00104B  00                 	db	0
   104  00104C  00                 	db	0
   105  00104D  00                 	db	0
   106  00104E  00                 	db	0
   107  00104F  00                 	db	0
   108  001050  00                 	db	0
   109  001051  00                 	db	0
   110  001052  00                 	db	0
   111  001053  00                 	db	0
   112  001054  00                 	db	0
   113  001055  4D                 	db	77
   114  001056  72                 	db	114
   115  001057  20                 	db	32
   116  001058  55                 	db	85
   117  001059  6E                 	db	110
   118  00105A  00                 	db	0
   119  00105B  00                 	db	0
   120  00105C  00                 	db	0
   121  00105D  00                 	db	0
   122  00105E  00                 	db	0
   123  00105F  00                 	db	0
   124  001060  00                 	db	0
   125  001061  00                 	db	0
   126  001062  00                 	db	0
   127  001063  00                 	db	0
   128  001064  00                 	db	0
   129  001065  00                 	db	0
   130  001066  00                 	db	0
   131  001067  00                 	db	0
   132  001068  00                 	db	0
   133  001069  31                 	db	49
   134  00106A  00                 	db	0
   135  00106B  00                 	db	0
   136  00106C  00                 	db	0
   137  00106D  00                 	db	0
   138  00106E  4D                 	db	77
   139  00106F  6D                 	db	109
   140  001070  65                 	db	101
   141  001071  20                 	db	32
   142  001072  44                 	db	68
   143  001073  65                 	db	101
   144  001074  75                 	db	117
   145  001075  78                 	db	120
   146  001076  00                 	db	0
   147  001077  00                 	db	0
   148  001078  00                 	db	0
   149  001079  00                 	db	0
   150  00107A  00                 	db	0
   151  00107B  00                 	db	0
   152  00107C  00                 	db	0
   153  00107D  00                 	db	0
   154  00107E  00                 	db	0
   155  00107F  00                 	db	0
   156  001080  00                 	db	0
   157  001081  00                 	db	0
   158  001082  32                 	db	50
   159  001083  32                 	db	50
   160  001084  00                 	db	0
   161  001085  00                 	db	0
   162  001086  00                 	db	0
   163  001087  4D                 	db	77
   164  001088  72                 	db	114
   165  001089  20                 	db	32
   166  00108A  54                 	db	84
   167  00108B  72                 	db	114
   168  00108C  6F                 	db	111
   169  00108D  69                 	db	105
   170  00108E  73                 	db	115
   171  00108F  00                 	db	0
   172  001090  00                 	db	0
   173  001091  00                 	db	0
   174  001092  00                 	db	0
   175  001093  00                 	db	0
   176  001094  00                 	db	0
   177  001095  00                 	db	0
   178  001096  00                 	db	0
   179  001097  00                 	db	0
   180  001098  00                 	db	0
   181  001099  00                 	db	0
   182  00109A  00                 	db	0
   183  00109B  33                 	db	51
   184  00109C  33                 	db	51
   185  00109D  33                 	db	51
   186  00109E  00                 	db	0
   187  00109F  00                 	db	0
   188  0010A0  4D                 	db	77
   189  0010A1  72                 	db	114
   190  0010A2  20                 	db	32
   191  0010A3  51                 	db	81
   192  0010A4  75                 	db	117
   193  0010A5  61                 	db	97
   194  0010A6  74                 	db	116
   195  0010A7  72                 	db	114
   196  0010A8  65                 	db	101
   197  0010A9  00                 	db	0
   198  0010AA  00                 	db	0
   199  0010AB  00                 	db	0
   200  0010AC  00                 	db	0
   201  0010AD  00                 	db	0
   202  0010AE  00                 	db	0
   203  0010AF  00                 	db	0
   204  0010B0  00                 	db	0
   205  0010B1  00                 	db	0
   206  0010B2  00                 	db	0
   207  0010B3  00                 	db	0
   208  0010B4  34                 	db	52
   209  0010B5  34                 	db	52
   210  0010B6  34                 	db	52
   211  0010B7  34                 	db	52
   212  0010B8  00                 	db	0
   213  0010B9  4D                 	db	77
   214  0010BA  6D                 	db	109
   215  0010BB  65                 	db	101
   216  0010BC  20                 	db	32
   217  0010BD  4E                 	db	78
   218  0010BE  6F                 	db	111
   219  0010BF  35                 	db	53
   220  0010C0  20                 	db	32
   221  0010C1  00                 	db	0
   222  0010C2  00                 	db	0
   223  0010C3  00                 	db	0
   224  0010C4  00                 	db	0
   225  0010C5  00                 	db	0
   226  0010C6  00                 	db	0
   227  0010C7  00                 	db	0
   228  0010C8  00                 	db	0
   229  0010C9  00                 	db	0
   230  0010CA  00                 	db	0
   231  0010CB  00                 	db	0
   232  0010CC  00                 	db	0
   233  0010CD  35                 	db	53
   234  0010CE  00                 	db	0
   235  0010CF  00                 	db	0
   236  0010D0  00                 	db	0
   237  0010D1  00                 	db	0
   238  0010D2  4D                 	db	77
   239  0010D3  72                 	db	114
   240  0010D4  20                 	db	32
   241  0010D5  4E                 	db	78
   242  0010D6  6F                 	db	111
   243  0010D7  36                 	db	54
   244  0010D8  00                 	db	0
   245  0010D9  00                 	db	0
   246  0010DA  00                 	db	0
   247  0010DB  00                 	db	0
   248  0010DC  00                 	db	0
   249  0010DD  00                 	db	0
   250  0010DE  00                 	db	0
   251  0010DF  00                 	db	0
   252  0010E0  00                 	db	0
   253  0010E1  00                 	db	0
   254  0010E2  00                 	db	0
   255  0010E3  00                 	db	0
   256  0010E4  00                 	db	0
   257  0010E5  00                 	db	0
   258  0010E6  36                 	db	54
   259  0010E7  00                 	db	0
   260  0010E8  00                 	db	0
   261  0010E9  00                 	db	0
   262  0010EA  00                 	db	0
   263  0010EB  4D                 	db	77
   264  0010EC  6D                 	db	109
   265  0010ED  65                 	db	101
   266  0010EE  20                 	db	32
   267  0010EF  4E                 	db	78
   268  0010F0  6F                 	db	111
   269  0010F1  37                 	db	55
   270  0010F2  00                 	db	0
   271  0010F3  00                 	db	0
   272  0010F4  00                 	db	0
   273  0010F5  00                 	db	0
   274  0010F6  00                 	db	0
   275  0010F7  00                 	db	0
   276  0010F8  00                 	db	0
   277  0010F9  00                 	db	0
   278  0010FA  00                 	db	0
   279  0010FB  00                 	db	0
   280  0010FC  00                 	db	0
   281  0010FD  00                 	db	0
   282  0010FE  00                 	db	0
   283  0010FF  37                 	db	55
   284  001100  00                 	db	0
   285  001101  00                 	db	0
   286  001102  00                 	db	0
   287  001103  00                 	db	0
   288  001104  4D                 	db	77
   289  001105  72                 	db	114
   290  001106  20                 	db	32
   291  001107  4E                 	db	78
   292  001108  6F                 	db	111
   293  001109  38                 	db	56
   294  00110A  00                 	db	0
   295  00110B  00                 	db	0
   296  00110C  00                 	db	0
   297  00110D  00                 	db	0
   298  00110E  00                 	db	0
   299  00110F  00                 	db	0
   300  001110  00                 	db	0
   301  001111  00                 	db	0
   302  001112  00                 	db	0
   303  001113  00                 	db	0
   304  001114  00                 	db	0
   305  001115  00                 	db	0
   306  001116  00                 	db	0
   307  001117  00                 	db	0
   308  001118  38                 	db	56
   309  001119  00                 	db	0
   310  00111A  00                 	db	0
   311  00111B  00                 	db	0
   312  00111C  00                 	db	0
   313  00111D  4D                 	db	77
   314  00111E  6D                 	db	109
   315  00111F  65                 	db	101
   316  001120  20                 	db	32
   317  001121  4E                 	db	78
   318  001122  6F                 	db	111
   319  001123  39                 	db	57
   320  001124  00                 	db	0
   321  001125  00                 	db	0
   322  001126  00                 	db	0
   323  001127  00                 	db	0
   324  001128  00                 	db	0
   325  001129  00                 	db	0
   326  00112A  00                 	db	0
   327  00112B  00                 	db	0
   328  00112C  00                 	db	0
   329  00112D  00                 	db	0
   330  00112E  00                 	db	0
   331  00112F  00                 	db	0
   332  001130  00                 	db	0
   333  001131  39                 	db	57
   334  001132  00                 	db	0
   335  001133  00                 	db	0
   336  001134  00                 	db	0
   337  001135  00                 	db	0
   338  001136  4D                 	db	77
   339  001137  72                 	db	114
   340  001138  20                 	db	32
   341  001139  4E                 	db	78
   342  00113A  6F                 	db	111
   343  00113B  31                 	db	49
   344  00113C  30                 	db	48
   345  00113D  00                 	db	0
   346  00113E  00                 	db	0
   347  00113F  00                 	db	0
   348  001140  00                 	db	0
   349  001141  00                 	db	0
   350  001142  00                 	db	0
   351  001143  00                 	db	0
   352  001144  00                 	db	0
   353  001145  00                 	db	0
   354  001146  00                 	db	0
   355  001147  00                 	db	0
   356  001148  00                 	db	0
   357  001149  00                 	db	0
   358  00114A  31                 	db	49
   359  00114B  30                 	db	48
   360  00114C  00                 	db	0
   361  00114D  00                 	db	0
   362  00114E  00                 	db	0
   363  00114F  4D                 	db	77
   364  001150  6D                 	db	109
   365  001151  65                 	db	101
   366  001152  20                 	db	32
   367  001153  4E                 	db	78
   368  001154  6F                 	db	111
   369  001155  31                 	db	49
   370  001156  31                 	db	49
   371  001157  00                 	db	0
   372  001158  00                 	db	0
   373  001159  00                 	db	0
   374  00115A  00                 	db	0
   375  00115B  00                 	db	0
   376  00115C  00                 	db	0
   377  00115D  00                 	db	0
   378  00115E  00                 	db	0
   379  00115F  00                 	db	0
   380  001160  00                 	db	0
   381  001161  00                 	db	0
   382  001162  00                 	db	0
   383  001163  31                 	db	49
   384  001164  31                 	db	49
   385  001165  00                 	db	0
   386  001166  00                 	db	0
   387  001167  00                 	db	0
   388                           
   389                           	psect	idataBANK0
   390  00198A                     __pidataBANK0:
   391                           	callstack 0
   392                           
   393                           ;initializer for _matCGRAM
   394  00198A  08                 	db	8
   395  00198B  04                 	db	4
   396  00198C  04                 	db	4
   397  00198D  0A                 	db	10
   398  00198E  11                 	db	17
   399  00198F  1F                 	db	31
   400  001990  11                 	db	17
   401  001991  00                 	db	0
   402  001992  02                 	db	2
   403  001993  04                 	db	4
   404  001994  0E                 	db	14
   405  001995  11                 	db	17
   406  001996  1F                 	db	31
   407  001997  10                 	db	16
   408  001998  0E                 	db	14
   409  001999  00                 	db	0
   410  00199A  02                 	db	2
   411  00199B  04                 	db	4
   412  00199C  1F                 	db	31
   413  00199D  10                 	db	16
   414  00199E  1E                 	db	30
   415  00199F  10                 	db	16
   416  0019A0  1F                 	db	31
   417  0019A1  00                 	db	0
   418  0019A2  08                 	db	8
   419  0019A3  04                 	db	4
   420  0019A4  0E                 	db	14
   421  0019A5  11                 	db	17
   422  0019A6  1F                 	db	31
   423  0019A7  10                 	db	16
   424  0019A8  0E                 	db	14
   425  0019A9  00                 	db	0
   426  0019AA  08                 	db	8
   427  0019AB  04                 	db	4
   428  0019AC  1F                 	db	31
   429  0019AD  10                 	db	16
   430  0019AE  1E                 	db	30
   431  0019AF  10                 	db	16
   432  0019B0  1F                 	db	31
   433  0019B1  00                 	db	0
   434  0019B2  04                 	db	4
   435  0019B3  0A                 	db	10
   436  0019B4  0E                 	db	14
   437  0019B5  11                 	db	17
   438  0019B6  1F                 	db	31
   439  0019B7  10                 	db	16
   440  0019B8  0E                 	db	14
   441  0019B9  00                 	db	0
   442  0019BA  08                 	db	8
   443  0019BB  04                 	db	4
   444  0019BC  0E                 	db	14
   445  0019BD  01                 	db	1
   446  0019BE  0F                 	db	15
   447  0019BF  11                 	db	17
   448  0019C0  0F                 	db	15
   449  0019C1  00                 	db	0
   450  0019C2  04                 	db	4
   451  0019C3  0A                 	db	10
   452  0019C4  0E                 	db	14
   453  0019C5  01                 	db	1
   454  0019C6  0F                 	db	15
   455  0019C7  11                 	db	17
   456  0019C8  0F                 	db	15
   457  0019C9  00                 	db	0
   458  0000                     _RCREG	set	4014
   459  0000                     _TXREG	set	4013
   460  0000                     _TRISC	set	3988
   461  0000                     _TRISD	set	3989
   462  0000                     _TRISB	set	3987
   463  0000                     _TRISCbits	set	3988
   464  0000                     _PORTAbits	set	3968
   465  0000                     _PORTA	set	3968
   466  0000                     _RCSTAbits	set	4011
   467  0000                     _TXSTAbits	set	4012
   468  0000                     _SPBRG	set	4015
   469  0000                     _ADCON1	set	4033
   470  0000                     _RCIF	set	31989
   471  0000                     _PORTDbits	set	3971
   472  0000                     _PORTCbits	set	3970
   473  0000                     _TRISA	set	3986
   474  0000                     _PORTBbits	set	3969
   475                           
   476                           	psect	smallconst
   477  000600                     __psmallconst:
   478                           	callstack 0
   479  000600  00                 	db	0
   480  000601                     STR_3:
   481                           
   482                           ; BSR set to: 0
   483  000601  45                 	db	69	;'E'
   484  000602  6E                 	db	110	;'n'
   485  000603  74                 	db	116	;'t'
   486  000604  72                 	db	114	;'r'
   487  000605  65                 	db	101	;'e'
   488  000606  7A                 	db	122	;'z'
   489  000607  20                 	db	32
   490  000608  76                 	db	118	;'v'
   491  000609  6F                 	db	111	;'o'
   492  00060A  74                 	db	116	;'t'
   493  00060B  72                 	db	114	;'r'
   494  00060C  65                 	db	101	;'e'
   495  00060D  20                 	db	32
   496  00060E  6E                 	db	110	;'n'
   497  00060F  6F                 	db	111	;'o'
   498  000610  20                 	db	32
   499  000611  64                 	db	100	;'d'
   500  000612  27                 	db	39
   501  000613  65                 	db	101	;'e'
   502  000614  74                 	db	116	;'t'
   503  000615  75                 	db	117	;'u'
   504  000616  64                 	db	100	;'d'
   505  000617  69                 	db	105	;'i'
   506  000618  61                 	db	97	;'a'
   507  000619  6E                 	db	110	;'n'
   508  00061A  74                 	db	116	;'t'
   509  00061B  00                 	db	0
   510  00061C                     STR_5:
   511                           
   512                           ; BSR set to: 0
   513  00061C  45                 	db	69	;'E'
   514  00061D  6E                 	db	110	;'n'
   515  00061E  74                 	db	116	;'t'
   516  00061F  72                 	db	114	;'r'
   517  000620  65                 	db	101	;'e'
   518  000621  7A                 	db	122	;'z'
   519  000622  20                 	db	32
   520  000623  76                 	db	118	;'v'
   521  000624  6F                 	db	111	;'o'
   522  000625  74                 	db	116	;'t'
   523  000626  72                 	db	114	;'r'
   524  000627  65                 	db	101	;'e'
   525  000628  20                 	db	32
   526  000629  4E                 	db	78	;'N'
   527  00062A  49                 	db	73	;'I'
   528  00062B  50                 	db	80	;'P'
   529  00062C  00                 	db	0
   530  00062D                     STR_1:
   531                           
   532                           ; BSR set to: 0
   533  00062D  61                 	db	97	;'a'
   534  00062E  63                 	db	99	;'c'
   535  00062F  63                 	db	99	;'c'
   536  000630  65                 	db	101	;'e'
   537  000631  73                 	db	115	;'s'
   538  000632  20                 	db	32
   539  000633  6C                 	db	108	;'l'
   540  000634  6F                 	db	111	;'o'
   541  000635  63                 	db	99	;'c'
   542  000636  61                 	db	97	;'a'
   543  000637  6C                 	db	108	;'l'
   544  000638  20                 	db	32
   545  000639  32                 	db	50	;'2'
   546  00063A  38                 	db	56	;'8'
   547  00063B  33                 	db	51	;'3'
   548  00063C  00                 	db	0
   549  00063D                     STR_9:
   550                           
   551                           ; BSR set to: 0
   552  00063D  61                 	db	97	;'a'
   553  00063E  63                 	db	99	;'c'
   554  00063F  63                 	db	99	;'c'
   555  000640  65                 	db	101	;'e'
   556  000641  73                 	db	115	;'s'
   557  000642  20                 	db	32
   558  000643  72                 	db	114	;'r'
   559  000644  65                 	db	101	;'e'
   560  000645  66                 	db	102	;'f'
   561  000646  75                 	db	117	;'u'
   562  000647  73                 	db	115	;'s'
   563  000648  65                 	db	101	;'e'
   564  000649  00                 	db	0
   565  00064A                     STR_7:
   566                           
   567                           ; BSR set to: 0
   568  00064A  42                 	db	66	;'B'
   569  00064B  6F                 	db	111	;'o'
   570  00064C  6E                 	db	110	;'n'
   571  00064D  6A                 	db	106	;'j'
   572  00064E  6F                 	db	111	;'o'
   573  00064F  75                 	db	117	;'u'
   574  000650  72                 	db	114	;'r'
   575  000651  20                 	db	32
   576  000652  00                 	db	0
   577  000653                     STR_2:
   578                           
   579                           ; BSR set to: 0
   580  000653  3C                 	db	60	;'<'
   581  000654  45                 	db	69	;'E'
   582  000655  6E                 	db	110	;'n'
   583  000656  74                 	db	116	;'t'
   584  000657  65                 	db	101	;'e'
   585  000658  72                 	db	114	;'r'
   586  000659  3E                 	db	62	;'>'
   587  00065A  00                 	db	0
   588  00065B  00                 	db	0	; dummy byte at the end
   589  0000                     
   590                           ; #config settings
   591                           
   592                           	psect	cinit
   593  0018F0                     __pcinit:
   594                           	callstack 0
   595  0018F0                     start_initialization:
   596                           	callstack 0
   597  0018F0                     __initialization:
   598                           	callstack 0
   599                           
   600                           ; Initialize objects allocated to BIGRAM (300 bytes)
   601                           ; load TBLPTR registers with __pidataBIGRAM
   602  0018F0  0E3C               	movlw	low __pidataBIGRAM
   603  0018F2  6EF6               	movwf	tblptrl,c
   604  0018F4  0E10               	movlw	high __pidataBIGRAM
   605  0018F6  6EF7               	movwf	tblptrh,c
   606  0018F8  0E00               	movlw	low (__pidataBIGRAM shr (0+16))
   607  0018FA  6EF8               	movwf	tblptru,c
   608  0018FC  EE00  F0C6         	lfsr	0,__pdataBIGRAM
   609  001900  EE11 F02C          	lfsr	1,300
   610  001904                     copy_data0:
   611  001904  0009               	tblrd		*+
   612  001906  CFF5 FFEE          	movff	tablat,postinc0
   613  00190A  50E5               	movf	postdec1,w,c
   614  00190C  50E1               	movf	fsr1l,w,c
   615  00190E  E1FA               	bnz	copy_data0
   616  001910  50E2               	movf	fsr1h,w,c
   617  001912  E1F8               	bnz	copy_data0
   618                           
   619                           ; Initialize objects allocated to BANK0 (64 bytes)
   620                           ; load TBLPTR registers with __pidataBANK0
   621  001914  0E8A               	movlw	low __pidataBANK0
   622  001916  6EF6               	movwf	tblptrl,c
   623  001918  0E19               	movlw	high __pidataBANK0
   624  00191A  6EF7               	movwf	tblptrh,c
   625  00191C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   626  00191E  6EF8               	movwf	tblptru,c
   627  001920  EE00  F060         	lfsr	0,__pdataBANK0
   628  001924  EE10 F040          	lfsr	1,64
   629  001928                     copy_data1:
   630  001928  0009               	tblrd		*+
   631  00192A  CFF5 FFEE          	movff	tablat,postinc0
   632  00192E  50E5               	movf	postdec1,w,c
   633  001930  50E1               	movf	fsr1l,w,c
   634  001932  E1FA               	bnz	copy_data1
   635                           
   636                           ; Clear objects allocated to BANK0 (7 bytes)
   637  001934  EE00  F0BF         	lfsr	0,__pbssBANK0
   638  001938  0E07               	movlw	7
   639  00193A                     clear_0:
   640  00193A  6AEE               	clrf	postinc0,c
   641  00193C  06E8               	decf	wreg,f,c
   642  00193E  E1FD               	bnz	clear_0
   643  001940                     end_of_initialization:
   644                           	callstack 0
   645  001940                     __end_of__initialization:
   646                           	callstack 0
   647  001940  0100               	movlb	0
   648  001942  EF73  F009         	goto	_main	;jump to C main() function
   649                           
   650                           	psect	bssBANK0
   651  0000BF                     __pbssBANK0:
   652                           	callstack 0
   653  0000BF                     gereTouche@indexNIP:
   654                           	callstack 0
   655  0000BF                     	ds	2
   656  0000C1                     gereTouche@nip:
   657                           	callstack 0
   658  0000C1                     	ds	5
   659                           
   660                           	psect	dataBANK0
   661  000060                     __pdataBANK0:
   662                           	callstack 0
   663  000060                     _matCGRAM:
   664                           	callstack 0
   665  000060                     	ds	64
   666                           
   667                           	psect	dataBIGRAM
   668  0000C6                     __pdataBIGRAM:
   669                           	callstack 0
   670  0000C6                     _listeUsager:
   671                           	callstack 0
   672  0000C6                     	ds	300
   673                           
   674                           	psect	cstackBANK0
   675  0000A0                     __pcstackBANK0:
   676                           	callstack 0
   677  0000A0                     ??_flashDEL:
   678  0000A0                     ??_lcd_ecrireDonnees:
   679  0000A0                     ??_lcd_busy:
   680  0000A0                     ?_memset:
   681                           	callstack 0
   682  0000A0                     ?_isspace:
   683                           	callstack 0
   684  0000A0                     ?_isdigit:
   685                           	callstack 0
   686  0000A0                     ?___wmul:
   687                           	callstack 0
   688  0000A0                     getch@c:
   689                           	callstack 0
   690  0000A0                     ___wmul@multiplier:
   691                           	callstack 0
   692  0000A0                     isdigit@c:
   693                           	callstack 0
   694  0000A0                     isspace@c:
   695                           	callstack 0
   696  0000A0                     memset@dest:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x0
   700  0000A0                     	ds	1
   701  0000A1                     lcd_ecrireDonnees@donnee:
   702                           	callstack 0
   703                           
   704                           ; 1 bytes @ 0x1
   705  0000A1                     	ds	1
   706  0000A2                     ??_isspace:
   707  0000A2                     ??_isdigit:
   708  0000A2                     ??_lcd_resetSequence:
   709  0000A2                     lcd_busy@adresse:
   710                           	callstack 0
   711  0000A2                     flashDEL@i:
   712                           	callstack 0
   713  0000A2                     ___wmul@multiplicand:
   714                           	callstack 0
   715  0000A2                     memset@c:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x2
   719  0000A2                     	ds	2
   720  0000A4                     ??_lcd_wrCom:
   721  0000A4                     lcd_wrData@caractere:
   722                           	callstack 0
   723  0000A4                     ___wmul@product:
   724                           	callstack 0
   725  0000A4                     memset@n:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x4
   729  0000A4                     	ds	1
   730  0000A5                     lcd_wrCom@commande:
   731                           	callstack 0
   732                           
   733                           ; 1 bytes @ 0x5
   734  0000A5                     	ds	1
   735  0000A6                     ??_lcd_initCGRam:
   736  0000A6                     ??_memset:
   737  0000A6                     ??_lcd_ecritChar:
   738  0000A6                     ?_strcmp:
   739                           	callstack 0
   740  0000A6                     lcd_gotoXY@y:
   741                           	callstack 0
   742  0000A6                     _isspace$1206:
   743                           	callstack 0
   744  0000A6                     strcmp@l:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x6
   748  0000A6                     	ds	1
   749  0000A7                     ??_lcd_gotoXY:
   750  0000A7                     ?_atoi:
   751                           	callstack 0
   752  0000A7                     atoi@s:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x7
   756  0000A7                     	ds	1
   757  0000A8                     lcd_ecritChar@car:
   758                           	callstack 0
   759  0000A8                     lcd_initCGRam@i:
   760                           	callstack 0
   761  0000A8                     memset@k:
   762                           	callstack 0
   763  0000A8                     strcmp@r:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0x8
   767  0000A8                     	ds	1
   768  0000A9                     ??_atoi:
   769  0000A9                     lcd_gotoXY@x:
   770                           	callstack 0
   771  0000A9                     lcd_ecritChar@posRam:
   772                           	callstack 0
   773  0000A9                     lcd_initCGRam@j:
   774                           	callstack 0
   775                           
   776                           ; 1 bytes @ 0x9
   777  0000A9                     	ds	1
   778  0000AA                     ??_strcmp:
   779  0000AA                     memset@s:
   780                           	callstack 0
   781  0000AA                     lcd_putMessage@chaine:
   782                           	callstack 0
   783                           
   784                           ; 3 bytes @ 0xA
   785  0000AA                     	ds	2
   786  0000AC                     verifNip@usager:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0xC
   790  0000AC                     	ds	1
   791  0000AD                     ??_lcd_putMessage:
   792  0000AD                     atoi@neg:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0xD
   796  0000AD                     	ds	1
   797  0000AE                     verifNip@no:
   798                           	callstack 0
   799                           
   800                           ; 2 bytes @ 0xE
   801  0000AE                     	ds	1
   802  0000AF                     atoi@n:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0xF
   806  0000AF                     	ds	1
   807  0000B0                     verifNip@index:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x10
   811  0000B0                     	ds	2
   812  0000B2                     lcd_putMessage@j:
   813                           	callstack 0
   814  0000B2                     gereTouche@etat:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0x12
   818  0000B2                     	ds	1
   819  0000B3                     affiche@etat:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x13
   823  0000B3                     	ds	1
   824  0000B4                     gereTouche@usager:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x14
   828  0000B4                     	ds	1
   829  0000B5                     affiche@usager:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x15
   833  0000B5                     	ds	1
   834  0000B6                     ??_gereTouche:
   835                           
   836                           ; 1 bytes @ 0x16
   837  0000B6                     	ds	1
   838  0000B7                     ??_affiche:
   839                           
   840                           ; 1 bytes @ 0x17
   841  0000B7                     	ds	1
   842  0000B8                     gereTouche@touche:
   843                           	callstack 0
   844                           
   845                           ; 1 bytes @ 0x18
   846  0000B8                     	ds	1
   847  0000B9                     main@etatAffiche:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x19
   851  0000B9                     	ds	2
   852  0000BB                     main@noUsagerCourant:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x1B
   856  0000BB                     	ds	2
   857  0000BD                     main@etatCourant:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x1D
   861  0000BD                     	ds	2
   862                           
   863 ;;
   864 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   865 ;;
   866 ;; *************** function _main *****************
   867 ;; Defined at:
   868 ;;		line 77 in file "main.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;  etatCourant     2   29[BANK0 ] unsigned int 
   873 ;;  noUsagerCour    2   27[BANK0 ] int 
   874 ;;  etatAffiche     2   25[BANK0 ] int 
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   884 ;;      Params:         0       0       0       0       0       0       0
   885 ;;      Locals:         0       6       0       0       0       0       0
   886 ;;      Temps:          0       0       0       0       0       0       0
   887 ;;      Totals:         0       6       0       0       0       0       0
   888 ;;Total ram usage:        6 bytes
   889 ;; Hardware stack levels required when called: 6
   890 ;; This function calls:
   891 ;;		_affiche
   892 ;;		_flashDEL
   893 ;;		_gereTouche
   894 ;;		_initRegistres
   895 ;;		_init_serie
   896 ;;		_kbhit
   897 ;;		_lcd_curseurHome
   898 ;;		_lcd_init
   899 ;; This function is called by:
   900 ;;		Startup code after reset
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           	psect	text0
   905  0012E6                     __ptext0:
   906                           	callstack 0
   907  0012E6                     _main:
   908                           	callstack 25
   909  0012E6  FFFF               	dw	65535	; assembler added errata NOP
   910                           
   911                           ;main.c: 79:  unsigned int etatCourant = enumEtat_Depart;
   912  0012E8  0E00               	movlw	0
   913  0012EA  0100               	movlb	0	; force () banked
   914  0012EC  6FBE               	movwf	(main@etatCourant+1)& (0+255),b
   915  0012EE  0E00               	movlw	0
   916  0012F0  6FBD               	movwf	main@etatCourant& (0+255),b
   917                           
   918                           ;main.c: 80:  int etatAffiche = enumEtat_Max;
   919  0012F2  0E00               	movlw	0
   920  0012F4  0100               	movlb	0	; force () banked
   921  0012F6  6FBA               	movwf	(main@etatAffiche+1)& (0+255),b
   922  0012F8  0E05               	movlw	5
   923  0012FA  6FB9               	movwf	main@etatAffiche& (0+255),b
   924  0012FC                     
   925                           ; BSR set to: 0
   926                           ;main.c: 82:  int noUsagerCourant = -1;
   927  0012FC  0100               	movlb	0	; force () banked
   928  0012FE  69BB               	setf	main@noUsagerCourant& (0+255),b
   929  001300  69BC               	setf	(main@noUsagerCourant+1)& (0+255),b
   930  001302                     
   931                           ; BSR set to: 0
   932                           ;main.c: 84:  initRegistres();
   933  001302  EC42  F00D         	call	_initRegistres	;wreg free
   934  001306                     
   935                           ;main.c: 85:  init_serie();
   936  001306  EC37  F00D         	call	_init_serie	;wreg free
   937  00130A                     
   938                           ;main.c: 86:  lcd_init();
   939  00130A  ECE5  F00C         	call	_lcd_init	;wreg free
   940  00130E                     
   941                           ;main.c: 87:  lcd_curseurHome();
   942  00130E  EC56  F00D         	call	_lcd_curseurHome	;wreg free
   943  001312                     
   944                           ;main.c: 88:  flashDEL();
   945  001312  ECC9  F009         	call	_flashDEL	;wreg free
   946  001316                     l1932:
   947  001316  FFFF               	dw	65535	; assembler added errata NOP
   948                           
   949                           ;main.c: 91:  {;main.c: 92:   if(kbhit())
   950  001318  EC14  F00D         	call	_kbhit	;wreg free
   951  00131C  0100               	movlb	0	; force () banked
   952  00131E  A0D8               	btfss	status,0,c
   953  001320  EF94  F009         	goto	u901
   954  001324  EF97  F009         	goto	u900
   955  001328                     u901:
   956  001328  FFFF               	dw	65535	; assembler added errata NOP
   957  00132A  EFA4  F009         	goto	l1936
   958  00132E                     u900:
   959  00132E  FFFF               	dw	65535	; assembler added errata NOP
   960  001330                     
   961                           ; BSR set to: 0
   962                           ;main.c: 93:    gereTouche(&etatCourant, &noUsagerCourant);
   963  001330  0EBD               	movlw	low main@etatCourant
   964  001332  0100               	movlb	0	; force () banked
   965  001334  6FB2               	movwf	gereTouche@etat& (0+255),b
   966  001336  0E00               	movlw	high main@etatCourant
   967  001338  6FB3               	movwf	(gereTouche@etat+1)& (0+255),b
   968  00133A  0EBB               	movlw	low main@noUsagerCourant
   969  00133C  0100               	movlb	0	; force () banked
   970  00133E  6FB4               	movwf	gereTouche@usager& (0+255),b
   971  001340  0E00               	movlw	high main@noUsagerCourant
   972  001342  6FB5               	movwf	(gereTouche@usager+1)& (0+255),b
   973  001344  EC2E  F003         	call	_gereTouche	;wreg free
   974  001348                     l1936:
   975  001348  FFFF               	dw	65535	; assembler added errata NOP
   976                           
   977                           ;main.c: 95:   if(etatAffiche != etatCourant)
   978  00134A  0100               	movlb	0	; force () banked
   979  00134C  51BD               	movf	main@etatCourant& (0+255),w,b
   980  00134E  0100               	movlb	0	; force () banked
   981  001350  19B9               	xorwf	main@etatAffiche& (0+255),w,b
   982  001352  E10C               	bnz	u910
   983  001354  0100               	movlb	0	; force () banked
   984  001356  51BE               	movf	(main@etatCourant+1)& (0+255),w,b
   985  001358  0100               	movlb	0	; force () banked
   986  00135A  19BA               	xorwf	(main@etatAffiche+1)& (0+255),w,b
   987  00135C  B4D8               	btfsc	status,2,c
   988  00135E  EFB3  F009         	goto	u911
   989  001362  EFB6  F009         	goto	u910
   990  001366                     u911:
   991  001366  FFFF               	dw	65535	; assembler added errata NOP
   992  001368  EF8B  F009         	goto	l1932
   993  00136C                     u910:
   994  00136C  FFFF               	dw	65535	; assembler added errata NOP
   995  00136E                     
   996                           ; BSR set to: 0
   997                           ;main.c: 96:   {;main.c: 97:    affiche(etatCourant, noUsagerCourant);
   998  00136E  C0BD  F0B3         	movff	main@etatCourant,affiche@etat
   999  001372  C0BE  F0B4         	movff	main@etatCourant+1,affiche@etat+1
  1000  001376  C0BB  F0B5         	movff	main@noUsagerCourant,affiche@usager
  1001  00137A  C0BC  F0B6         	movff	main@noUsagerCourant+1,affiche@usager+1
  1002  00137E  EC64  F005         	call	_affiche	;wreg free
  1003  001382                     
  1004                           ;main.c: 98:    etatAffiche = etatCourant;
  1005  001382  C0BD  F0B9         	movff	main@etatCourant,main@etatAffiche
  1006  001386  C0BE  F0BA         	movff	main@etatCourant+1,main@etatAffiche+1
  1007  00138A  EF8B  F009         	goto	l1932
  1008  00138E  EF01  F000         	goto	start
  1009  001392                     __end_of_main:
  1010                           	callstack 0
  1011                           
  1012 ;; *************** function _lcd_init *****************
  1013 ;; Defined at:
  1014 ;;		line 257 in file "Lcd4Lignes.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;		None
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;		None
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  1    wreg      void 
  1021 ;; Registers used:
  1022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1028 ;;      Params:         0       0       0       0       0       0       0
  1029 ;;      Locals:         0       0       0       0       0       0       0
  1030 ;;      Temps:          0       0       0       0       0       0       0
  1031 ;;      Totals:         0       0       0       0       0       0       0
  1032 ;;Total ram usage:        0 bytes
  1033 ;; Hardware stack levels used: 1
  1034 ;; Hardware stack levels required when called: 5
  1035 ;; This function calls:
  1036 ;;		_lcd_initCGRam
  1037 ;;		_lcd_resetSequence
  1038 ;;		_lcd_wrCom
  1039 ;; This function is called by:
  1040 ;;		_main
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text1
  1045  0019CA                     __ptext1:
  1046                           	callstack 0
  1047  0019CA                     _lcd_init:
  1048                           	callstack 0
  1049  0019CA  FFFF               	dw	65535	; assembler added errata NOP
  1050  0019CC                     
  1051                           ;Lcd4Lignes.c: 259:     TRISB = TRISB & 0xEF;
  1052  0019CC  5093               	movf	147,w,c	;volatile
  1053  0019CE  0BEF               	andlw	239
  1054  0019D0  6E93               	movwf	147,c	;volatile
  1055  0019D2                     
  1056                           ;Lcd4Lignes.c: 260:     lcd_resetSequence();
  1057  0019D2  ECE4  F00B         	call	_lcd_resetSequence	;wreg free
  1058  0019D6                     
  1059                           ;Lcd4Lignes.c: 261:     lcd_wrCom(0x28);
  1060  0019D6  0E28               	movlw	40
  1061  0019D8  EC1A  F00A         	call	_lcd_wrCom
  1062  0019DC                     
  1063                           ;Lcd4Lignes.c: 262:     lcd_wrCom(0x0F);
  1064  0019DC  0E0F               	movlw	15
  1065  0019DE  EC1A  F00A         	call	_lcd_wrCom
  1066  0019E2                     
  1067                           ;Lcd4Lignes.c: 263:     lcd_wrCom(0x01);
  1068  0019E2  0E01               	movlw	1
  1069  0019E4  EC1A  F00A         	call	_lcd_wrCom
  1070  0019E8                     
  1071                           ;Lcd4Lignes.c: 264:     lcd_wrCom(0x06);
  1072  0019E8  0E06               	movlw	6
  1073  0019EA  EC1A  F00A         	call	_lcd_wrCom
  1074  0019EE                     
  1075                           ;Lcd4Lignes.c: 265:     lcd_wrCom(0x80);
  1076  0019EE  0E80               	movlw	128
  1077  0019F0  EC1A  F00A         	call	_lcd_wrCom
  1078  0019F4                     
  1079                           ;Lcd4Lignes.c: 266:     lcd_initCGRam();
  1080  0019F4  EC16  F009         	call	_lcd_initCGRam	;wreg free
  1081  0019F8  0012               	return		;funcret
  1082  0019FA  FFFF               	dw	65535	; errata NOP
  1083  0019FC                     __end_of_lcd_init:
  1084                           	callstack 0
  1085                           
  1086 ;; *************** function _lcd_resetSequence *****************
  1087 ;; Defined at:
  1088 ;;		line 220 in file "Lcd4Lignes.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;		None
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;		None
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  1    wreg      void 
  1095 ;; Registers used:
  1096 ;;		wreg, status,2, status,0, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1102 ;;      Params:         0       0       0       0       0       0       0
  1103 ;;      Locals:         0       0       0       0       0       0       0
  1104 ;;      Temps:          0       1       0       0       0       0       0
  1105 ;;      Totals:         0       1       0       0       0       0       0
  1106 ;;Total ram usage:        1 bytes
  1107 ;; Hardware stack levels used: 1
  1108 ;; Hardware stack levels required when called: 1
  1109 ;; This function calls:
  1110 ;;		_lcd_ecrireDonnees
  1111 ;;		_lcd_strobeEnableBit
  1112 ;; This function is called by:
  1113 ;;		_lcd_init
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           	psect	text2
  1118  0017C8                     __ptext2:
  1119                           	callstack 0
  1120  0017C8                     _lcd_resetSequence:
  1121                           	callstack 0
  1122  0017C8  FFFF               	dw	65535	; assembler added errata NOP
  1123  0017CA                     
  1124                           ;Lcd4Lignes.c: 225:     TRISA = 0b00000000;
  1125  0017CA  0E00               	movlw	0
  1126  0017CC  6E92               	movwf	146,c	;volatile
  1127  0017CE                     
  1128                           ;Lcd4Lignes.c: 227:     _delay((unsigned long)((40)*(16000000/4000.0)));
  1129  0017CE  0E9C               	movlw	156
  1130  0017D0  0100               	movlb	0	; force () banked
  1131  0017D2  6FA2               	movwf	??_lcd_resetSequence& (0+255),b
  1132  0017D4  0EF1               	movlw	241
  1133  0017D6                     u927:
  1134  0017D6  FFFF               	dw	65535	; errata NOP
  1135  0017D8  2EE8               	decfsz	wreg,f,c
  1136  0017DA  D7FD               	bra	u927
  1137  0017DC  2FA2               	decfsz	??_lcd_resetSequence& (0+255),f,b
  1138  0017DE  D7FB               	bra	u927
  1139  0017E0  F000               	nop	
  1140  0017E2                     
  1141                           ;Lcd4Lignes.c: 228:     PORTBbits.RB4 = 0;
  1142  0017E2  9881               	bcf	129,4,c	;volatile
  1143  0017E4                     
  1144                           ;Lcd4Lignes.c: 229:     PORTAbits.RA5 = 0;
  1145  0017E4  9A80               	bcf	128,5,c	;volatile
  1146  0017E6                     
  1147                           ;Lcd4Lignes.c: 231:     lcd_ecrireDonnees(0x03);
  1148  0017E6  0E03               	movlw	3
  1149  0017E8  EC6D  F00B         	call	_lcd_ecrireDonnees
  1150  0017EC                     
  1151                           ;Lcd4Lignes.c: 232:     lcd_strobeEnableBit();
  1152  0017EC  EC5C  F00D         	call	_lcd_strobeEnableBit	;wreg free
  1153  0017F0                     
  1154                           ;Lcd4Lignes.c: 233:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  1155  0017F0  0E28               	movlw	40
  1156  0017F2                     u937:
  1157  0017F2  FFFF               	dw	65535	; errata NOP
  1158  0017F4  2EE8               	decfsz	wreg,f,c
  1159  0017F6  D7FD               	bra	u937
  1160  0017F8                     
  1161                           ;Lcd4Lignes.c: 236:     lcd_ecrireDonnees(0x03);
  1162  0017F8  0E03               	movlw	3
  1163  0017FA  EC6D  F00B         	call	_lcd_ecrireDonnees
  1164  0017FE                     
  1165                           ;Lcd4Lignes.c: 237:     lcd_strobeEnableBit();
  1166  0017FE  EC5C  F00D         	call	_lcd_strobeEnableBit	;wreg free
  1167  001802                     
  1168                           ;Lcd4Lignes.c: 238:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  1169  001802  0E28               	movlw	40
  1170  001804                     u947:
  1171  001804  FFFF               	dw	65535	; errata NOP
  1172  001806  2EE8               	decfsz	wreg,f,c
  1173  001808  D7FD               	bra	u947
  1174  00180A                     
  1175                           ;Lcd4Lignes.c: 240:     lcd_ecrireDonnees(0x03);
  1176  00180A  0E03               	movlw	3
  1177  00180C  EC6D  F00B         	call	_lcd_ecrireDonnees
  1178  001810                     
  1179                           ;Lcd4Lignes.c: 241:     lcd_strobeEnableBit();
  1180  001810  EC5C  F00D         	call	_lcd_strobeEnableBit	;wreg free
  1181  001814                     
  1182                           ;Lcd4Lignes.c: 242:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  1183  001814  0E28               	movlw	40
  1184  001816                     u957:
  1185  001816  FFFF               	dw	65535	; errata NOP
  1186  001818  2EE8               	decfsz	wreg,f,c
  1187  00181A  D7FD               	bra	u957
  1188  00181C                     
  1189                           ;Lcd4Lignes.c: 244:     lcd_ecrireDonnees(0x02);
  1190  00181C  0E02               	movlw	2
  1191  00181E  EC6D  F00B         	call	_lcd_ecrireDonnees
  1192  001822                     
  1193                           ;Lcd4Lignes.c: 245:     lcd_strobeEnableBit();
  1194  001822  EC5C  F00D         	call	_lcd_strobeEnableBit	;wreg free
  1195  001826                     
  1196                           ;Lcd4Lignes.c: 246:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  1197  001826  0E28               	movlw	40
  1198  001828                     u967:
  1199  001828  FFFF               	dw	65535	; errata NOP
  1200  00182A  2EE8               	decfsz	wreg,f,c
  1201  00182C  D7FD               	bra	u967
  1202  00182E                     
  1203                           ;Lcd4Lignes.c: 248:     TRISA = 0b00001111;
  1204  00182E  0E0F               	movlw	15
  1205  001830  6E92               	movwf	146,c	;volatile
  1206  001832  0012               	return		;funcret
  1207  001834  FFFF               	dw	65535	; errata NOP
  1208  001836                     __end_of_lcd_resetSequence:
  1209                           	callstack 0
  1210                           
  1211 ;; *************** function _lcd_initCGRam *****************
  1212 ;; Defined at:
  1213 ;;		line 416 in file "Lcd4Lignes.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;		None
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;  j               1    9[BANK0 ] unsigned char 
  1218 ;;  i               1    8[BANK0 ] unsigned char 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1228 ;;      Params:         0       0       0       0       0       0       0
  1229 ;;      Locals:         0       2       0       0       0       0       0
  1230 ;;      Temps:          0       2       0       0       0       0       0
  1231 ;;      Totals:         0       4       0       0       0       0       0
  1232 ;;Total ram usage:        4 bytes
  1233 ;; Hardware stack levels used: 1
  1234 ;; Hardware stack levels required when called: 4
  1235 ;; This function calls:
  1236 ;;		_lcd_curseurHome
  1237 ;;		_lcd_wrCom
  1238 ;;		_lcd_wrData
  1239 ;; This function is called by:
  1240 ;;		_lcd_init
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           	psect	text3
  1245  00122C                     __ptext3:
  1246                           	callstack 0
  1247  00122C                     _lcd_initCGRam:
  1248                           	callstack 0
  1249  00122C  FFFF               	dw	65535	; assembler added errata NOP
  1250  00122E                     
  1251                           ;Lcd4Lignes.c: 418:     char i,j;;Lcd4Lignes.c: 420:     lcd_wrCom(0x40);
  1252  00122E  0E40               	movlw	64
  1253  001230  EC1A  F00A         	call	_lcd_wrCom
  1254  001234                     
  1255                           ;Lcd4Lignes.c: 421:     for(i=0;i<8;i++)
  1256  001234  0E00               	movlw	0
  1257  001236  0100               	movlb	0	; force () banked
  1258  001238  6FA8               	movwf	lcd_initCGRam@i& (0+255),b
  1259  00123A                     
  1260                           ; BSR set to: 0
  1261  00123A  0E07               	movlw	7
  1262  00123C  0100               	movlb	0	; force () banked
  1263  00123E  65A8               	cpfsgt	lcd_initCGRam@i& (0+255),b
  1264  001240  EF24  F009         	goto	u101
  1265  001244  EF27  F009         	goto	u100
  1266  001248                     u101:
  1267  001248  FFFF               	dw	65535	; assembler added errata NOP
  1268  00124A  EF2A  F009         	goto	l1180
  1269  00124E                     u100:
  1270  00124E  FFFF               	dw	65535	; assembler added errata NOP
  1271  001250  EF6E  F009         	goto	l1196
  1272  001254                     l1180:
  1273  001254  FFFF               	dw	65535	; assembler added errata NOP
  1274                           
  1275                           ; BSR set to: 0
  1276                           ;Lcd4Lignes.c: 422:     {;Lcd4Lignes.c: 423:         for(j=0;j<8;j++)
  1277  001256  0E00               	movlw	0
  1278  001258  0100               	movlb	0	; force () banked
  1279  00125A  6FA9               	movwf	lcd_initCGRam@j& (0+255),b
  1280  00125C                     
  1281                           ; BSR set to: 0
  1282  00125C  0E07               	movlw	7
  1283  00125E  0100               	movlb	0	; force () banked
  1284  001260  65A9               	cpfsgt	lcd_initCGRam@j& (0+255),b
  1285  001262  EF35  F009         	goto	u111
  1286  001266  EF38  F009         	goto	u110
  1287  00126A                     u111:
  1288  00126A  FFFF               	dw	65535	; assembler added errata NOP
  1289  00126C  EF3B  F009         	goto	l1186
  1290  001270                     u110:
  1291  001270  FFFF               	dw	65535	; assembler added errata NOP
  1292  001272  EF61  F009         	goto	l1192
  1293  001276                     l1186:
  1294  001276  FFFF               	dw	65535	; assembler added errata NOP
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;Lcd4Lignes.c: 424:             lcd_wrData(matCGRAM[i][j]);
  1298  001278  0100               	movlb	0	; force () banked
  1299  00127A  51A8               	movf	lcd_initCGRam@i& (0+255),w,b
  1300  00127C  0D08               	mullw	8
  1301  00127E  0E60               	movlw	low _matCGRAM
  1302  001280  0100               	movlb	0	; force () banked
  1303  001282  6FA6               	movwf	??_lcd_initCGRam& (0+255),b
  1304  001284  0E00               	movlw	high _matCGRAM
  1305  001286  6FA7               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  1306  001288  50F3               	movf	243,w,c
  1307  00128A  27A6               	addwf	??_lcd_initCGRam& (0+255),f,b
  1308  00128C  50F4               	movf	244,w,c
  1309  00128E  23A7               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  1310  001290  0100               	movlb	0	; force () banked
  1311  001292  51A9               	movf	lcd_initCGRam@j& (0+255),w,b
  1312  001294  0100               	movlb	0	; force () banked
  1313  001296  25A6               	addwf	??_lcd_initCGRam& (0+255),w,b
  1314  001298  6ED9               	movwf	fsr2l,c
  1315  00129A  0100               	movlb	0	; force () banked
  1316  00129C  0E00               	movlw	0
  1317  00129E  0100               	movlb	0	; force () banked
  1318  0012A0  21A7               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  1319  0012A2  6EDA               	movwf	fsr2h,c
  1320  0012A4  50DF               	movf	indf2,w,c
  1321  0012A6  EC4C  F00C         	call	_lcd_wrData
  1322  0012AA  0100               	movlb	0	; force () banked
  1323  0012AC  2BA9               	incf	lcd_initCGRam@j& (0+255),f,b
  1324  0012AE                     
  1325                           ; BSR set to: 0
  1326  0012AE  0E07               	movlw	7
  1327  0012B0  0100               	movlb	0	; force () banked
  1328  0012B2  65A9               	cpfsgt	lcd_initCGRam@j& (0+255),b
  1329  0012B4  EF5E  F009         	goto	u121
  1330  0012B8  EF61  F009         	goto	u120
  1331  0012BC                     u121:
  1332  0012BC  FFFF               	dw	65535	; assembler added errata NOP
  1333  0012BE  EF3B  F009         	goto	l1186
  1334  0012C2                     u120:
  1335  0012C2                     l1192:
  1336  0012C2  FFFF               	dw	65535	; assembler added errata NOP
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;Lcd4Lignes.c: 425:     }
  1340  0012C4  0100               	movlb	0	; force () banked
  1341  0012C6  2BA8               	incf	lcd_initCGRam@i& (0+255),f,b
  1342  0012C8                     
  1343                           ; BSR set to: 0
  1344  0012C8  0E07               	movlw	7
  1345  0012CA  0100               	movlb	0	; force () banked
  1346  0012CC  65A8               	cpfsgt	lcd_initCGRam@i& (0+255),b
  1347  0012CE  EF6B  F009         	goto	u131
  1348  0012D2  EF6E  F009         	goto	u130
  1349  0012D6                     u131:
  1350  0012D6  FFFF               	dw	65535	; assembler added errata NOP
  1351  0012D8  EF2A  F009         	goto	l1180
  1352  0012DC                     u130:
  1353  0012DC                     l1196:
  1354  0012DC  FFFF               	dw	65535	; assembler added errata NOP
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;Lcd4Lignes.c: 426:     lcd_curseurHome();
  1358  0012DE  EC56  F00D         	call	_lcd_curseurHome	;wreg free
  1359  0012E2  0012               	return		;funcret
  1360  0012E4  FFFF               	dw	65535	; errata NOP
  1361  0012E6                     __end_of_lcd_initCGRam:
  1362                           	callstack 0
  1363                           
  1364 ;; *************** function _init_serie *****************
  1365 ;; Defined at:
  1366 ;;		line 26 in file "serie_458.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;		None
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;		None
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		wreg, status,2
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1380 ;;      Params:         0       0       0       0       0       0       0
  1381 ;;      Locals:         0       0       0       0       0       0       0
  1382 ;;      Temps:          0       0       0       0       0       0       0
  1383 ;;      Totals:         0       0       0       0       0       0       0
  1384 ;;Total ram usage:        0 bytes
  1385 ;; Hardware stack levels used: 1
  1386 ;; This function calls:
  1387 ;;		Nothing
  1388 ;; This function is called by:
  1389 ;;		_main
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           	psect	text4
  1394  001A6E                     __ptext4:
  1395                           	callstack 0
  1396  001A6E                     _init_serie:
  1397                           	callstack 0
  1398  001A6E  FFFF               	dw	65535	; assembler added errata NOP
  1399  001A70                     
  1400                           ;serie_458.c: 29:     TRISCbits.TRISC7=1;
  1401  001A70  8E94               	bsf	148,7,c	;volatile
  1402                           
  1403                           ;serie_458.c: 30:     TRISCbits.TRISC6=1;
  1404  001A72  8C94               	bsf	148,6,c	;volatile
  1405  001A74                     
  1406                           ;serie_458.c: 37:     SPBRG = 25;
  1407  001A74  0E19               	movlw	25
  1408  001A76  6EAF               	movwf	175,c	;volatile
  1409  001A78                     
  1410                           ;serie_458.c: 42:     TXSTAbits.BRGH = 0;
  1411  001A78  94AC               	bcf	172,2,c	;volatile
  1412  001A7A                     
  1413                           ;serie_458.c: 46:     RCSTAbits.SPEN = 1;
  1414  001A7A  8EAB               	bsf	171,7,c	;volatile
  1415  001A7C                     
  1416                           ;serie_458.c: 47:     TXSTAbits.SYNC = 0;
  1417  001A7C  98AC               	bcf	172,4,c	;volatile
  1418  001A7E                     
  1419                           ;serie_458.c: 50:     RCSTAbits.CREN = 1;
  1420  001A7E  88AB               	bsf	171,4,c	;volatile
  1421  001A80  0012               	return		;funcret
  1422  001A82  FFFF               	dw	65535	; errata NOP
  1423  001A84                     __end_of_init_serie:
  1424                           	callstack 0
  1425                           
  1426 ;; *************** function _initRegistres *****************
  1427 ;; Defined at:
  1428 ;;		line 6 in file "C:/Users/jerem/Documents/ecole/Prog/prog3.2/lab2_jeremie_Hamel.X/initialisation.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;		None
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;		None
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1442 ;;      Params:         0       0       0       0       0       0       0
  1443 ;;      Locals:         0       0       0       0       0       0       0
  1444 ;;      Temps:          0       0       0       0       0       0       0
  1445 ;;      Totals:         0       0       0       0       0       0       0
  1446 ;;Total ram usage:        0 bytes
  1447 ;; Hardware stack levels used: 1
  1448 ;; This function calls:
  1449 ;;		Nothing
  1450 ;; This function is called by:
  1451 ;;		_main
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           	psect	text5
  1456  001A84                     __ptext5:
  1457                           	callstack 0
  1458  001A84                     _initRegistres:
  1459                           	callstack 0
  1460  001A84  FFFF               	dw	65535	; assembler added errata NOP
  1461  001A86                     
  1462                           ;C:/Users/jerem/Documents/ecole/Prog/prog3.2/lab2_jeremie_Hamel.X/initialisation.c: 8:  
      +                          ADCON1 = 0x7;
  1463  001A86  0E07               	movlw	7
  1464  001A88  6EC1               	movwf	193,c	;volatile
  1465                           
  1466                           ;C:/Users/jerem/Documents/ecole/Prog/prog3.2/lab2_jeremie_Hamel.X/initialisation.c: 9:  
      +                          TRISA = 0;
  1467  001A8A  0E00               	movlw	0
  1468  001A8C  6E92               	movwf	146,c	;volatile
  1469                           
  1470                           ;C:/Users/jerem/Documents/ecole/Prog/prog3.2/lab2_jeremie_Hamel.X/initialisation.c: 10: 
      +                           TRISD = 0;
  1471  001A8E  0E00               	movlw	0
  1472  001A90  6E95               	movwf	149,c	;volatile
  1473                           
  1474                           ;C:/Users/jerem/Documents/ecole/Prog/prog3.2/lab2_jeremie_Hamel.X/initialisation.c: 11: 
      +                           TRISC = 0x80;
  1475  001A92  0E80               	movlw	128
  1476  001A94  6E94               	movwf	148,c	;volatile
  1477  001A96  0012               	return		;funcret
  1478  001A98  FFFF               	dw	65535	; errata NOP
  1479  001A9A                     __end_of_initRegistres:
  1480                           	callstack 0
  1481                           
  1482 ;; *************** function _gereTouche *****************
  1483 ;; Defined at:
  1484 ;;		line 104 in file "main.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;  etat            2   18[BANK0 ] PTR unsigned int 
  1487 ;;		 -> main@etatCourant(2), 
  1488 ;;  usager          2   20[BANK0 ] PTR int 
  1489 ;;		 -> main@noUsagerCourant(2), 
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;  touche          1   24[BANK0 ] unsigned char 
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      void 
  1494 ;; Registers used:
  1495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1501 ;;      Params:         0       4       0       0       0       0       0
  1502 ;;      Locals:         0       1       0       0       0       0       0
  1503 ;;      Temps:          0       2       0       0       0       0       0
  1504 ;;      Totals:         0       7       0       0       0       0       0
  1505 ;;Total ram usage:        7 bytes
  1506 ;; Hardware stack levels used: 1
  1507 ;; Hardware stack levels required when called: 4
  1508 ;; This function calls:
  1509 ;;		___wmul
  1510 ;;		_atoi
  1511 ;;		_getch
  1512 ;;		_kbhit
  1513 ;;		_lcd_ecritChar
  1514 ;;		_memset
  1515 ;;		_verifNip
  1516 ;; This function is called by:
  1517 ;;		_main
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           	psect	text6
  1522  00065C                     __ptext6:
  1523                           	callstack 0
  1524  00065C                     _gereTouche:
  1525                           	callstack 0
  1526  00065C  FFFF               	dw	65535	; assembler added errata NOP
  1527  00065E                     
  1528                           ;main.c: 104: void gereTouche(unsigned int *etat, int *usager);main.c: 105: {;main.c: 10
      +                          6:  char touche;;main.c: 107:  static int indexNIP = 0;;main.c: 109:  static char nip[4 
      +                          + 1];;main.c: 111:  if(kbhit())
  1529  00065E  EC14  F00D         	call	_kbhit	;wreg free
  1530  000662  0100               	movlb	0	; force () banked
  1531  000664  A0D8               	btfss	status,0,c
  1532  000666  EF37  F003         	goto	u731
  1533  00066A  EF3A  F003         	goto	u730
  1534  00066E                     u731:
  1535  00066E  FFFF               	dw	65535	; assembler added errata NOP
  1536  000670  EF61  F005         	goto	l184
  1537  000674                     u730:
  1538  000674  FFFF               	dw	65535	; assembler added errata NOP
  1539  000676                     
  1540                           ; BSR set to: 0
  1541                           ;main.c: 112:  {;main.c: 113:   touche = getch();
  1542  000676  EC26  F00D         	call	_getch	;wreg free
  1543  00067A  0100               	movlb	0	; force () banked
  1544  00067C  6FB8               	movwf	gereTouche@touche& (0+255),b
  1545  00067E                     
  1546                           ; BSR set to: 0
  1547                           ;main.c: 115:   if (touche >= '0' && touche <= '9')
  1548  00067E  0E2F               	movlw	47
  1549  000680  0100               	movlb	0	; force () banked
  1550  000682  65B8               	cpfsgt	gereTouche@touche& (0+255),b
  1551  000684  EF46  F003         	goto	u741
  1552  000688  EF49  F003         	goto	u740
  1553  00068C                     u741:
  1554  00068C  FFFF               	dw	65535	; assembler added errata NOP
  1555  00068E  EFE8  F003         	goto	l1810
  1556  000692                     u740:
  1557  000692  FFFF               	dw	65535	; assembler added errata NOP
  1558  000694                     
  1559                           ; BSR set to: 0
  1560  000694  0E3A               	movlw	58
  1561  000696  0100               	movlb	0	; force () banked
  1562  000698  61B8               	cpfslt	gereTouche@touche& (0+255),b
  1563  00069A  EF51  F003         	goto	u751
  1564  00069E  EF54  F003         	goto	u750
  1565  0006A2                     u751:
  1566  0006A2  FFFF               	dw	65535	; assembler added errata NOP
  1567  0006A4  EFE8  F003         	goto	l1810
  1568  0006A8                     u750:
  1569  0006A8  FFFF               	dw	65535	; assembler added errata NOP
  1570  0006AA                     
  1571                           ; BSR set to: 0
  1572                           ;main.c: 116:   {;main.c: 117:    if (*etat == enumEtat_NoUsager)
  1573  0006AA  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1574  0006AE  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1575  0006B2  04DE               	decf	postinc2,w,c
  1576  0006B4  10DE               	iorwf	postinc2,w,c
  1577  0006B6  A4D8               	btfss	status,2,c
  1578  0006B8  EF60  F003         	goto	u761
  1579  0006BC  EF63  F003         	goto	u760
  1580  0006C0                     u761:
  1581  0006C0  FFFF               	dw	65535	; assembler added errata NOP
  1582  0006C2  EFB5  F003         	goto	l1800
  1583  0006C6                     u760:
  1584  0006C6  FFFF               	dw	65535	; assembler added errata NOP
  1585  0006C8                     
  1586                           ; BSR set to: 0
  1587                           ;main.c: 118:    {;main.c: 119:     lcd_ecritChar(touche);
  1588  0006C8  0100               	movlb	0	; force () banked
  1589  0006CA  51B8               	movf	gereTouche@touche& (0+255),w,b
  1590  0006CC  ECF4  F00A         	call	_lcd_ecritChar
  1591  0006D0                     
  1592                           ;main.c: 121:     if(*usager < 0) *usager = atoi(&touche);
  1593  0006D0  C0B4  FFD9         	movff	gereTouche@usager,fsr2l
  1594  0006D4  C0B5  FFDA         	movff	gereTouche@usager+1,fsr2h
  1595  0006D8  0E01               	movlw	1
  1596  0006DA  BEDB               	btfsc	plusw2,7,c
  1597  0006DC  EF75  F003         	goto	u770
  1598  0006E0  EF72  F003         	goto	u771
  1599  0006E4                     u771:
  1600  0006E4  FFFF               	dw	65535	; assembler added errata NOP
  1601  0006E6  EF88  F003         	goto	l1798
  1602  0006EA                     u770:
  1603  0006EA  FFFF               	dw	65535	; assembler added errata NOP
  1604  0006EC  0EB8               	movlw	low gereTouche@touche
  1605  0006EE  0100               	movlb	0	; force () banked
  1606  0006F0  6FA7               	movwf	atoi@s& (0+255),b
  1607  0006F2  0E00               	movlw	high gereTouche@touche
  1608  0006F4  6FA8               	movwf	(atoi@s+1)& (0+255),b
  1609  0006F6  EC60  F007         	call	_atoi	;wreg free
  1610  0006FA  C0B4  FFD9         	movff	gereTouche@usager,fsr2l
  1611  0006FE  C0B5  FFDA         	movff	gereTouche@usager+1,fsr2h
  1612  000702  0100               	movlb	0	; force () banked
  1613  000704  C0A7  FFDE         	movff	?_atoi,postinc2
  1614  000708  C0A8  FFDD         	movff	?_atoi+1,postdec2
  1615  00070C  EF61  F005         	goto	l184
  1616  000710                     l1798:
  1617  000710  FFFF               	dw	65535	; assembler added errata NOP
  1618  000712  C0B4  FFD9         	movff	gereTouche@usager,fsr2l
  1619  000716  C0B5  FFDA         	movff	gereTouche@usager+1,fsr2h
  1620  00071A  CFDE F0A0          	movff	postinc2,___wmul@multiplier
  1621  00071E  CFDD F0A1          	movff	postdec2,___wmul@multiplier+1
  1622  000722  0E00               	movlw	0
  1623  000724  0100               	movlb	0	; force () banked
  1624  000726  6FA3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1625  000728  0E0A               	movlw	10
  1626  00072A  6FA2               	movwf	___wmul@multiplicand& (0+255),b
  1627  00072C  ECFE  F00C         	call	___wmul	;wreg free
  1628  000730  C0A0  F0B6         	movff	?___wmul,??_gereTouche
  1629  000734  C0A1  F0B7         	movff	?___wmul+1,??_gereTouche+1
  1630  000738  0EB8               	movlw	low gereTouche@touche
  1631  00073A  0100               	movlb	0	; force () banked
  1632  00073C  6FA7               	movwf	atoi@s& (0+255),b
  1633  00073E  0E00               	movlw	high gereTouche@touche
  1634  000740  6FA8               	movwf	(atoi@s+1)& (0+255),b
  1635  000742  EC60  F007         	call	_atoi	;wreg free
  1636  000746  0100               	movlb	0	; force () banked
  1637  000748  51A7               	movf	?_atoi& (0+255),w,b
  1638  00074A  0100               	movlb	0	; force () banked
  1639  00074C  27B6               	addwf	??_gereTouche& (0+255),f,b
  1640  00074E  0100               	movlb	0	; force () banked
  1641  000750  51A8               	movf	(?_atoi+1)& (0+255),w,b
  1642  000752  0100               	movlb	0	; force () banked
  1643  000754  23B7               	addwfc	(??_gereTouche+1)& (0+255),f,b
  1644  000756  C0B4  FFD9         	movff	gereTouche@usager,fsr2l
  1645  00075A  C0B5  FFDA         	movff	gereTouche@usager+1,fsr2h
  1646  00075E  C0B6  FFDE         	movff	??_gereTouche,postinc2
  1647  000762  C0B7  FFDD         	movff	??_gereTouche+1,postdec2
  1648  000766  EF61  F005         	goto	l184
  1649  00076A                     l1800:
  1650  00076A  FFFF               	dw	65535	; assembler added errata NOP
  1651                           
  1652                           ; BSR set to: 0
  1653  00076C  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1654  000770  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1655  000774  0E02               	movlw	2
  1656  000776  18DE               	xorwf	postinc2,w,c
  1657  000778  10DE               	iorwf	postinc2,w,c
  1658  00077A  A4D8               	btfss	status,2,c
  1659  00077C  EFC2  F003         	goto	u781
  1660  000780  EFC5  F003         	goto	u780
  1661  000784                     u781:
  1662  000784  FFFF               	dw	65535	; assembler added errata NOP
  1663  000786  EF61  F005         	goto	l184
  1664  00078A                     u780:
  1665  00078A  FFFF               	dw	65535	; assembler added errata NOP
  1666  00078C                     
  1667                           ; BSR set to: 0
  1668                           ;main.c: 125:    {;main.c: 126:     if (indexNIP < 4)
  1669  00078C  0100               	movlb	0	; force () banked
  1670  00078E  BFC0               	btfsc	(gereTouche@indexNIP+1)& (0+255),7,b
  1671  000790  EFD6  F003         	goto	u790
  1672  000794  51C0               	movf	(gereTouche@indexNIP+1)& (0+255),w,b
  1673  000796  E107               	bnz	u791
  1674  000798  0E04               	movlw	4
  1675  00079A  5DBF               	subwf	gereTouche@indexNIP& (0+255),w,b
  1676  00079C  B0D8               	btfsc	status,0,c
  1677  00079E  EFD3  F003         	goto	u791
  1678  0007A2  EFD6  F003         	goto	u790
  1679  0007A6                     u791:
  1680  0007A6  FFFF               	dw	65535	; assembler added errata NOP
  1681  0007A8  EF61  F005         	goto	l167
  1682  0007AC                     u790:
  1683  0007AC  FFFF               	dw	65535	; assembler added errata NOP
  1684  0007AE                     
  1685                           ; BSR set to: 0
  1686                           ;main.c: 127:     {;main.c: 128:      lcd_ecritChar('*');
  1687  0007AE  0E2A               	movlw	42
  1688  0007B0  ECF4  F00A         	call	_lcd_ecritChar
  1689  0007B4                     
  1690                           ;main.c: 129:      nip[indexNIP] = touche;
  1691  0007B4  0EC1               	movlw	low gereTouche@nip
  1692  0007B6  0100               	movlb	0	; force () banked
  1693  0007B8  25BF               	addwf	gereTouche@indexNIP& (0+255),w,b
  1694  0007BA  6ED9               	movwf	fsr2l,c
  1695  0007BC  0E00               	movlw	high gereTouche@nip
  1696  0007BE  21C0               	addwfc	(gereTouche@indexNIP+1)& (0+255),w,b
  1697  0007C0  6EDA               	movwf	fsr2h,c
  1698  0007C2  C0B8  FFDF         	movff	gereTouche@touche,indf2
  1699  0007C6                     
  1700                           ; BSR set to: 0
  1701                           ;main.c: 130:      indexNIP++;
  1702  0007C6  0100               	movlb	0	; force () banked
  1703  0007C8  4BBF               	infsnz	gereTouche@indexNIP& (0+255),f,b
  1704  0007CA  2BC0               	incf	(gereTouche@indexNIP+1)& (0+255),f,b
  1705  0007CC  EF61  F005         	goto	l184
  1706  0007D0                     l1810:
  1707  0007D0  FFFF               	dw	65535	; assembler added errata NOP
  1708                           
  1709                           ; BSR set to: 0
  1710  0007D2  0E0D               	movlw	13
  1711  0007D4  0100               	movlb	0	; force () banked
  1712  0007D6  19B8               	xorwf	gereTouche@touche& (0+255),w,b
  1713  0007D8  A4D8               	btfss	status,2,c
  1714  0007DA  EFF1  F003         	goto	u801
  1715  0007DE  EFF4  F003         	goto	u800
  1716  0007E2                     u801:
  1717  0007E2  FFFF               	dw	65535	; assembler added errata NOP
  1718  0007E4  EFE1  F004         	goto	l1844
  1719  0007E8                     u800:
  1720  0007E8  FFFF               	dw	65535	; assembler added errata NOP
  1721  0007EA                     
  1722                           ; BSR set to: 0
  1723                           ;main.c: 136:   {;main.c: 138:    if(*etat == enumEtat_Depart)
  1724  0007EA  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1725  0007EE  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1726  0007F2  50DE               	movf	postinc2,w,c
  1727  0007F4  10DE               	iorwf	postinc2,w,c
  1728  0007F6  A4D8               	btfss	status,2,c
  1729  0007F8  EF00  F004         	goto	u811
  1730  0007FC  EF03  F004         	goto	u810
  1731  000800                     u811:
  1732  000800  FFFF               	dw	65535	; assembler added errata NOP
  1733  000802  EF0E  F004         	goto	l1816
  1734  000806                     u810:
  1735  000806  FFFF               	dw	65535	; assembler added errata NOP
  1736  000808                     
  1737                           ; BSR set to: 0
  1738                           ;main.c: 139:     *etat = enumEtat_NoUsager;
  1739  000808  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1740  00080C  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1741  000810  0E01               	movlw	1
  1742  000812  6EDE               	movwf	postinc2,c
  1743  000814  0E00               	movlw	0
  1744  000816  6EDD               	movwf	postdec2,c
  1745  000818  EF61  F005         	goto	l184
  1746  00081C                     l1816:
  1747  00081C  FFFF               	dw	65535	; assembler added errata NOP
  1748                           
  1749                           ; BSR set to: 0
  1750  00081E  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1751  000822  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1752  000826  04DE               	decf	postinc2,w,c
  1753  000828  10DE               	iorwf	postinc2,w,c
  1754  00082A  A4D8               	btfss	status,2,c
  1755  00082C  EF1A  F004         	goto	u821
  1756  000830  EF1D  F004         	goto	u820
  1757  000834                     u821:
  1758  000834  FFFF               	dw	65535	; assembler added errata NOP
  1759  000836  EF57  F004         	goto	l1826
  1760  00083A                     u820:
  1761  00083A  FFFF               	dw	65535	; assembler added errata NOP
  1762  00083C                     
  1763                           ; BSR set to: 0
  1764                           ;main.c: 142:      if(*usager >= 0 && *usager < 12)
  1765  00083C  C0B4  FFD9         	movff	gereTouche@usager,fsr2l
  1766  000840  C0B5  FFDA         	movff	gereTouche@usager+1,fsr2h
  1767  000844  0E01               	movlw	1
  1768  000846  BEDB               	btfsc	plusw2,7,c
  1769  000848  EF28  F004         	goto	u831
  1770  00084C  EF2B  F004         	goto	u830
  1771  000850                     u831:
  1772  000850  FFFF               	dw	65535	; assembler added errata NOP
  1773  000852  EF4C  F004         	goto	l1824
  1774  000856                     u830:
  1775  000856  FFFF               	dw	65535	; assembler added errata NOP
  1776  000858                     
  1777                           ; BSR set to: 0
  1778  000858  C0B4  FFD9         	movff	gereTouche@usager,fsr2l
  1779  00085C  C0B5  FFDA         	movff	gereTouche@usager+1,fsr2h
  1780  000860  0E01               	movlw	1
  1781  000862  BEDB               	btfsc	plusw2,7,c
  1782  000864  EF41  F004         	goto	u840
  1783  000868  0E01               	movlw	1
  1784  00086A  50DB               	movf	plusw2,w,c
  1785  00086C  E107               	bnz	u841
  1786  00086E  0E0C               	movlw	12
  1787  000870  5CDE               	subwf	postinc2,w,c
  1788  000872  B0D8               	btfsc	status,0,c
  1789  000874  EF3E  F004         	goto	u841
  1790  000878  EF41  F004         	goto	u840
  1791  00087C                     u841:
  1792  00087C  FFFF               	dw	65535	; assembler added errata NOP
  1793  00087E  EF4C  F004         	goto	l1824
  1794  000882                     u840:
  1795  000882  FFFF               	dw	65535	; assembler added errata NOP
  1796  000884                     
  1797                           ; BSR set to: 0
  1798                           ;main.c: 143:       *etat = enumEtat_NIP;
  1799  000884  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1800  000888  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1801  00088C  0E02               	movlw	2
  1802  00088E  6EDE               	movwf	postinc2,c
  1803  000890  0E00               	movlw	0
  1804  000892  6EDD               	movwf	postdec2,c
  1805  000894  EF61  F005         	goto	l184
  1806  000898                     l1824:
  1807  000898  FFFF               	dw	65535	; assembler added errata NOP
  1808                           
  1809                           ; BSR set to: 0
  1810  00089A  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1811  00089E  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1812  0008A2  0E04               	movlw	4
  1813  0008A4  6EDE               	movwf	postinc2,c
  1814  0008A6  0E00               	movlw	0
  1815  0008A8  6EDD               	movwf	postdec2,c
  1816  0008AA  EF61  F005         	goto	l184
  1817  0008AE                     l1826:
  1818  0008AE  FFFF               	dw	65535	; assembler added errata NOP
  1819                           
  1820                           ; BSR set to: 0
  1821  0008B0  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1822  0008B4  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1823  0008B8  0E02               	movlw	2
  1824  0008BA  18DE               	xorwf	postinc2,w,c
  1825  0008BC  10DE               	iorwf	postinc2,w,c
  1826  0008BE  A4D8               	btfss	status,2,c
  1827  0008C0  EF64  F004         	goto	u851
  1828  0008C4  EF67  F004         	goto	u850
  1829  0008C8                     u851:
  1830  0008C8  FFFF               	dw	65535	; assembler added errata NOP
  1831  0008CA  EFB8  F004         	goto	l1838
  1832  0008CE                     u850:
  1833  0008CE  FFFF               	dw	65535	; assembler added errata NOP
  1834  0008D0                     
  1835                           ; BSR set to: 0
  1836                           ;main.c: 147:    {;main.c: 148:     if(verifNip(*usager, nip, indexNIP))
  1837  0008D0  C0B4  FFD9         	movff	gereTouche@usager,fsr2l
  1838  0008D4  C0B5  FFDA         	movff	gereTouche@usager+1,fsr2h
  1839  0008D8  CFDE F0AC          	movff	postinc2,verifNip@usager
  1840  0008DC  CFDD F0AD          	movff	postdec2,verifNip@usager+1
  1841  0008E0  0EC1               	movlw	low gereTouche@nip
  1842  0008E2  0100               	movlb	0	; force () banked
  1843  0008E4  6FAE               	movwf	verifNip@no& (0+255),b
  1844  0008E6  0E00               	movlw	high gereTouche@nip
  1845  0008E8  6FAF               	movwf	(verifNip@no+1)& (0+255),b
  1846  0008EA  C0BF  F0B0         	movff	gereTouche@indexNIP,verifNip@index
  1847  0008EE  C0C0  F0B1         	movff	gereTouche@indexNIP+1,verifNip@index+1
  1848  0008F2  EC31  F00B         	call	_verifNip	;wreg free
  1849  0008F6  0900               	iorlw	0
  1850  0008F8  B4D8               	btfsc	status,2,c
  1851  0008FA  EF81  F004         	goto	u861
  1852  0008FE  EF84  F004         	goto	u860
  1853  000902                     u861:
  1854  000902  FFFF               	dw	65535	; assembler added errata NOP
  1855  000904  EF8F  F004         	goto	l1832
  1856  000908                     u860:
  1857  000908  FFFF               	dw	65535	; assembler added errata NOP
  1858  00090A                     
  1859                           ;main.c: 149:      *etat = enumEtat_AccesOk;
  1860  00090A  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1861  00090E  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1862  000912  0E03               	movlw	3
  1863  000914  6EDE               	movwf	postinc2,c
  1864  000916  0E00               	movlw	0
  1865  000918  6EDD               	movwf	postdec2,c
  1866  00091A  EF61  F005         	goto	l184
  1867  00091E                     l1832:
  1868  00091E  FFFF               	dw	65535	; assembler added errata NOP
  1869                           
  1870                           ;main.c: 151:     {;main.c: 152:      *etat = enumEtat_AccesRefuse;
  1871  000920  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1872  000924  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1873  000928  0E04               	movlw	4
  1874  00092A  6EDE               	movwf	postinc2,c
  1875  00092C  0E00               	movlw	0
  1876  00092E  6EDD               	movwf	postdec2,c
  1877                           
  1878                           ;main.c: 153:      *usager = -1;
  1879  000930  C0B4  FFD9         	movff	gereTouche@usager,fsr2l
  1880  000934  C0B5  FFDA         	movff	gereTouche@usager+1,fsr2h
  1881  000938  0EFF               	movlw	255
  1882  00093A  6EDE               	movwf	postinc2,c
  1883  00093C  0EFF               	movlw	255
  1884  00093E  6EDD               	movwf	postdec2,c
  1885  000940                     
  1886                           ;main.c: 154:      memset(nip, '\0', 5);
  1887  000940  0EC1               	movlw	low gereTouche@nip
  1888  000942  0100               	movlb	0	; force () banked
  1889  000944  6FA0               	movwf	memset@dest& (0+255),b
  1890  000946  0E00               	movlw	high gereTouche@nip
  1891  000948  6FA1               	movwf	(memset@dest+1)& (0+255),b
  1892  00094A  0E00               	movlw	0
  1893  00094C  0100               	movlb	0	; force () banked
  1894  00094E  6FA3               	movwf	(memset@c+1)& (0+255),b
  1895  000950  0E00               	movlw	0
  1896  000952  6FA2               	movwf	memset@c& (0+255),b
  1897  000954  0E00               	movlw	0
  1898  000956  0100               	movlb	0	; force () banked
  1899  000958  6FA5               	movwf	(memset@n+1)& (0+255),b
  1900  00095A  0E05               	movlw	5
  1901  00095C  6FA4               	movwf	memset@n& (0+255),b
  1902  00095E  EC7D  F006         	call	_memset	;wreg free
  1903  000962                     
  1904                           ;main.c: 155:      indexNIP = 0;
  1905  000962  0E00               	movlw	0
  1906  000964  0100               	movlb	0	; force () banked
  1907  000966  6FC0               	movwf	(gereTouche@indexNIP+1)& (0+255),b
  1908  000968  0E00               	movlw	0
  1909  00096A  6FBF               	movwf	gereTouche@indexNIP& (0+255),b
  1910  00096C  EF61  F005         	goto	l184
  1911  000970                     l1838:
  1912  000970  FFFF               	dw	65535	; assembler added errata NOP
  1913                           
  1914                           ; BSR set to: 0
  1915                           ;main.c: 160:    {;main.c: 161:     *etat = enumEtat_Depart;
  1916  000972  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1917  000976  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1918  00097A  0E00               	movlw	0
  1919  00097C  6EDE               	movwf	postinc2,c
  1920  00097E  0E00               	movlw	0
  1921  000980  6EDD               	movwf	postdec2,c
  1922                           
  1923                           ;main.c: 162:     *usager = -1;
  1924  000982  C0B4  FFD9         	movff	gereTouche@usager,fsr2l
  1925  000986  C0B5  FFDA         	movff	gereTouche@usager+1,fsr2h
  1926  00098A  0EFF               	movlw	255
  1927  00098C  6EDE               	movwf	postinc2,c
  1928  00098E  0EFF               	movlw	255
  1929  000990  6EDD               	movwf	postdec2,c
  1930  000992                     
  1931                           ; BSR set to: 0
  1932                           ;main.c: 163:     memset(nip, '\0', 5);
  1933  000992  0EC1               	movlw	low gereTouche@nip
  1934  000994  0100               	movlb	0	; force () banked
  1935  000996  6FA0               	movwf	memset@dest& (0+255),b
  1936  000998  0E00               	movlw	high gereTouche@nip
  1937  00099A  6FA1               	movwf	(memset@dest+1)& (0+255),b
  1938  00099C  0E00               	movlw	0
  1939  00099E  0100               	movlb	0	; force () banked
  1940  0009A0  6FA3               	movwf	(memset@c+1)& (0+255),b
  1941  0009A2  0E00               	movlw	0
  1942  0009A4  6FA2               	movwf	memset@c& (0+255),b
  1943  0009A6  0E00               	movlw	0
  1944  0009A8  0100               	movlb	0	; force () banked
  1945  0009AA  6FA5               	movwf	(memset@n+1)& (0+255),b
  1946  0009AC  0E05               	movlw	5
  1947  0009AE  6FA4               	movwf	memset@n& (0+255),b
  1948  0009B0  EC7D  F006         	call	_memset	;wreg free
  1949  0009B4                     
  1950                           ;main.c: 164:     indexNIP = 0;
  1951  0009B4  0E00               	movlw	0
  1952  0009B6  0100               	movlb	0	; force () banked
  1953  0009B8  6FC0               	movwf	(gereTouche@indexNIP+1)& (0+255),b
  1954  0009BA  0E00               	movlw	0
  1955  0009BC  6FBF               	movwf	gereTouche@indexNIP& (0+255),b
  1956  0009BE  EF61  F005         	goto	l184
  1957  0009C2                     l1844:
  1958  0009C2  FFFF               	dw	65535	; assembler added errata NOP
  1959                           
  1960                           ; BSR set to: 0
  1961  0009C4  0E1B               	movlw	27
  1962  0009C6  0100               	movlb	0	; force () banked
  1963  0009C8  19B8               	xorwf	gereTouche@touche& (0+255),w,b
  1964  0009CA  A4D8               	btfss	status,2,c
  1965  0009CC  EFEA  F004         	goto	u871
  1966  0009D0  EFED  F004         	goto	u870
  1967  0009D4                     u871:
  1968  0009D4  FFFF               	dw	65535	; assembler added errata NOP
  1969  0009D6  EF61  F005         	goto	l184
  1970  0009DA                     u870:
  1971  0009DA  FFFF               	dw	65535	; assembler added errata NOP
  1972  0009DC                     
  1973                           ; BSR set to: 0
  1974                           ;main.c: 169:   {;main.c: 170:    if(*etat == enumEtat_NIP)
  1975  0009DC  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1976  0009E0  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1977  0009E4  0E02               	movlw	2
  1978  0009E6  18DE               	xorwf	postinc2,w,c
  1979  0009E8  10DE               	iorwf	postinc2,w,c
  1980  0009EA  A4D8               	btfss	status,2,c
  1981  0009EC  EFFA  F004         	goto	u881
  1982  0009F0  EFFD  F004         	goto	u880
  1983  0009F4                     u881:
  1984  0009F4  FFFF               	dw	65535	; assembler added errata NOP
  1985  0009F6  EF26  F005         	goto	l1854
  1986  0009FA                     u880:
  1987  0009FA  FFFF               	dw	65535	; assembler added errata NOP
  1988  0009FC                     
  1989                           ; BSR set to: 0
  1990                           ;main.c: 171:    {;main.c: 172:     *etat = enumEtat_NoUsager;
  1991  0009FC  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  1992  000A00  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  1993  000A04  0E01               	movlw	1
  1994  000A06  6EDE               	movwf	postinc2,c
  1995  000A08  0E00               	movlw	0
  1996  000A0A  6EDD               	movwf	postdec2,c
  1997                           
  1998                           ;main.c: 173:     *usager = -1;
  1999  000A0C  C0B4  FFD9         	movff	gereTouche@usager,fsr2l
  2000  000A10  C0B5  FFDA         	movff	gereTouche@usager+1,fsr2h
  2001  000A14  0EFF               	movlw	255
  2002  000A16  6EDE               	movwf	postinc2,c
  2003  000A18  0EFF               	movlw	255
  2004  000A1A  6EDD               	movwf	postdec2,c
  2005  000A1C                     
  2006                           ; BSR set to: 0
  2007                           ;main.c: 174:     memset(nip, '\0', 5);
  2008  000A1C  0EC1               	movlw	low gereTouche@nip
  2009  000A1E  0100               	movlb	0	; force () banked
  2010  000A20  6FA0               	movwf	memset@dest& (0+255),b
  2011  000A22  0E00               	movlw	high gereTouche@nip
  2012  000A24  6FA1               	movwf	(memset@dest+1)& (0+255),b
  2013  000A26  0E00               	movlw	0
  2014  000A28  0100               	movlb	0	; force () banked
  2015  000A2A  6FA3               	movwf	(memset@c+1)& (0+255),b
  2016  000A2C  0E00               	movlw	0
  2017  000A2E  6FA2               	movwf	memset@c& (0+255),b
  2018  000A30  0E00               	movlw	0
  2019  000A32  0100               	movlb	0	; force () banked
  2020  000A34  6FA5               	movwf	(memset@n+1)& (0+255),b
  2021  000A36  0E05               	movlw	5
  2022  000A38  6FA4               	movwf	memset@n& (0+255),b
  2023  000A3A  EC7D  F006         	call	_memset	;wreg free
  2024  000A3E                     
  2025                           ;main.c: 175:     indexNIP = 0;
  2026  000A3E  0E00               	movlw	0
  2027  000A40  0100               	movlb	0	; force () banked
  2028  000A42  6FC0               	movwf	(gereTouche@indexNIP+1)& (0+255),b
  2029  000A44  0E00               	movlw	0
  2030  000A46  6FBF               	movwf	gereTouche@indexNIP& (0+255),b
  2031                           
  2032                           ;main.c: 176:    }
  2033  000A48  EF61  F005         	goto	l184
  2034  000A4C                     l1854:
  2035  000A4C  FFFF               	dw	65535	; assembler added errata NOP
  2036                           
  2037                           ; BSR set to: 0
  2038  000A4E  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  2039  000A52  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  2040  000A56  04DE               	decf	postinc2,w,c
  2041  000A58  10DE               	iorwf	postinc2,w,c
  2042  000A5A  A4D8               	btfss	status,2,c
  2043  000A5C  EF32  F005         	goto	u891
  2044  000A60  EF35  F005         	goto	u890
  2045  000A64                     u891:
  2046  000A64  FFFF               	dw	65535	; assembler added errata NOP
  2047  000A66  EF5E  F005         	goto	l179
  2048  000A6A                     u890:
  2049  000A6A  FFFF               	dw	65535	; assembler added errata NOP
  2050  000A6C                     
  2051                           ; BSR set to: 0
  2052                           ;main.c: 178:    {;main.c: 179:     *etat = enumEtat_Depart;
  2053  000A6C  C0B2  FFD9         	movff	gereTouche@etat,fsr2l
  2054  000A70  C0B3  FFDA         	movff	gereTouche@etat+1,fsr2h
  2055  000A74  0E00               	movlw	0
  2056  000A76  6EDE               	movwf	postinc2,c
  2057  000A78  0E00               	movlw	0
  2058  000A7A  6EDD               	movwf	postdec2,c
  2059                           
  2060                           ;main.c: 180:     *usager = -1;
  2061  000A7C  C0B4  FFD9         	movff	gereTouche@usager,fsr2l
  2062  000A80  C0B5  FFDA         	movff	gereTouche@usager+1,fsr2h
  2063  000A84  0EFF               	movlw	255
  2064  000A86  6EDE               	movwf	postinc2,c
  2065  000A88  0EFF               	movlw	255
  2066  000A8A  6EDD               	movwf	postdec2,c
  2067  000A8C                     
  2068                           ; BSR set to: 0
  2069                           ;main.c: 181:     memset(nip, '\0', 5);
  2070  000A8C  0EC1               	movlw	low gereTouche@nip
  2071  000A8E  0100               	movlb	0	; force () banked
  2072  000A90  6FA0               	movwf	memset@dest& (0+255),b
  2073  000A92  0E00               	movlw	high gereTouche@nip
  2074  000A94  6FA1               	movwf	(memset@dest+1)& (0+255),b
  2075  000A96  0E00               	movlw	0
  2076  000A98  0100               	movlb	0	; force () banked
  2077  000A9A  6FA3               	movwf	(memset@c+1)& (0+255),b
  2078  000A9C  0E00               	movlw	0
  2079  000A9E  6FA2               	movwf	memset@c& (0+255),b
  2080  000AA0  0E00               	movlw	0
  2081  000AA2  0100               	movlb	0	; force () banked
  2082  000AA4  6FA5               	movwf	(memset@n+1)& (0+255),b
  2083  000AA6  0E05               	movlw	5
  2084  000AA8  6FA4               	movwf	memset@n& (0+255),b
  2085  000AAA  EC7D  F006         	call	_memset	;wreg free
  2086  000AAE                     
  2087                           ;main.c: 182:     indexNIP = 0;
  2088  000AAE  0E00               	movlw	0
  2089  000AB0  0100               	movlb	0	; force () banked
  2090  000AB2  6FC0               	movwf	(gereTouche@indexNIP+1)& (0+255),b
  2091  000AB4  0E00               	movlw	0
  2092  000AB6  6FBF               	movwf	gereTouche@indexNIP& (0+255),b
  2093  000AB8  EF61  F005         	goto	l184
  2094  000ABC                     l179:
  2095  000ABC  FFFF               	dw	65535	; assembler added errata NOP
  2096                           
  2097                           ; BSR set to: 0
  2098  000ABE  EF61  F005         	goto	l184
  2099  000AC2                     l167:
  2100  000AC2                     l184:
  2101  000AC2  FFFF               	dw	65535	; assembler added errata NOP
  2102  000AC4  0012               	return		;funcret
  2103  000AC6  FFFF               	dw	65535	; errata NOP
  2104  000AC8                     __end_of_gereTouche:
  2105                           	callstack 0
  2106                           
  2107 ;; *************** function _verifNip *****************
  2108 ;; Defined at:
  2109 ;;		line 193 in file "main.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  usager          2   12[BANK0 ] int 
  2112 ;;  no              2   14[BANK0 ] PTR unsigned char 
  2113 ;;		 -> gereTouche@nip(5), 
  2114 ;;  index           2   16[BANK0 ] int 
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;		None
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      _Bool 
  2119 ;; Registers used:
  2120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2126 ;;      Params:         0       6       0       0       0       0       0
  2127 ;;      Locals:         0       0       0       0       0       0       0
  2128 ;;      Temps:          0       0       0       0       0       0       0
  2129 ;;      Totals:         0       6       0       0       0       0       0
  2130 ;;Total ram usage:        6 bytes
  2131 ;; Hardware stack levels used: 1
  2132 ;; Hardware stack levels required when called: 1
  2133 ;; This function calls:
  2134 ;;		___wmul
  2135 ;;		_strcmp
  2136 ;; This function is called by:
  2137 ;;		_gereTouche
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text7
  2142  001662                     __ptext7:
  2143                           	callstack 0
  2144  001662                     _verifNip:
  2145                           	callstack 0
  2146  001662  FFFF               	dw	65535	; assembler added errata NOP
  2147  001664                     
  2148                           ;main.c: 193: _Bool verifNip(int usager, char* no, int index);main.c: 194: {;main.c: 196
      +                          :  no[index] = '\0';
  2149  001664  0100               	movlb	0	; force () banked
  2150  001666  51B0               	movf	verifNip@index& (0+255),w,b
  2151  001668  0100               	movlb	0	; force () banked
  2152  00166A  25AE               	addwf	verifNip@no& (0+255),w,b
  2153  00166C  6ED9               	movwf	fsr2l,c
  2154  00166E  0100               	movlb	0	; force () banked
  2155  001670  51B1               	movf	(verifNip@index+1)& (0+255),w,b
  2156  001672  0100               	movlb	0	; force () banked
  2157  001674  21AF               	addwfc	(verifNip@no+1)& (0+255),w,b
  2158  001676  6EDA               	movwf	fsr2h,c
  2159  001678  0E00               	movlw	0
  2160  00167A  6EDF               	movwf	indf2,c
  2161  00167C                     
  2162                           ; BSR set to: 0
  2163                           ;main.c: 198:  if(!strcmp(no, listeUsager[usager].nip))
  2164  00167C  C0AE  F0A6         	movff	verifNip@no,strcmp@l
  2165  001680  C0AF  F0A7         	movff	verifNip@no+1,strcmp@l+1
  2166  001684  C0AC  F0A0         	movff	verifNip@usager,___wmul@multiplier
  2167  001688  C0AD  F0A1         	movff	verifNip@usager+1,___wmul@multiplier+1
  2168  00168C  0E00               	movlw	0
  2169  00168E  0100               	movlb	0	; force () banked
  2170  001690  6FA3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2171  001692  0E19               	movlw	25
  2172  001694  6FA2               	movwf	___wmul@multiplicand& (0+255),b
  2173  001696  ECFE  F00C         	call	___wmul	;wreg free
  2174  00169A  0EDA               	movlw	low (_listeUsager+20)
  2175  00169C  0100               	movlb	0	; force () banked
  2176  00169E  25A0               	addwf	?___wmul& (0+255),w,b
  2177  0016A0  0100               	movlb	0	; force () banked
  2178  0016A2  6FA8               	movwf	strcmp@r& (0+255),b
  2179  0016A4  0E00               	movlw	high (_listeUsager+20)
  2180  0016A6  0100               	movlb	0	; force () banked
  2181  0016A8  21A1               	addwfc	(?___wmul+1)& (0+255),w,b
  2182  0016AA  0100               	movlb	0	; force () banked
  2183  0016AC  6FA9               	movwf	(strcmp@r+1)& (0+255),b
  2184  0016AE  ECB4  F00A         	call	_strcmp	;wreg free
  2185  0016B2  0100               	movlb	0	; force () banked
  2186  0016B4  51A6               	movf	?_strcmp& (0+255),w,b
  2187  0016B6  11A7               	iorwf	(?_strcmp+1)& (0+255),w,b
  2188  0016B8  A4D8               	btfss	status,2,c
  2189  0016BA  EF61  F00B         	goto	u671
  2190  0016BE  EF64  F00B         	goto	u670
  2191  0016C2                     u671:
  2192  0016C2  FFFF               	dw	65535	; assembler added errata NOP
  2193  0016C4  EF68  F00B         	goto	l1734
  2194  0016C8                     u670:
  2195  0016C8  FFFF               	dw	65535	; assembler added errata NOP
  2196  0016CA                     
  2197                           ; BSR set to: 0
  2198                           ;main.c: 199:   return 1;
  2199  0016CA  0E01               	movlw	1
  2200  0016CC  EF6A  F00B         	goto	l188
  2201  0016D0                     l1734:
  2202  0016D0  FFFF               	dw	65535	; assembler added errata NOP
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;main.c: 201:  return 0;
  2206  0016D2  0E00               	movlw	0
  2207  0016D4                     l188:
  2208  0016D4  FFFF               	dw	65535	; assembler added errata NOP
  2209                           
  2210                           ; BSR set to: 0
  2211  0016D6  0012               	return		;funcret
  2212  0016D8  FFFF               	dw	65535	; errata NOP
  2213  0016DA                     __end_of_verifNip:
  2214                           	callstack 0
  2215                           
  2216 ;; *************** function _strcmp *****************
  2217 ;; Defined at:
  2218 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcmp.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  l               2    6[BANK0 ] PTR const unsigned char 
  2221 ;;		 -> gereTouche@nip(5), 
  2222 ;;  r               2    8[BANK0 ] PTR const unsigned char 
  2223 ;;		 -> listeUsager.nip(5), listeUsager(300), 
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;		None
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  2    6[BANK0 ] int 
  2228 ;; Registers used:
  2229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2235 ;;      Params:         0       4       0       0       0       0       0
  2236 ;;      Locals:         0       0       0       0       0       0       0
  2237 ;;      Temps:          0       2       0       0       0       0       0
  2238 ;;      Totals:         0       6       0       0       0       0       0
  2239 ;;Total ram usage:        6 bytes
  2240 ;; Hardware stack levels used: 1
  2241 ;; This function calls:
  2242 ;;		Nothing
  2243 ;; This function is called by:
  2244 ;;		_verifNip
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           	psect	text8
  2249  001568                     __ptext8:
  2250                           	callstack 0
  2251  001568                     _strcmp:
  2252                           	callstack 0
  2253  001568  FFFF               	dw	65535	; assembler added errata NOP
  2254  00156A  EFBD  F00A         	goto	l1638
  2255  00156E                     l1636:
  2256  00156E  FFFF               	dw	65535	; assembler added errata NOP
  2257  001570  0100               	movlb	0	; () banked
  2258  001572  4BA6               	infsnz	strcmp@l& (0+255),f,b
  2259  001574  2BA7               	incf	(strcmp@l+1)& (0+255),f,b
  2260  001576  4BA8               	infsnz	strcmp@r& (0+255),f,b
  2261  001578  2BA9               	incf	(strcmp@r+1)& (0+255),f,b
  2262  00157A                     l1638:
  2263  00157A  FFFF               	dw	65535	; assembler added errata NOP
  2264  00157C  C0A8  FFD9         	movff	strcmp@r,fsr2l
  2265  001580  C0A9  FFDA         	movff	strcmp@r+1,fsr2h
  2266  001584  C0A6  FFE1         	movff	strcmp@l,fsr1l
  2267  001588  C0A7  FFE2         	movff	strcmp@l+1,fsr1h
  2268  00158C  50DE               	movf	postinc2,w,c
  2269  00158E  18E6               	xorwf	postinc1,w,c
  2270  001590  A4D8               	btfss	status,2,c
  2271  001592  EFCD  F00A         	goto	u541
  2272  001596  EFD0  F00A         	goto	u540
  2273  00159A                     u541:
  2274  00159A  FFFF               	dw	65535	; assembler added errata NOP
  2275  00159C  EFDE  F00A         	goto	l1642
  2276  0015A0                     u540:
  2277  0015A0  FFFF               	dw	65535	; assembler added errata NOP
  2278  0015A2  C0A6  FFD9         	movff	strcmp@l,fsr2l
  2279  0015A6  C0A7  FFDA         	movff	strcmp@l+1,fsr2h
  2280  0015AA  50DF               	movf	indf2,w,c
  2281  0015AC  A4D8               	btfss	status,2,c
  2282  0015AE  EFDB  F00A         	goto	u551
  2283  0015B2  EFDE  F00A         	goto	u550
  2284  0015B6                     u551:
  2285  0015B6  FFFF               	dw	65535	; assembler added errata NOP
  2286  0015B8  EFB7  F00A         	goto	l1636
  2287  0015BC                     u550:
  2288  0015BC                     l1642:
  2289  0015BC  FFFF               	dw	65535	; assembler added errata NOP
  2290  0015BE  C0A6  FFD9         	movff	strcmp@l,fsr2l
  2291  0015C2  C0A7  FFDA         	movff	strcmp@l+1,fsr2h
  2292  0015C6  50DF               	movf	indf2,w,c
  2293  0015C8  0100               	movlb	0	; () banked
  2294  0015CA  6FAA               	movwf	??_strcmp& (0+255),b
  2295  0015CC  C0A8  FFD9         	movff	strcmp@r,fsr2l
  2296  0015D0  C0A9  FFDA         	movff	strcmp@r+1,fsr2h
  2297  0015D4  50DF               	movf	indf2,w,c
  2298  0015D6  6FAB               	movwf	(??_strcmp+1)& (0+255),b
  2299  0015D8  51AB               	movf	(??_strcmp+1)& (0+255),w,b
  2300  0015DA  5DAA               	subwf	??_strcmp& (0+255),w,b
  2301  0015DC  6FA6               	movwf	?_strcmp& (0+255),b
  2302  0015DE  6BA7               	clrf	(?_strcmp+1)& (0+255),b
  2303  0015E0  A0D8               	btfss	status,0,c
  2304  0015E2  07A7               	decf	(?_strcmp+1)& (0+255),f,b
  2305  0015E4                     
  2306                           ; BSR set to: 0
  2307  0015E4  0012               	return		;funcret
  2308  0015E6  FFFF               	dw	65535	; errata NOP
  2309  0015E8                     __end_of_strcmp:
  2310                           	callstack 0
  2311                           
  2312 ;; *************** function _memset *****************
  2313 ;; Defined at:
  2314 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memset.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;  dest            2    0[BANK0 ] PTR void 
  2317 ;;		 -> gereTouche@nip(5), 
  2318 ;;  c               2    2[BANK0 ] int 
  2319 ;;  n               2    4[BANK0 ] unsigned int 
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;  s               2   10[BANK0 ] PTR unsigned char 
  2322 ;;		 -> gereTouche@nip(5), 
  2323 ;;  k               2    8[BANK0 ] unsigned int 
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  2    0[BANK0 ] PTR void 
  2326 ;; Registers used:
  2327 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2333 ;;      Params:         0       6       0       0       0       0       0
  2334 ;;      Locals:         0       4       0       0       0       0       0
  2335 ;;      Temps:          0       2       0       0       0       0       0
  2336 ;;      Totals:         0      12       0       0       0       0       0
  2337 ;;Total ram usage:       12 bytes
  2338 ;; Hardware stack levels used: 1
  2339 ;; This function calls:
  2340 ;;		Nothing
  2341 ;; This function is called by:
  2342 ;;		_gereTouche
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           	psect	text9
  2347  000CFA                     __ptext9:
  2348                           	callstack 0
  2349  000CFA                     _memset:
  2350                           	callstack 0
  2351  000CFA  FFFF               	dw	65535	; assembler added errata NOP
  2352  000CFC  C0A0  F0AA         	movff	memset@dest,memset@s
  2353  000D00  C0A1  F0AB         	movff	memset@dest+1,memset@s+1
  2354  000D04  0100               	movlb	0	; () banked
  2355  000D06  51A4               	movf	memset@n& (0+255),w,b
  2356  000D08  11A5               	iorwf	(memset@n+1)& (0+255),w,b
  2357  000D0A  A4D8               	btfss	status,2,c
  2358  000D0C  EF8A  F006         	goto	u681
  2359  000D10  EF8D  F006         	goto	u680
  2360  000D14                     u681:
  2361  000D14  FFFF               	dw	65535	; assembler added errata NOP
  2362  000D16  EF94  F006         	goto	l1744
  2363  000D1A                     u680:
  2364  000D1A  FFFF               	dw	65535	; assembler added errata NOP
  2365  000D1C                     
  2366                           ; BSR set to: 0
  2367  000D1C  C0A0  F0A0         	movff	memset@dest,?_memset
  2368  000D20  C0A1  F0A1         	movff	memset@dest+1,?_memset+1
  2369  000D24  EF5D  F007         	goto	l976
  2370  000D28                     l1744:
  2371  000D28  FFFF               	dw	65535	; assembler added errata NOP
  2372                           
  2373                           ; BSR set to: 0
  2374  000D2A  C0AA  FFD9         	movff	memset@s,fsr2l
  2375  000D2E  C0AB  FFDA         	movff	memset@s+1,fsr2h
  2376  000D32  C0A2  FFDF         	movff	memset@c,indf2
  2377  000D36                     
  2378                           ; BSR set to: 0
  2379  000D36  51A4               	movf	memset@n& (0+255),w,b
  2380  000D38  25AA               	addwf	memset@s& (0+255),w,b
  2381  000D3A  6FA6               	movwf	??_memset& (0+255),b
  2382  000D3C  51A5               	movf	(memset@n+1)& (0+255),w,b
  2383  000D3E  21AB               	addwfc	(memset@s+1)& (0+255),w,b
  2384  000D40  6FA7               	movwf	(??_memset+1)& (0+255),b
  2385  000D42  0EFF               	movlw	255
  2386  000D44  25A6               	addwf	??_memset& (0+255),w,b
  2387  000D46  6ED9               	movwf	fsr2l,c
  2388  000D48  0EFF               	movlw	255
  2389  000D4A  21A7               	addwfc	(??_memset+1)& (0+255),w,b
  2390  000D4C  6EDA               	movwf	fsr2h,c
  2391  000D4E  C0A2  FFDF         	movff	memset@c,indf2
  2392  000D52  51A5               	movf	(memset@n+1)& (0+255),w,b
  2393  000D54  E107               	bnz	u691
  2394  000D56  0E03               	movlw	3
  2395  000D58  5DA4               	subwf	memset@n& (0+255),w,b
  2396  000D5A  B0D8               	btfsc	status,0,c
  2397  000D5C  EFB2  F006         	goto	u691
  2398  000D60  EFB5  F006         	goto	u690
  2399  000D64                     u691:
  2400  000D64  FFFF               	dw	65535	; assembler added errata NOP
  2401  000D66  EFBC  F006         	goto	l1752
  2402  000D6A                     u690:
  2403  000D6A  FFFF               	dw	65535	; assembler added errata NOP
  2404  000D6C                     
  2405                           ; BSR set to: 0
  2406  000D6C  C0A0  F0A0         	movff	memset@dest,?_memset
  2407  000D70  C0A1  F0A1         	movff	memset@dest+1,?_memset+1
  2408  000D74  EF5D  F007         	goto	l976
  2409  000D78                     l1752:
  2410  000D78  FFFF               	dw	65535	; assembler added errata NOP
  2411                           
  2412                           ; BSR set to: 0
  2413  000D7A  EE20 F001          	lfsr	2,1
  2414  000D7E  51AA               	movf	memset@s& (0+255),w,b
  2415  000D80  26D9               	addwf	fsr2l,f,c
  2416  000D82  51AB               	movf	(memset@s+1)& (0+255),w,b
  2417  000D84  22DA               	addwfc	fsr2h,f,c
  2418  000D86  C0A2  FFDF         	movff	memset@c,indf2
  2419  000D8A  EE20 F002          	lfsr	2,2
  2420  000D8E  51AA               	movf	memset@s& (0+255),w,b
  2421  000D90  26D9               	addwf	fsr2l,f,c
  2422  000D92  51AB               	movf	(memset@s+1)& (0+255),w,b
  2423  000D94  22DA               	addwfc	fsr2h,f,c
  2424  000D96  C0A2  FFDF         	movff	memset@c,indf2
  2425  000D9A  51A4               	movf	memset@n& (0+255),w,b
  2426  000D9C  25AA               	addwf	memset@s& (0+255),w,b
  2427  000D9E  6FA6               	movwf	??_memset& (0+255),b
  2428  000DA0  51A5               	movf	(memset@n+1)& (0+255),w,b
  2429  000DA2  21AB               	addwfc	(memset@s+1)& (0+255),w,b
  2430  000DA4  6FA7               	movwf	(??_memset+1)& (0+255),b
  2431  000DA6  0EFE               	movlw	254
  2432  000DA8  25A6               	addwf	??_memset& (0+255),w,b
  2433  000DAA  6ED9               	movwf	fsr2l,c
  2434  000DAC  0EFF               	movlw	255
  2435  000DAE  21A7               	addwfc	(??_memset+1)& (0+255),w,b
  2436  000DB0  6EDA               	movwf	fsr2h,c
  2437  000DB2  C0A2  FFDF         	movff	memset@c,indf2
  2438  000DB6  51A4               	movf	memset@n& (0+255),w,b
  2439  000DB8  25AA               	addwf	memset@s& (0+255),w,b
  2440  000DBA  6FA6               	movwf	??_memset& (0+255),b
  2441  000DBC  51A5               	movf	(memset@n+1)& (0+255),w,b
  2442  000DBE  21AB               	addwfc	(memset@s+1)& (0+255),w,b
  2443  000DC0  6FA7               	movwf	(??_memset+1)& (0+255),b
  2444  000DC2  0EFD               	movlw	253
  2445  000DC4  25A6               	addwf	??_memset& (0+255),w,b
  2446  000DC6  6ED9               	movwf	fsr2l,c
  2447  000DC8  0EFF               	movlw	255
  2448  000DCA  21A7               	addwfc	(??_memset+1)& (0+255),w,b
  2449  000DCC  6EDA               	movwf	fsr2h,c
  2450  000DCE  C0A2  FFDF         	movff	memset@c,indf2
  2451  000DD2                     
  2452                           ; BSR set to: 0
  2453  000DD2  51A5               	movf	(memset@n+1)& (0+255),w,b
  2454  000DD4  E107               	bnz	u701
  2455  000DD6  0E07               	movlw	7
  2456  000DD8  5DA4               	subwf	memset@n& (0+255),w,b
  2457  000DDA  B0D8               	btfsc	status,0,c
  2458  000DDC  EFF2  F006         	goto	u701
  2459  000DE0  EFF5  F006         	goto	u700
  2460  000DE4                     u701:
  2461  000DE4  FFFF               	dw	65535	; assembler added errata NOP
  2462  000DE6  EFFC  F006         	goto	l1760
  2463  000DEA                     u700:
  2464  000DEA  FFFF               	dw	65535	; assembler added errata NOP
  2465  000DEC                     
  2466                           ; BSR set to: 0
  2467  000DEC  C0A0  F0A0         	movff	memset@dest,?_memset
  2468  000DF0  C0A1  F0A1         	movff	memset@dest+1,?_memset+1
  2469  000DF4  EF5D  F007         	goto	l976
  2470  000DF8                     l1760:
  2471  000DF8  FFFF               	dw	65535	; assembler added errata NOP
  2472                           
  2473                           ; BSR set to: 0
  2474  000DFA  EE20 F003          	lfsr	2,3
  2475  000DFE  51AA               	movf	memset@s& (0+255),w,b
  2476  000E00  26D9               	addwf	fsr2l,f,c
  2477  000E02  51AB               	movf	(memset@s+1)& (0+255),w,b
  2478  000E04  22DA               	addwfc	fsr2h,f,c
  2479  000E06  C0A2  FFDF         	movff	memset@c,indf2
  2480  000E0A  51A4               	movf	memset@n& (0+255),w,b
  2481  000E0C  25AA               	addwf	memset@s& (0+255),w,b
  2482  000E0E  6FA6               	movwf	??_memset& (0+255),b
  2483  000E10  51A5               	movf	(memset@n+1)& (0+255),w,b
  2484  000E12  21AB               	addwfc	(memset@s+1)& (0+255),w,b
  2485  000E14  6FA7               	movwf	(??_memset+1)& (0+255),b
  2486  000E16  0EFC               	movlw	252
  2487  000E18  25A6               	addwf	??_memset& (0+255),w,b
  2488  000E1A  6ED9               	movwf	fsr2l,c
  2489  000E1C  0EFF               	movlw	255
  2490  000E1E  21A7               	addwfc	(??_memset+1)& (0+255),w,b
  2491  000E20  6EDA               	movwf	fsr2h,c
  2492  000E22  C0A2  FFDF         	movff	memset@c,indf2
  2493  000E26                     
  2494                           ; BSR set to: 0
  2495  000E26  51A5               	movf	(memset@n+1)& (0+255),w,b
  2496  000E28  E107               	bnz	u711
  2497  000E2A  0E09               	movlw	9
  2498  000E2C  5DA4               	subwf	memset@n& (0+255),w,b
  2499  000E2E  B0D8               	btfsc	status,0,c
  2500  000E30  EF1C  F007         	goto	u711
  2501  000E34  EF1F  F007         	goto	u710
  2502  000E38                     u711:
  2503  000E38  FFFF               	dw	65535	; assembler added errata NOP
  2504  000E3A  EF26  F007         	goto	l1768
  2505  000E3E                     u710:
  2506  000E3E  FFFF               	dw	65535	; assembler added errata NOP
  2507  000E40                     
  2508                           ; BSR set to: 0
  2509  000E40  C0A0  F0A0         	movff	memset@dest,?_memset
  2510  000E44  C0A1  F0A1         	movff	memset@dest+1,?_memset+1
  2511  000E48  EF5D  F007         	goto	l976
  2512  000E4C                     l1768:
  2513  000E4C  FFFF               	dw	65535	; assembler added errata NOP
  2514                           
  2515                           ; BSR set to: 0
  2516  000E4E  C0AA  F0A6         	movff	memset@s,??_memset
  2517  000E52  C0AB  F0A7         	movff	memset@s+1,??_memset+1
  2518  000E56  1FA6               	comf	??_memset& (0+255),f,b
  2519  000E58  1FA7               	comf	(??_memset+1)& (0+255),f,b
  2520  000E5A  4BA6               	infsnz	??_memset& (0+255),f,b
  2521  000E5C  2BA7               	incf	(??_memset+1)& (0+255),f,b
  2522  000E5E  0E03               	movlw	3
  2523  000E60  15A6               	andwf	??_memset& (0+255),w,b
  2524  000E62  6FA8               	movwf	memset@k& (0+255),b
  2525  000E64  6BA9               	clrf	(memset@k+1)& (0+255),b
  2526  000E66  51A8               	movf	memset@k& (0+255),w,b
  2527  000E68  27AA               	addwf	memset@s& (0+255),f,b
  2528  000E6A  51A9               	movf	(memset@k+1)& (0+255),w,b
  2529  000E6C  23AB               	addwfc	(memset@s+1)& (0+255),f,b
  2530  000E6E  51A8               	movf	memset@k& (0+255),w,b
  2531  000E70  5FA4               	subwf	memset@n& (0+255),f,b
  2532  000E72  51A9               	movf	(memset@k+1)& (0+255),w,b
  2533  000E74  5BA5               	subwfb	(memset@n+1)& (0+255),f,b
  2534  000E76  0EFC               	movlw	252
  2535  000E78  17A4               	andwf	memset@n& (0+255),f,b
  2536  000E7A  0EFF               	movlw	255
  2537  000E7C  17A5               	andwf	(memset@n+1)& (0+255),f,b
  2538  000E7E  EF4D  F007         	goto	l1776
  2539  000E82                     l1770:
  2540  000E82  FFFF               	dw	65535	; assembler added errata NOP
  2541                           
  2542                           ; BSR set to: 0
  2543  000E84  C0AA  FFD9         	movff	memset@s,fsr2l
  2544  000E88  C0AB  FFDA         	movff	memset@s+1,fsr2h
  2545  000E8C  C0A2  FFDF         	movff	memset@c,indf2
  2546  000E90                     
  2547                           ; BSR set to: 0
  2548  000E90  07A4               	decf	memset@n& (0+255),f,b
  2549  000E92  A0D8               	btfss	status,0,c
  2550  000E94  07A5               	decf	(memset@n+1)& (0+255),f,b
  2551  000E96                     
  2552                           ; BSR set to: 0
  2553  000E96  4BAA               	infsnz	memset@s& (0+255),f,b
  2554  000E98  2BAB               	incf	(memset@s+1)& (0+255),f,b
  2555  000E9A                     l1776:
  2556  000E9A  FFFF               	dw	65535	; assembler added errata NOP
  2557                           
  2558                           ; BSR set to: 0
  2559  000E9C  51A4               	movf	memset@n& (0+255),w,b
  2560  000E9E  11A5               	iorwf	(memset@n+1)& (0+255),w,b
  2561  000EA0  A4D8               	btfss	status,2,c
  2562  000EA2  EF55  F007         	goto	u721
  2563  000EA6  EF58  F007         	goto	u720
  2564  000EAA                     u721:
  2565  000EAA  FFFF               	dw	65535	; assembler added errata NOP
  2566  000EAC  EF41  F007         	goto	l1770
  2567  000EB0                     u720:
  2568  000EB0  FFFF               	dw	65535	; assembler added errata NOP
  2569  000EB2                     
  2570                           ; BSR set to: 0
  2571  000EB2  C0A0  F0A0         	movff	memset@dest,?_memset
  2572  000EB6  C0A1  F0A1         	movff	memset@dest+1,?_memset+1
  2573  000EBA                     l976:
  2574  000EBA  FFFF               	dw	65535	; assembler added errata NOP
  2575                           
  2576                           ; BSR set to: 0
  2577  000EBC  0012               	return		;funcret
  2578  000EBE  FFFF               	dw	65535	; errata NOP
  2579  000EC0                     __end_of_memset:
  2580                           	callstack 0
  2581                           
  2582 ;; *************** function _kbhit *****************
  2583 ;; Defined at:
  2584 ;;		line 126 in file "serie_458.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;		None
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;		None
  2589 ;; Return value:  Size  Location     Type
  2590 ;;		None               void
  2591 ;; Registers used:
  2592 ;;		status,0
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2598 ;;      Params:         0       0       0       0       0       0       0
  2599 ;;      Locals:         0       0       0       0       0       0       0
  2600 ;;      Temps:          0       0       0       0       0       0       0
  2601 ;;      Totals:         0       0       0       0       0       0       0
  2602 ;;Total ram usage:        0 bytes
  2603 ;; Hardware stack levels used: 1
  2604 ;; This function calls:
  2605 ;;		Nothing
  2606 ;; This function is called by:
  2607 ;;		_main
  2608 ;;		_gereTouche
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           	psect	text10
  2613  001A28                     __ptext10:
  2614                           	callstack 0
  2615  001A28                     _kbhit:
  2616                           	callstack 0
  2617  001A28  FFFF               	dw	65535	; assembler added errata NOP
  2618  001A2A                     
  2619                           ;serie_458.c: 128:     return RCIF;
  2620  001A2A  BA9E               	btfsc	158,5,c	;volatile
  2621  001A2C  EF1A  F00D         	goto	u171
  2622  001A30  EF1D  F00D         	goto	u170
  2623  001A34                     u171:
  2624  001A34  FFFF               	dw	65535	; assembler added errata NOP
  2625  001A36  EF21  F00D         	goto	l1230
  2626  001A3A                     u170:
  2627  001A3A  FFFF               	dw	65535	; assembler added errata NOP
  2628  001A3C  90D8               	bcf	status,0,c
  2629  001A3E  EF23  F00D         	goto	l259
  2630  001A42                     l1230:
  2631  001A42  FFFF               	dw	65535	; assembler added errata NOP
  2632  001A44  80D8               	bsf	status,0,c
  2633  001A46                     l259:
  2634  001A46  FFFF               	dw	65535	; assembler added errata NOP
  2635  001A48  0012               	return		;funcret
  2636  001A4A  FFFF               	dw	65535	; errata NOP
  2637  001A4C                     __end_of_kbhit:
  2638                           	callstack 0
  2639                           
  2640 ;; *************** function _getch *****************
  2641 ;; Defined at:
  2642 ;;		line 92 in file "serie_458.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;		None
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;  c               1    0[BANK0 ] unsigned char 
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  1    wreg      unsigned char 
  2649 ;; Registers used:
  2650 ;;		wreg, status,2
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2656 ;;      Params:         0       0       0       0       0       0       0
  2657 ;;      Locals:         0       1       0       0       0       0       0
  2658 ;;      Temps:          0       0       0       0       0       0       0
  2659 ;;      Totals:         0       1       0       0       0       0       0
  2660 ;;Total ram usage:        1 bytes
  2661 ;; Hardware stack levels used: 1
  2662 ;; This function calls:
  2663 ;;		Nothing
  2664 ;; This function is called by:
  2665 ;;		_gereTouche
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669                           	psect	text11
  2670  001A4C                     __ptext11:
  2671                           	callstack 0
  2672  001A4C                     _getch:
  2673                           	callstack 0
  2674  001A4C  FFFF               	dw	65535	; assembler added errata NOP
  2675  001A4E                     l240:
  2676  001A4E  FFFF               	dw	65535	; assembler added errata NOP
  2677                           
  2678                           ;serie_458.c: 96:     while (!RCIF)
  2679  001A50  AA9E               	btfss	158,5,c	;volatile
  2680  001A52  EF2D  F00D         	goto	u181
  2681  001A56  EF30  F00D         	goto	u180
  2682  001A5A                     u181:
  2683  001A5A  FFFF               	dw	65535	; assembler added errata NOP
  2684  001A5C  EF27  F00D         	goto	l240
  2685  001A60                     u180:
  2686  001A60  FFFF               	dw	65535	; assembler added errata NOP
  2687  001A62                     
  2688                           ;serie_458.c: 98:     c = RCREG;
  2689  001A62  CFAE F0A0          	movff	4014,getch@c	;volatile
  2690  001A66                     
  2691                           ;serie_458.c: 100:     return c;
  2692  001A66  0100               	movlb	0	; force () banked
  2693  001A68  51A0               	movf	getch@c& (0+255),w,b
  2694  001A6A                     
  2695                           ; BSR set to: 0
  2696  001A6A  0012               	return		;funcret
  2697  001A6C  FFFF               	dw	65535	; errata NOP
  2698  001A6E                     __end_of_getch:
  2699                           	callstack 0
  2700                           
  2701 ;; *************** function _atoi *****************
  2702 ;; Defined at:
  2703 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;  s               2    7[BANK0 ] PTR const unsigned char 
  2706 ;;		 -> gereTouche@touche(1), 
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;  n               2   15[BANK0 ] int 
  2709 ;;  neg             2   13[BANK0 ] int 
  2710 ;; Return value:  Size  Location     Type
  2711 ;;                  2    7[BANK0 ] int 
  2712 ;; Registers used:
  2713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2714 ;; Tracked objects:
  2715 ;;		On entry : 0/0
  2716 ;;		On exit  : 0/0
  2717 ;;		Unchanged: 0/0
  2718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2719 ;;      Params:         0       2       0       0       0       0       0
  2720 ;;      Locals:         0       4       0       0       0       0       0
  2721 ;;      Temps:          0       4       0       0       0       0       0
  2722 ;;      Totals:         0      10       0       0       0       0       0
  2723 ;;Total ram usage:       10 bytes
  2724 ;; Hardware stack levels used: 1
  2725 ;; Hardware stack levels required when called: 1
  2726 ;; This function calls:
  2727 ;;		___wmul
  2728 ;;		_isdigit
  2729 ;;		_isspace
  2730 ;; This function is called by:
  2731 ;;		_gereTouche
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text12
  2736  000EC0                     __ptext12:
  2737                           	callstack 0
  2738  000EC0                     _atoi:
  2739                           	callstack 0
  2740  000EC0  FFFF               	dw	65535	; assembler added errata NOP
  2741  000EC2  0E00               	movlw	0
  2742  000EC4  0100               	movlb	0	; () banked
  2743  000EC6  6FB0               	movwf	(atoi@n+1)& (0+255),b
  2744  000EC8  0E00               	movlw	0
  2745  000ECA  6FAF               	movwf	atoi@n& (0+255),b
  2746  000ECC  0E00               	movlw	0
  2747  000ECE  6FAE               	movwf	(atoi@neg+1)& (0+255),b
  2748  000ED0  0E00               	movlw	0
  2749  000ED2  6FAD               	movwf	atoi@neg& (0+255),b
  2750  000ED4  EF6F  F007         	goto	l1700
  2751  000ED8                     l1696:
  2752  000ED8  FFFF               	dw	65535	; assembler added errata NOP
  2753                           
  2754                           ; BSR set to: 0
  2755  000EDA  4BA7               	infsnz	atoi@s& (0+255),f,b
  2756  000EDC  2BA8               	incf	(atoi@s+1)& (0+255),f,b
  2757  000EDE                     l1700:
  2758  000EDE  FFFF               	dw	65535	; assembler added errata NOP
  2759                           
  2760                           ; BSR set to: 0
  2761  000EE0  C0A7  FFD9         	movff	atoi@s,fsr2l
  2762  000EE4  C0A8  FFDA         	movff	atoi@s+1,fsr2h
  2763  000EE8  0E20               	movlw	32
  2764  000EEA  18DE               	xorwf	postinc2,w,c
  2765  000EEC  B4D8               	btfsc	status,2,c
  2766  000EEE  EF7B  F007         	goto	u631
  2767  000EF2  EF7E  F007         	goto	u630
  2768  000EF6                     u631:
  2769  000EF6  FFFF               	dw	65535	; assembler added errata NOP
  2770  000EF8  EF6C  F007         	goto	l1696
  2771  000EFC                     u630:
  2772  000EFC  FFFF               	dw	65535	; assembler added errata NOP
  2773  000EFE                     
  2774                           ; BSR set to: 0
  2775  000EFE  0EF7               	movlw	247
  2776  000F00  6FA9               	movwf	??_atoi& (0+255),b
  2777  000F02  0EFF               	movlw	255
  2778  000F04  6FAA               	movwf	(??_atoi+1)& (0+255),b
  2779  000F06  C0A7  FFD9         	movff	atoi@s,fsr2l
  2780  000F0A  C0A8  FFDA         	movff	atoi@s+1,fsr2h
  2781  000F0E  50DF               	movf	indf2,w,c
  2782  000F10  6FAB               	movwf	(??_atoi+2)& (0+255),b
  2783  000F12  6BAC               	clrf	(??_atoi+3)& (0+255),b
  2784  000F14  51A9               	movf	??_atoi& (0+255),w,b
  2785  000F16  27AB               	addwf	(??_atoi+2)& (0+255),f,b
  2786  000F18  51AA               	movf	(??_atoi+1)& (0+255),w,b
  2787  000F1A  23AC               	addwfc	(??_atoi+3)& (0+255),f,b
  2788  000F1C  51AC               	movf	(??_atoi+3)& (0+255),w,b
  2789  000F1E  E10A               	bnz	u640
  2790  000F20  0E05               	movlw	5
  2791  000F22  5DAB               	subwf	(??_atoi+2)& (0+255),w,b
  2792  000F24  A0D8               	btfss	status,0,c
  2793  000F26  EF97  F007         	goto	u641
  2794  000F2A  EF9A  F007         	goto	u640
  2795  000F2E                     u641:
  2796  000F2E  FFFF               	dw	65535	; assembler added errata NOP
  2797  000F30  EF6C  F007         	goto	l1696
  2798  000F34                     u640:
  2799  000F34  FFFF               	dw	65535	; assembler added errata NOP
  2800  000F36  EFA7  F007         	goto	l1708
  2801  000F3A                     l1704:
  2802  000F3A  FFFF               	dw	65535	; assembler added errata NOP
  2803                           
  2804                           ; BSR set to: 0
  2805  000F3C  0E00               	movlw	0
  2806  000F3E  6FAE               	movwf	(atoi@neg+1)& (0+255),b
  2807  000F40  0E01               	movlw	1
  2808  000F42  6FAD               	movwf	atoi@neg& (0+255),b
  2809  000F44                     l1706:
  2810  000F44  FFFF               	dw	65535	; assembler added errata NOP
  2811                           
  2812                           ; BSR set to: 0
  2813  000F46  4BA7               	infsnz	atoi@s& (0+255),f,b
  2814  000F48  2BA8               	incf	(atoi@s+1)& (0+255),f,b
  2815  000F4A  EFE0  F007         	goto	l1716
  2816  000F4E                     l1708:
  2817  000F4E  FFFF               	dw	65535	; assembler added errata NOP
  2818                           
  2819                           ; BSR set to: 0
  2820  000F50  C0A7  FFD9         	movff	atoi@s,fsr2l
  2821  000F54  C0A8  FFDA         	movff	atoi@s+1,fsr2h
  2822  000F58  50DF               	movf	indf2,w,c
  2823  000F5A  6FA9               	movwf	??_atoi& (0+255),b
  2824  000F5C  6BAA               	clrf	(??_atoi+1)& (0+255),b
  2825                           
  2826                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2827                           ; Switch size 1, requested type "simple"
  2828                           ; Number of cases is 1, Range of values is 0 to 0
  2829                           ; switch strategies available:
  2830                           ; Name         Instructions Cycles
  2831                           ; simple_byte            4     3 (average)
  2832                           ;	Chosen strategy is simple_byte
  2833  000F5E  51AA               	movf	(??_atoi+1)& (0+255),w,b
  2834  000F60  0A00               	xorlw	0	; case 0
  2835  000F62  B4D8               	btfsc	status,2,c
  2836  000F64  EFB6  F007         	goto	l2022
  2837  000F68  EFE0  F007         	goto	l1716
  2838  000F6C                     l2022:
  2839  000F6C  FFFF               	dw	65535	; assembler added errata NOP
  2840                           
  2841                           ; BSR set to: 0
  2842                           ; Switch size 1, requested type "simple"
  2843                           ; Number of cases is 2, Range of values is 43 to 45
  2844                           ; switch strategies available:
  2845                           ; Name         Instructions Cycles
  2846                           ; simple_byte            7     4 (average)
  2847                           ;	Chosen strategy is simple_byte
  2848  000F6E  51A9               	movf	??_atoi& (0+255),w,b
  2849  000F70  0A2B               	xorlw	43	; case 43
  2850  000F72  B4D8               	btfsc	status,2,c
  2851  000F74  EFA2  F007         	goto	l1706
  2852  000F78  0A06               	xorlw	6	; case 45
  2853  000F7A  B4D8               	btfsc	status,2,c
  2854  000F7C  EF9D  F007         	goto	l1704
  2855  000F80  EFE0  F007         	goto	l1716
  2856  000F84                     l1710:
  2857  000F84  FFFF               	dw	65535	; assembler added errata NOP
  2858                           
  2859                           ; BSR set to: 0
  2860  000F86  C0AF  F0A0         	movff	atoi@n,___wmul@multiplier
  2861  000F8A  C0B0  F0A1         	movff	atoi@n+1,___wmul@multiplier+1
  2862  000F8E  0E00               	movlw	0
  2863  000F90  6FA3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2864  000F92  0E0A               	movlw	10
  2865  000F94  6FA2               	movwf	___wmul@multiplicand& (0+255),b
  2866  000F96  ECFE  F00C         	call	___wmul	;wreg free
  2867  000F9A  C0A7  FFD9         	movff	atoi@s,fsr2l
  2868  000F9E  C0A8  FFDA         	movff	atoi@s+1,fsr2h
  2869  000FA2  50DF               	movf	indf2,w,c
  2870  000FA4  0100               	movlb	0	; () banked
  2871  000FA6  6FA9               	movwf	??_atoi& (0+255),b
  2872  000FA8  51A9               	movf	??_atoi& (0+255),w,b
  2873  000FAA  5FA0               	subwf	?___wmul& (0+255),f,b
  2874  000FAC  0E00               	movlw	0
  2875  000FAE  5BA1               	subwfb	(?___wmul+1)& (0+255),f,b
  2876  000FB0  0E30               	movlw	48
  2877  000FB2  25A0               	addwf	?___wmul& (0+255),w,b
  2878  000FB4  6FAF               	movwf	atoi@n& (0+255),b
  2879  000FB6  0E00               	movlw	0
  2880  000FB8  21A1               	addwfc	(?___wmul+1)& (0+255),w,b
  2881  000FBA  6FB0               	movwf	(atoi@n+1)& (0+255),b
  2882  000FBC                     
  2883                           ; BSR set to: 0
  2884  000FBC  4BA7               	infsnz	atoi@s& (0+255),f,b
  2885  000FBE  2BA8               	incf	(atoi@s+1)& (0+255),f,b
  2886  000FC0                     l1716:
  2887  000FC0  FFFF               	dw	65535	; assembler added errata NOP
  2888                           
  2889                           ; BSR set to: 0
  2890  000FC2  0ED0               	movlw	208
  2891  000FC4  6FA9               	movwf	??_atoi& (0+255),b
  2892  000FC6  0EFF               	movlw	255
  2893  000FC8  6FAA               	movwf	(??_atoi+1)& (0+255),b
  2894  000FCA  C0A7  FFD9         	movff	atoi@s,fsr2l
  2895  000FCE  C0A8  FFDA         	movff	atoi@s+1,fsr2h
  2896  000FD2  50DF               	movf	indf2,w,c
  2897  000FD4  6FAB               	movwf	(??_atoi+2)& (0+255),b
  2898  000FD6  6BAC               	clrf	(??_atoi+3)& (0+255),b
  2899  000FD8  51A9               	movf	??_atoi& (0+255),w,b
  2900  000FDA  27AB               	addwf	(??_atoi+2)& (0+255),f,b
  2901  000FDC  51AA               	movf	(??_atoi+1)& (0+255),w,b
  2902  000FDE  23AC               	addwfc	(??_atoi+3)& (0+255),f,b
  2903  000FE0  51AC               	movf	(??_atoi+3)& (0+255),w,b
  2904  000FE2  E10A               	bnz	u650
  2905  000FE4  0E0A               	movlw	10
  2906  000FE6  5DAB               	subwf	(??_atoi+2)& (0+255),w,b
  2907  000FE8  A0D8               	btfss	status,0,c
  2908  000FEA  EFF9  F007         	goto	u651
  2909  000FEE  EFFC  F007         	goto	u650
  2910  000FF2                     u651:
  2911  000FF2  FFFF               	dw	65535	; assembler added errata NOP
  2912  000FF4  EFC2  F007         	goto	l1710
  2913  000FF8                     u650:
  2914  000FF8  FFFF               	dw	65535	; assembler added errata NOP
  2915  000FFA                     
  2916                           ; BSR set to: 0
  2917  000FFA  51AD               	movf	atoi@neg& (0+255),w,b
  2918  000FFC  11AE               	iorwf	(atoi@neg+1)& (0+255),w,b
  2919  000FFE  A4D8               	btfss	status,2,c
  2920  001000  EF04  F008         	goto	u661
  2921  001004  EF07  F008         	goto	u660
  2922  001008                     u661:
  2923  001008  FFFF               	dw	65535	; assembler added errata NOP
  2924  00100A  EF16  F008         	goto	l955
  2925  00100E                     u660:
  2926  00100E  FFFF               	dw	65535	; assembler added errata NOP
  2927  001010                     
  2928                           ; BSR set to: 0
  2929  001010  C0AF  F0A9         	movff	atoi@n,??_atoi
  2930  001014  C0B0  F0AA         	movff	atoi@n+1,??_atoi+1
  2931  001018  1FA9               	comf	??_atoi& (0+255),f,b
  2932  00101A  1FAA               	comf	(??_atoi+1)& (0+255),f,b
  2933  00101C  4BA9               	infsnz	??_atoi& (0+255),f,b
  2934  00101E  2BAA               	incf	(??_atoi+1)& (0+255),f,b
  2935  001020  C0A9  F0A7         	movff	??_atoi,?_atoi
  2936  001024  C0AA  F0A8         	movff	??_atoi+1,?_atoi+1
  2937  001028  EF1B  F008         	goto	l958
  2938  00102C                     l955:
  2939  00102C  FFFF               	dw	65535	; assembler added errata NOP
  2940                           
  2941                           ; BSR set to: 0
  2942  00102E  C0AF  F0A7         	movff	atoi@n,?_atoi
  2943  001032  C0B0  F0A8         	movff	atoi@n+1,?_atoi+1
  2944  001036                     l958:
  2945  001036  FFFF               	dw	65535	; assembler added errata NOP
  2946                           
  2947                           ; BSR set to: 0
  2948  001038  0012               	return		;funcret
  2949  00103A  FFFF               	dw	65535	; errata NOP
  2950  00103C                     __end_of_atoi:
  2951                           	callstack 0
  2952                           
  2953 ;; *************** function _isspace *****************
  2954 ;; Defined at:
  2955 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;  c               2    0[BANK0 ] int 
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  2    0[BANK0 ] int 
  2962 ;; Registers used:
  2963 ;;		wreg, status,2, status,0
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2969 ;;      Params:         0       2       0       0       0       0       0
  2970 ;;      Locals:         0       1       0       0       0       0       0
  2971 ;;      Temps:          0       4       0       0       0       0       0
  2972 ;;      Totals:         0       7       0       0       0       0       0
  2973 ;;Total ram usage:        7 bytes
  2974 ;; Hardware stack levels used: 1
  2975 ;; This function calls:
  2976 ;;		Nothing
  2977 ;; This function is called by:
  2978 ;;		_atoi
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           	psect	text13
  2983  001836                     __ptext13:
  2984                           	callstack 0
  2985  001836                     _isspace:
  2986                           	callstack 28
  2987  001836  FFFF               	dw	65535	; assembler added errata NOP
  2988  001838  0E01               	movlw	1
  2989  00183A  0100               	movlb	0	; () banked
  2990  00183C  6FA6               	movwf	_isspace$1206& (0+255),b
  2991  00183E                     
  2992                           ; BSR set to: 0
  2993  00183E  0E20               	movlw	32
  2994  001840  19A0               	xorwf	isspace@c& (0+255),w,b
  2995  001842  11A1               	iorwf	(isspace@c+1)& (0+255),w,b
  2996  001844  B4D8               	btfsc	status,2,c
  2997  001846  EF27  F00C         	goto	u561
  2998  00184A  EF2A  F00C         	goto	u560
  2999  00184E                     u561:
  3000  00184E  FFFF               	dw	65535	; assembler added errata NOP
  3001  001850  EF46  F00C         	goto	l1660
  3002  001854                     u560:
  3003  001854  FFFF               	dw	65535	; assembler added errata NOP
  3004  001856                     
  3005                           ; BSR set to: 0
  3006  001856  0EF7               	movlw	247
  3007  001858  6FA2               	movwf	??_isspace& (0+255),b
  3008  00185A  0EFF               	movlw	255
  3009  00185C  6FA3               	movwf	(??_isspace+1)& (0+255),b
  3010  00185E  C0A0  F0A4         	movff	isspace@c,??_isspace+2
  3011  001862  C0A1  F0A5         	movff	isspace@c+1,??_isspace+3
  3012  001866  51A2               	movf	??_isspace& (0+255),w,b
  3013  001868  27A4               	addwf	(??_isspace+2)& (0+255),f,b
  3014  00186A  51A3               	movf	(??_isspace+1)& (0+255),w,b
  3015  00186C  23A5               	addwfc	(??_isspace+3)& (0+255),f,b
  3016  00186E  51A5               	movf	(??_isspace+3)& (0+255),w,b
  3017  001870  E10A               	bnz	u570
  3018  001872  0E05               	movlw	5
  3019  001874  5DA4               	subwf	(??_isspace+2)& (0+255),w,b
  3020  001876  A0D8               	btfss	status,0,c
  3021  001878  EF40  F00C         	goto	u571
  3022  00187C  EF43  F00C         	goto	u570
  3023  001880                     u571:
  3024  001880  FFFF               	dw	65535	; assembler added errata NOP
  3025  001882  EF46  F00C         	goto	l1660
  3026  001886                     u570:
  3027  001886  FFFF               	dw	65535	; assembler added errata NOP
  3028  001888                     
  3029                           ; BSR set to: 0
  3030  001888  0E00               	movlw	0
  3031  00188A  6FA6               	movwf	_isspace$1206& (0+255),b
  3032  00188C                     l1660:
  3033  00188C  FFFF               	dw	65535	; assembler added errata NOP
  3034                           
  3035                           ; BSR set to: 0
  3036  00188E  C0A6  F0A0         	movff	_isspace$1206,?_isspace
  3037  001892  6BA1               	clrf	(?_isspace+1)& (0+255),b
  3038  001894                     
  3039                           ; BSR set to: 0
  3040  001894  0012               	return		;funcret
  3041  001896  FFFF               	dw	65535	; errata NOP
  3042  001898                     __end_of_isspace:
  3043                           	callstack 0
  3044                           
  3045 ;; *************** function _isdigit *****************
  3046 ;; Defined at:
  3047 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  c               2    0[BANK0 ] int 
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;		None
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  2    0[BANK0 ] int 
  3054 ;; Registers used:
  3055 ;;		wreg, status,2, status,0
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3061 ;;      Params:         0       2       0       0       0       0       0
  3062 ;;      Locals:         0       0       0       0       0       0       0
  3063 ;;      Temps:          0       4       0       0       0       0       0
  3064 ;;      Totals:         0       6       0       0       0       0       0
  3065 ;;Total ram usage:        6 bytes
  3066 ;; Hardware stack levels used: 1
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		_atoi
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           	psect	text14
  3075  001946                     __ptext14:
  3076                           	callstack 0
  3077  001946                     _isdigit:
  3078                           	callstack 28
  3079  001946  FFFF               	dw	65535	; assembler added errata NOP
  3080  001948  0ED0               	movlw	208
  3081  00194A  0100               	movlb	0	; () banked
  3082  00194C  6FA2               	movwf	??_isdigit& (0+255),b
  3083  00194E  0EFF               	movlw	255
  3084  001950  6FA3               	movwf	(??_isdigit+1)& (0+255),b
  3085  001952  C0A0  F0A4         	movff	isdigit@c,??_isdigit+2
  3086  001956  C0A1  F0A5         	movff	isdigit@c+1,??_isdigit+3
  3087  00195A  51A2               	movf	??_isdigit& (0+255),w,b
  3088  00195C  27A4               	addwf	(??_isdigit+2)& (0+255),f,b
  3089  00195E  51A3               	movf	(??_isdigit+1)& (0+255),w,b
  3090  001960  23A5               	addwfc	(??_isdigit+3)& (0+255),f,b
  3091  001962  51A5               	movf	(??_isdigit+3)& (0+255),w,b
  3092  001964  E10B               	bnz	u580
  3093  001966  0E0A               	movlw	10
  3094  001968  5DA4               	subwf	(??_isdigit+2)& (0+255),w,b
  3095  00196A  A0D8               	btfss	status,0,c
  3096  00196C  EFBA  F00C         	goto	u581
  3097  001970  EFBE  F00C         	goto	u580
  3098  001974                     u581:
  3099  001974  FFFF               	dw	65535	; assembler added errata NOP
  3100  001976  0E01               	movlw	1
  3101  001978  EFC0  F00C         	goto	u590
  3102  00197C                     u580:
  3103  00197C  FFFF               	dw	65535	; assembler added errata NOP
  3104  00197E  0E00               	movlw	0
  3105  001980                     u590:
  3106  001980  FFFF               	dw	65535	; assembler added errata NOP
  3107  001982  6FA0               	movwf	?_isdigit& (0+255),b
  3108  001984  6BA1               	clrf	(?_isdigit+1)& (0+255),b
  3109  001986                     
  3110                           ; BSR set to: 0
  3111  001986  0012               	return		;funcret
  3112  001988  FFFF               	dw	65535	; errata NOP
  3113  00198A                     __end_of_isdigit:
  3114                           	callstack 0
  3115                           
  3116 ;; *************** function _flashDEL *****************
  3117 ;; Defined at:
  3118 ;;		line 263 in file "main.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;		None
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;  i               2    2[BANK0 ] int 
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  1    wreg      void 
  3125 ;; Registers used:
  3126 ;;		wreg, status,2, status,0
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3132 ;;      Params:         0       0       0       0       0       0       0
  3133 ;;      Locals:         0       2       0       0       0       0       0
  3134 ;;      Temps:          0       2       0       0       0       0       0
  3135 ;;      Totals:         0       4       0       0       0       0       0
  3136 ;;Total ram usage:        4 bytes
  3137 ;; Hardware stack levels used: 1
  3138 ;; This function calls:
  3139 ;;		Nothing
  3140 ;; This function is called by:
  3141 ;;		_main
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           	psect	text15
  3146  001392                     __ptext15:
  3147                           	callstack 0
  3148  001392                     _flashDEL:
  3149                           	callstack 0
  3150  001392  FFFF               	dw	65535	; assembler added errata NOP
  3151  001394                     
  3152                           ;main.c: 266:  for(int i = 0; i < 3; i++)
  3153  001394  0E00               	movlw	0
  3154  001396  0100               	movlb	0	; force () banked
  3155  001398  6FA3               	movwf	(flashDEL@i+1)& (0+255),b
  3156  00139A  0E00               	movlw	0
  3157  00139C  6FA2               	movwf	flashDEL@i& (0+255),b
  3158  00139E                     
  3159                           ; BSR set to: 0
  3160  00139E  0100               	movlb	0	; force () banked
  3161  0013A0  BFA3               	btfsc	(flashDEL@i+1)& (0+255),7,b
  3162  0013A2  EFDC  F009         	goto	u301
  3163  0013A6  51A3               	movf	(flashDEL@i+1)& (0+255),w,b
  3164  0013A8  E10A               	bnz	u300
  3165  0013AA  0E03               	movlw	3
  3166  0013AC  5DA2               	subwf	flashDEL@i& (0+255),w,b
  3167  0013AE  A0D8               	btfss	status,0,c
  3168  0013B0  EFDC  F009         	goto	u301
  3169  0013B4  EFDF  F009         	goto	u300
  3170  0013B8                     u301:
  3171  0013B8  FFFF               	dw	65535	; assembler added errata NOP
  3172  0013BA  EFE2  F009         	goto	l201
  3173  0013BE                     u300:
  3174  0013BE  FFFF               	dw	65535	; assembler added errata NOP
  3175  0013C0  EF17  F00A         	goto	l203
  3176  0013C4                     l201:
  3177  0013C4  FFFF               	dw	65535	; assembler added errata NOP
  3178                           
  3179                           ; BSR set to: 0
  3180                           ;main.c: 267:  {;main.c: 269:   PORTDbits.RD7 = 1;
  3181  0013C6  8E83               	bsf	131,7,c	;volatile
  3182                           
  3183                           ;main.c: 270:   PORTCbits.RC0 = 1;
  3184  0013C8  8082               	bsf	130,0,c	;volatile
  3185  0013CA                     
  3186                           ; BSR set to: 0
  3187                           ;main.c: 271:   _delay((unsigned long)((500)*(16000000/4000.0)));
  3188  0013CA  0E08               	movlw	8
  3189  0013CC  0100               	movlb	0	; force () banked
  3190  0013CE  6FA1               	movwf	(??_flashDEL+1)& (0+255),b
  3191  0013D0  0E9E               	movlw	158
  3192  0013D2  6FA0               	movwf	??_flashDEL& (0+255),b
  3193  0013D4  0E4B               	movlw	75
  3194  0013D6                     u977:
  3195  0013D6  FFFF               	dw	65535	; errata NOP
  3196  0013D8  2EE8               	decfsz	wreg,f,c
  3197  0013DA  D7FD               	bra	u977
  3198  0013DC  2FA0               	decfsz	??_flashDEL& (0+255),f,b
  3199  0013DE  D7FB               	bra	u977
  3200  0013E0  2FA1               	decfsz	(??_flashDEL+1)& (0+255),f,b
  3201  0013E2  D7F9               	bra	u977
  3202  0013E4  D000               	nop2	
  3203  0013E6  F000               	nop	
  3204  0013E8                     
  3205                           ;main.c: 273:   PORTDbits.RD7 = 0;
  3206  0013E8  9E83               	bcf	131,7,c	;volatile
  3207  0013EA                     
  3208                           ;main.c: 274:   PORTCbits.RC0 = 0;
  3209  0013EA  9082               	bcf	130,0,c	;volatile
  3210                           
  3211                           ;main.c: 275:   _delay((unsigned long)((500)*(16000000/4000.0)));
  3212  0013EC  0E08               	movlw	8
  3213  0013EE  0100               	movlb	0	; force () banked
  3214  0013F0  6FA1               	movwf	(??_flashDEL+1)& (0+255),b
  3215  0013F2  0E9E               	movlw	158
  3216  0013F4  6FA0               	movwf	??_flashDEL& (0+255),b
  3217  0013F6  0E4B               	movlw	75
  3218  0013F8                     u987:
  3219  0013F8  FFFF               	dw	65535	; errata NOP
  3220  0013FA  2EE8               	decfsz	wreg,f,c
  3221  0013FC  D7FD               	bra	u987
  3222  0013FE  2FA0               	decfsz	??_flashDEL& (0+255),f,b
  3223  001400  D7FB               	bra	u987
  3224  001402  2FA1               	decfsz	(??_flashDEL+1)& (0+255),f,b
  3225  001404  D7F9               	bra	u987
  3226  001406  D000               	nop2	
  3227  001408  F000               	nop	
  3228  00140A                     
  3229                           ;main.c: 276:  }
  3230  00140A  0100               	movlb	0	; force () banked
  3231  00140C  4BA2               	infsnz	flashDEL@i& (0+255),f,b
  3232  00140E  2BA3               	incf	(flashDEL@i+1)& (0+255),f,b
  3233  001410  BFA3               	btfsc	(flashDEL@i+1)& (0+255),7,b
  3234  001412  EF14  F00A         	goto	u311
  3235  001416  51A3               	movf	(flashDEL@i+1)& (0+255),w,b
  3236  001418  E10A               	bnz	u310
  3237  00141A  0E03               	movlw	3
  3238  00141C  5DA2               	subwf	flashDEL@i& (0+255),w,b
  3239  00141E  A0D8               	btfss	status,0,c
  3240  001420  EF14  F00A         	goto	u311
  3241  001424  EF17  F00A         	goto	u310
  3242  001428                     u311:
  3243  001428  FFFF               	dw	65535	; assembler added errata NOP
  3244  00142A  EFE2  F009         	goto	l201
  3245  00142E                     u310:
  3246  00142E                     l203:
  3247  00142E  FFFF               	dw	65535	; assembler added errata NOP
  3248                           
  3249                           ; BSR set to: 0
  3250  001430  0012               	return		;funcret
  3251  001432  FFFF               	dw	65535	; errata NOP
  3252  001434                     __end_of_flashDEL:
  3253                           	callstack 0
  3254                           
  3255 ;; *************** function _affiche *****************
  3256 ;; Defined at:
  3257 ;;		line 210 in file "main.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;  etat            2   19[BANK0 ] unsigned int 
  3260 ;;  usager          2   21[BANK0 ] int 
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;		None
  3263 ;; Return value:  Size  Location     Type
  3264 ;;                  1    wreg      void 
  3265 ;; Registers used:
  3266 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3267 ;; Tracked objects:
  3268 ;;		On entry : 0/0
  3269 ;;		On exit  : 0/0
  3270 ;;		Unchanged: 0/0
  3271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3272 ;;      Params:         0       4       0       0       0       0       0
  3273 ;;      Locals:         0       0       0       0       0       0       0
  3274 ;;      Temps:          0       2       0       0       0       0       0
  3275 ;;      Totals:         0       6       0       0       0       0       0
  3276 ;;Total ram usage:        6 bytes
  3277 ;; Hardware stack levels used: 1
  3278 ;; Hardware stack levels required when called: 5
  3279 ;; This function calls:
  3280 ;;		___wmul
  3281 ;;		_lcd_curseurHome
  3282 ;;		_lcd_effaceAffichage
  3283 ;;		_lcd_gotoXY
  3284 ;;		_lcd_putMessage
  3285 ;; This function is called by:
  3286 ;;		_main
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           	psect	text16
  3291  000AC8                     __ptext16:
  3292                           	callstack 0
  3293  000AC8                     _affiche:
  3294                           	callstack 0
  3295  000AC8  FFFF               	dw	65535	; assembler added errata NOP
  3296  000ACA                     
  3297                           ;main.c: 210: void affiche(unsigned int etat, int usager);main.c: 211: {;main.c: 212:  s
      +                          witch(etat)
  3298  000ACA  EF55  F006         	goto	l1910
  3299  000ACE                     l1864:
  3300  000ACE  FFFF               	dw	65535	; assembler added errata NOP
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;main.c: 215:    lcd_effaceAffichage();
  3304  000AD0  EC4D  F00D         	call	_lcd_effaceAffichage	;wreg free
  3305                           
  3306                           ;main.c: 216:    lcd_curseurHome();
  3307  000AD4  EC56  F00D         	call	_lcd_curseurHome	;wreg free
  3308  000AD8                     
  3309                           ;main.c: 217:    lcd_putMessage("acces local 283");
  3310  000AD8  0E2D               	movlw	low STR_1
  3311  000ADA  0100               	movlb	0	; force () banked
  3312  000ADC  6FAA               	movwf	lcd_putMessage@chaine& (0+255),b
  3313  000ADE  0E06               	movlw	high STR_1
  3314  000AE0  6FAB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3315  000AE2  51AA               	movf	lcd_putMessage@chaine& (0+255),w,b
  3316  000AE4  11AB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3317  000AE6  A4D8               	btfss	status,2,c
  3318  000AE8  0E00               	movlw	low (__mediumconst shr (0+16))
  3319  000AEA  6FAC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3320  000AEC  ECB4  F008         	call	_lcd_putMessage	;wreg free
  3321  000AF0                     
  3322                           ;main.c: 218:    lcd_gotoXY(1, 2);
  3323  000AF0  0E02               	movlw	2
  3324  000AF2  0100               	movlb	0	; force () banked
  3325  000AF4  6FA6               	movwf	lcd_gotoXY@y& (0+255),b
  3326  000AF6  0E01               	movlw	1
  3327  000AF8  EC68  F00A         	call	_lcd_gotoXY
  3328                           
  3329                           ;main.c: 219:    lcd_putMessage("<Enter>");
  3330  000AFC  0E53               	movlw	low STR_2
  3331  000AFE  0100               	movlb	0	; force () banked
  3332  000B00  6FAA               	movwf	lcd_putMessage@chaine& (0+255),b
  3333  000B02  0E06               	movlw	high STR_2
  3334  000B04  6FAB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3335  000B06  51AA               	movf	lcd_putMessage@chaine& (0+255),w,b
  3336  000B08  11AB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3337  000B0A  A4D8               	btfss	status,2,c
  3338  000B0C  0E00               	movlw	low (__mediumconst shr (0+16))
  3339  000B0E  6FAC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3340  000B10  ECB4  F008         	call	_lcd_putMessage	;wreg free
  3341                           
  3342                           ;main.c: 220:    break;
  3343  000B14  EF7A  F006         	goto	l198
  3344  000B18                     l1870:
  3345  000B18  FFFF               	dw	65535	; assembler added errata NOP
  3346                           
  3347                           ; BSR set to: 0
  3348                           ;main.c: 223:    lcd_effaceAffichage();
  3349  000B1A  EC4D  F00D         	call	_lcd_effaceAffichage	;wreg free
  3350                           
  3351                           ;main.c: 224:    lcd_curseurHome();
  3352  000B1E  EC56  F00D         	call	_lcd_curseurHome	;wreg free
  3353  000B22                     
  3354                           ;main.c: 225:    lcd_putMessage("Entrez votre no d'etudiant");
  3355  000B22  0E01               	movlw	low STR_3
  3356  000B24  0100               	movlb	0	; force () banked
  3357  000B26  6FAA               	movwf	lcd_putMessage@chaine& (0+255),b
  3358  000B28  0E06               	movlw	high STR_3
  3359  000B2A  6FAB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3360  000B2C  51AA               	movf	lcd_putMessage@chaine& (0+255),w,b
  3361  000B2E  11AB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3362  000B30  A4D8               	btfss	status,2,c
  3363  000B32  0E00               	movlw	low (__mediumconst shr (0+16))
  3364  000B34  6FAC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3365  000B36  ECB4  F008         	call	_lcd_putMessage	;wreg free
  3366  000B3A                     
  3367                           ;main.c: 226:    lcd_gotoXY(1, 3);
  3368  000B3A  0E03               	movlw	3
  3369  000B3C  0100               	movlb	0	; force () banked
  3370  000B3E  6FA6               	movwf	lcd_gotoXY@y& (0+255),b
  3371  000B40  0E01               	movlw	1
  3372  000B42  EC68  F00A         	call	_lcd_gotoXY
  3373                           
  3374                           ;main.c: 227:    lcd_putMessage("<Enter>");
  3375  000B46  0E53               	movlw	low STR_2
  3376  000B48  0100               	movlb	0	; force () banked
  3377  000B4A  6FAA               	movwf	lcd_putMessage@chaine& (0+255),b
  3378  000B4C  0E06               	movlw	high STR_2
  3379  000B4E  6FAB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3380  000B50  51AA               	movf	lcd_putMessage@chaine& (0+255),w,b
  3381  000B52  11AB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3382  000B54  A4D8               	btfss	status,2,c
  3383  000B56  0E00               	movlw	low (__mediumconst shr (0+16))
  3384  000B58  6FAC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3385  000B5A  ECB4  F008         	call	_lcd_putMessage	;wreg free
  3386  000B5E                     
  3387                           ;main.c: 228:    lcd_gotoXY(1, 4);
  3388  000B5E  0E04               	movlw	4
  3389  000B60  0100               	movlb	0	; force () banked
  3390  000B62  6FA6               	movwf	lcd_gotoXY@y& (0+255),b
  3391  000B64  0E01               	movlw	1
  3392  000B66  EC68  F00A         	call	_lcd_gotoXY
  3393                           
  3394                           ;main.c: 229:    break;
  3395  000B6A  EF7A  F006         	goto	l198
  3396  000B6E                     l1878:
  3397  000B6E  FFFF               	dw	65535	; assembler added errata NOP
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;main.c: 232:    lcd_effaceAffichage();
  3401  000B70  EC4D  F00D         	call	_lcd_effaceAffichage	;wreg free
  3402                           
  3403                           ;main.c: 233:    lcd_curseurHome();
  3404  000B74  EC56  F00D         	call	_lcd_curseurHome	;wreg free
  3405  000B78                     
  3406                           ;main.c: 234:    lcd_putMessage("Entrez votre NIP");
  3407  000B78  0E1C               	movlw	low STR_5
  3408  000B7A  0100               	movlb	0	; force () banked
  3409  000B7C  6FAA               	movwf	lcd_putMessage@chaine& (0+255),b
  3410  000B7E  0E06               	movlw	high STR_5
  3411  000B80  6FAB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3412  000B82  51AA               	movf	lcd_putMessage@chaine& (0+255),w,b
  3413  000B84  11AB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3414  000B86  A4D8               	btfss	status,2,c
  3415  000B88  0E00               	movlw	low (__mediumconst shr (0+16))
  3416  000B8A  6FAC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3417  000B8C  ECB4  F008         	call	_lcd_putMessage	;wreg free
  3418  000B90                     
  3419                           ;main.c: 235:    lcd_gotoXY(1, 2);
  3420  000B90  0E02               	movlw	2
  3421  000B92  0100               	movlb	0	; force () banked
  3422  000B94  6FA6               	movwf	lcd_gotoXY@y& (0+255),b
  3423  000B96  0E01               	movlw	1
  3424  000B98  EC68  F00A         	call	_lcd_gotoXY
  3425                           
  3426                           ;main.c: 236:    lcd_putMessage("<Enter>");
  3427  000B9C  0E53               	movlw	low STR_2
  3428  000B9E  0100               	movlb	0	; force () banked
  3429  000BA0  6FAA               	movwf	lcd_putMessage@chaine& (0+255),b
  3430  000BA2  0E06               	movlw	high STR_2
  3431  000BA4  6FAB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3432  000BA6  51AA               	movf	lcd_putMessage@chaine& (0+255),w,b
  3433  000BA8  11AB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3434  000BAA  A4D8               	btfss	status,2,c
  3435  000BAC  0E00               	movlw	low (__mediumconst shr (0+16))
  3436  000BAE  6FAC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3437  000BB0  ECB4  F008         	call	_lcd_putMessage	;wreg free
  3438  000BB4                     
  3439                           ;main.c: 237:    lcd_gotoXY(1, 3);
  3440  000BB4  0E03               	movlw	3
  3441  000BB6  0100               	movlb	0	; force () banked
  3442  000BB8  6FA6               	movwf	lcd_gotoXY@y& (0+255),b
  3443  000BBA  0E01               	movlw	1
  3444  000BBC  EC68  F00A         	call	_lcd_gotoXY
  3445                           
  3446                           ;main.c: 238:    break;
  3447  000BC0  EF7A  F006         	goto	l198
  3448  000BC4                     l1886:
  3449  000BC4  FFFF               	dw	65535	; assembler added errata NOP
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;main.c: 241:    lcd_effaceAffichage();
  3453  000BC6  EC4D  F00D         	call	_lcd_effaceAffichage	;wreg free
  3454                           
  3455                           ;main.c: 242:    lcd_curseurHome();
  3456  000BCA  EC56  F00D         	call	_lcd_curseurHome	;wreg free
  3457  000BCE                     
  3458                           ;main.c: 243:    lcd_putMessage("Bonjour ");
  3459  000BCE  0E4A               	movlw	low STR_7
  3460  000BD0  0100               	movlb	0	; force () banked
  3461  000BD2  6FAA               	movwf	lcd_putMessage@chaine& (0+255),b
  3462  000BD4  0E06               	movlw	high STR_7
  3463  000BD6  6FAB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3464  000BD8  51AA               	movf	lcd_putMessage@chaine& (0+255),w,b
  3465  000BDA  11AB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3466  000BDC  A4D8               	btfss	status,2,c
  3467  000BDE  0E00               	movlw	low (__mediumconst shr (0+16))
  3468  000BE0  6FAC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3469  000BE2  ECB4  F008         	call	_lcd_putMessage	;wreg free
  3470  000BE6                     
  3471                           ;main.c: 244:    lcd_putMessage(listeUsager[usager].nom);
  3472  000BE6  C0B5  F0A0         	movff	affiche@usager,___wmul@multiplier
  3473  000BEA  C0B6  F0A1         	movff	affiche@usager+1,___wmul@multiplier+1
  3474  000BEE  0E00               	movlw	0
  3475  000BF0  0100               	movlb	0	; force () banked
  3476  000BF2  6FA3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3477  000BF4  0E19               	movlw	25
  3478  000BF6  6FA2               	movwf	___wmul@multiplicand& (0+255),b
  3479  000BF8  ECFE  F00C         	call	___wmul	;wreg free
  3480  000BFC  0EC6               	movlw	low _listeUsager
  3481  000BFE  0100               	movlb	0	; force () banked
  3482  000C00  25A0               	addwf	?___wmul& (0+255),w,b
  3483  000C02  0100               	movlb	0	; force () banked
  3484  000C04  6FB7               	movwf	??_affiche& (0+255),b
  3485  000C06  0E00               	movlw	high _listeUsager
  3486  000C08  0100               	movlb	0	; force () banked
  3487  000C0A  21A1               	addwfc	(?___wmul+1)& (0+255),w,b
  3488  000C0C  0100               	movlb	0	; force () banked
  3489  000C0E  6FB8               	movwf	(??_affiche+1)& (0+255),b
  3490  000C10  C0B7  F0AA         	movff	??_affiche,lcd_putMessage@chaine
  3491  000C14  C0B8  F0AB         	movff	??_affiche+1,lcd_putMessage@chaine+1
  3492  000C18  0100               	movlb	0	; force () banked
  3493  000C1A  51AA               	movf	lcd_putMessage@chaine& (0+255),w,b
  3494  000C1C  11AB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3495  000C1E  A4D8               	btfss	status,2,c
  3496  000C20  0E20               	movlw	32
  3497  000C22  6FAC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3498  000C24  ECB4  F008         	call	_lcd_putMessage	;wreg free
  3499  000C28                     
  3500                           ;main.c: 245:    lcd_gotoXY(1, 2);
  3501  000C28  0E02               	movlw	2
  3502  000C2A  0100               	movlb	0	; force () banked
  3503  000C2C  6FA6               	movwf	lcd_gotoXY@y& (0+255),b
  3504  000C2E  0E01               	movlw	1
  3505  000C30  EC68  F00A         	call	_lcd_gotoXY
  3506  000C34                     
  3507                           ;main.c: 246:    lcd_putMessage("<Enter>");
  3508  000C34  0E53               	movlw	low STR_2
  3509  000C36  0100               	movlb	0	; force () banked
  3510  000C38  6FAA               	movwf	lcd_putMessage@chaine& (0+255),b
  3511  000C3A  0E06               	movlw	high STR_2
  3512  000C3C  6FAB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3513  000C3E  51AA               	movf	lcd_putMessage@chaine& (0+255),w,b
  3514  000C40  11AB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3515  000C42  A4D8               	btfss	status,2,c
  3516  000C44  0E00               	movlw	low (__mediumconst shr (0+16))
  3517  000C46  6FAC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3518  000C48  ECB4  F008         	call	_lcd_putMessage	;wreg free
  3519  000C4C                     
  3520                           ;main.c: 247:    lcd_gotoXY(1, 3);
  3521  000C4C  0E03               	movlw	3
  3522  000C4E  0100               	movlb	0	; force () banked
  3523  000C50  6FA6               	movwf	lcd_gotoXY@y& (0+255),b
  3524  000C52  0E01               	movlw	1
  3525  000C54  EC68  F00A         	call	_lcd_gotoXY
  3526  000C58                     
  3527                           ;main.c: 248:    PORTCbits.RC0 = 1;
  3528  000C58  8082               	bsf	130,0,c	;volatile
  3529                           
  3530                           ;main.c: 249:    break;
  3531  000C5A  EF7A  F006         	goto	l198
  3532  000C5E                     l1900:
  3533  000C5E  FFFF               	dw	65535	; assembler added errata NOP
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;main.c: 252:    lcd_effaceAffichage();
  3537  000C60  EC4D  F00D         	call	_lcd_effaceAffichage	;wreg free
  3538                           
  3539                           ;main.c: 253:    lcd_curseurHome();
  3540  000C64  EC56  F00D         	call	_lcd_curseurHome	;wreg free
  3541  000C68                     
  3542                           ;main.c: 254:    lcd_putMessage("acces refuse");
  3543  000C68  0E3D               	movlw	low STR_9
  3544  000C6A  0100               	movlb	0	; force () banked
  3545  000C6C  6FAA               	movwf	lcd_putMessage@chaine& (0+255),b
  3546  000C6E  0E06               	movlw	high STR_9
  3547  000C70  6FAB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3548  000C72  51AA               	movf	lcd_putMessage@chaine& (0+255),w,b
  3549  000C74  11AB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3550  000C76  A4D8               	btfss	status,2,c
  3551  000C78  0E00               	movlw	low (__mediumconst shr (0+16))
  3552  000C7A  6FAC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3553  000C7C  ECB4  F008         	call	_lcd_putMessage	;wreg free
  3554  000C80                     
  3555                           ;main.c: 255:    lcd_gotoXY(1, 2);
  3556  000C80  0E02               	movlw	2
  3557  000C82  0100               	movlb	0	; force () banked
  3558  000C84  6FA6               	movwf	lcd_gotoXY@y& (0+255),b
  3559  000C86  0E01               	movlw	1
  3560  000C88  EC68  F00A         	call	_lcd_gotoXY
  3561                           
  3562                           ;main.c: 256:    lcd_putMessage("<Enter>");
  3563  000C8C  0E53               	movlw	low STR_2
  3564  000C8E  0100               	movlb	0	; force () banked
  3565  000C90  6FAA               	movwf	lcd_putMessage@chaine& (0+255),b
  3566  000C92  0E06               	movlw	high STR_2
  3567  000C94  6FAB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3568  000C96  51AA               	movf	lcd_putMessage@chaine& (0+255),w,b
  3569  000C98  11AB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3570  000C9A  A4D8               	btfss	status,2,c
  3571  000C9C  0E00               	movlw	low (__mediumconst shr (0+16))
  3572  000C9E  6FAC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3573  000CA0  ECB4  F008         	call	_lcd_putMessage	;wreg free
  3574  000CA4                     
  3575                           ;main.c: 257:    PORTDbits.RD7 = 1;
  3576  000CA4  8E83               	bsf	131,7,c	;volatile
  3577                           
  3578                           ;main.c: 258:    break;
  3579  000CA6  EF7A  F006         	goto	l198
  3580  000CAA                     l1910:
  3581  000CAA  FFFF               	dw	65535	; assembler added errata NOP
  3582  000CAC  C0B3  F0B7         	movff	affiche@etat,??_affiche
  3583  000CB0  C0B4  F0B8         	movff	affiche@etat+1,??_affiche+1
  3584                           
  3585                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3586                           ; Switch size 1, requested type "simple"
  3587                           ; Number of cases is 1, Range of values is 0 to 0
  3588                           ; switch strategies available:
  3589                           ; Name         Instructions Cycles
  3590                           ; simple_byte            4     3 (average)
  3591                           ;	Chosen strategy is simple_byte
  3592  000CB4  0100               	movlb	0	; force () banked
  3593  000CB6  51B8               	movf	(??_affiche+1)& (0+255),w,b
  3594  000CB8  0A00               	xorlw	0	; case 0
  3595  000CBA  B4D8               	btfsc	status,2,c
  3596  000CBC  EF62  F006         	goto	l2024
  3597  000CC0  EF7A  F006         	goto	l198
  3598  000CC4                     l2024:
  3599  000CC4  FFFF               	dw	65535	; assembler added errata NOP
  3600                           
  3601                           ; BSR set to: 0
  3602                           ; Switch size 1, requested type "simple"
  3603                           ; Number of cases is 5, Range of values is 0 to 4
  3604                           ; switch strategies available:
  3605                           ; Name         Instructions Cycles
  3606                           ; simple_byte           16     9 (average)
  3607                           ;	Chosen strategy is simple_byte
  3608  000CC6  51B7               	movf	??_affiche& (0+255),w,b
  3609  000CC8  0A00               	xorlw	0	; case 0
  3610  000CCA  B4D8               	btfsc	status,2,c
  3611  000CCC  EF67  F005         	goto	l1864
  3612  000CD0  0A01               	xorlw	1	; case 1
  3613  000CD2  B4D8               	btfsc	status,2,c
  3614  000CD4  EF8C  F005         	goto	l1870
  3615  000CD8  0A03               	xorlw	3	; case 2
  3616  000CDA  B4D8               	btfsc	status,2,c
  3617  000CDC  EFB7  F005         	goto	l1878
  3618  000CE0  0A01               	xorlw	1	; case 3
  3619  000CE2  B4D8               	btfsc	status,2,c
  3620  000CE4  EFE2  F005         	goto	l1886
  3621  000CE8  0A07               	xorlw	7	; case 4
  3622  000CEA  B4D8               	btfsc	status,2,c
  3623  000CEC  EF2F  F006         	goto	l1900
  3624  000CF0  EF7A  F006         	goto	l198
  3625  000CF4                     l198:
  3626  000CF4  FFFF               	dw	65535	; assembler added errata NOP
  3627  000CF6  0012               	return		;funcret
  3628  000CF8  FFFF               	dw	65535	; errata NOP
  3629  000CFA                     __end_of_affiche:
  3630                           	callstack 0
  3631                           
  3632 ;; *************** function _lcd_putMessage *****************
  3633 ;; Defined at:
  3634 ;;		line 386 in file "Lcd4Lignes.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;  chaine          3   10[BANK0 ] PTR const unsigned char 
  3637 ;;		 -> STR_10(8), STR_9(13), STR_8(8), STR_7(9), 
  3638 ;;		 -> STR_6(8), STR_5(17), STR_4(8), STR_3(27), 
  3639 ;;		 -> STR_2(8), STR_1(16), listeUsager.nom(20), listeUsager(300), 
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;  j               1   18[BANK0 ] unsigned char 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      void 
  3644 ;; Registers used:
  3645 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3651 ;;      Params:         0       3       0       0       0       0       0
  3652 ;;      Locals:         0       1       0       0       0       0       0
  3653 ;;      Temps:          0       5       0       0       0       0       0
  3654 ;;      Totals:         0       9       0       0       0       0       0
  3655 ;;Total ram usage:        9 bytes
  3656 ;; Hardware stack levels used: 1
  3657 ;; Hardware stack levels required when called: 4
  3658 ;; This function calls:
  3659 ;;		_lcd_ecritChar
  3660 ;; This function is called by:
  3661 ;;		_affiche
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           
  3665                           	psect	text17
  3666  001168                     __ptext17:
  3667                           	callstack 0
  3668  001168                     _lcd_putMessage:
  3669                           	callstack 0
  3670  001168  FFFF               	dw	65535	; assembler added errata NOP
  3671  00116A                     
  3672                           ;Lcd4Lignes.c: 386: void lcd_putMessage(const unsigned char *chaine);Lcd4Lignes.c: 387: 
      +                          {;Lcd4Lignes.c: 388:     unsigned char j;;Lcd4Lignes.c: 390:     for(j = 0; chaine[j] !=
      +                           0; j++)
  3673  00116A  0E00               	movlw	0
  3674  00116C  0100               	movlb	0	; force () banked
  3675  00116E  6FB2               	movwf	lcd_putMessage@j& (0+255),b
  3676  001170  EFE4  F008         	goto	l1692
  3677  001174                     l1688:
  3678  001174  FFFF               	dw	65535	; assembler added errata NOP
  3679                           
  3680                           ;Lcd4Lignes.c: 391:         lcd_ecritChar(chaine[j]);
  3681  001176  0100               	movlb	0	; force () banked
  3682  001178  51B2               	movf	lcd_putMessage@j& (0+255),w,b
  3683  00117A  0100               	movlb	0	; force () banked
  3684  00117C  6FAD               	movwf	??_lcd_putMessage& (0+255),b
  3685  00117E  6BAE               	clrf	(??_lcd_putMessage+1)& (0+255),b
  3686  001180  51AD               	movf	??_lcd_putMessage& (0+255),w,b
  3687  001182  0100               	movlb	0	; force () banked
  3688  001184  25AA               	addwf	lcd_putMessage@chaine& (0+255),w,b
  3689  001186  0100               	movlb	0	; force () banked
  3690  001188  6FAF               	movwf	(??_lcd_putMessage+2)& (0+255),b
  3691  00118A  51AE               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  3692  00118C  0100               	movlb	0	; force () banked
  3693  00118E  21AB               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  3694  001190  0100               	movlb	0	; force () banked
  3695  001192  6FB0               	movwf	(??_lcd_putMessage+3)& (0+255),b
  3696  001194  0E00               	movlw	0
  3697  001196  0100               	movlb	0	; force () banked
  3698  001198  21AC               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  3699  00119A  0100               	movlb	0	; force () banked
  3700  00119C  6FB1               	movwf	(??_lcd_putMessage+4)& (0+255),b
  3701  00119E  C0AF  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  3702  0011A2  C0B0  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  3703  0011A6  C0B1  FFF8         	movff	??_lcd_putMessage+4,tblptru
  3704  0011AA  BAF8               	btfsc	tblptru,5,c
  3705  0011AC  D004               	bra	u607
  3706  0011AE  0008               	tblrd		*
  3707  0011B0  FFFF               	dw	65535	; errata NOP
  3708  0011B2  50F5               	movf	tablat,w,c
  3709  0011B4  D005               	bra	u600
  3710  0011B6                     u607:
  3711  0011B6  CFF6 FFE1          	movff	tblptrl,fsr1l
  3712  0011BA  CFF7 FFE2          	movff	tblptrh,fsr1h
  3713  0011BE  50E7               	movf	indf1,w,c
  3714  0011C0                     u600:
  3715  0011C0  ECF4  F00A         	call	_lcd_ecritChar
  3716  0011C4  0100               	movlb	0	; force () banked
  3717  0011C6  2BB2               	incf	lcd_putMessage@j& (0+255),f,b
  3718  0011C8                     l1692:
  3719  0011C8  FFFF               	dw	65535	; assembler added errata NOP
  3720                           
  3721                           ; BSR set to: 0
  3722  0011CA  0100               	movlb	0	; force () banked
  3723  0011CC  51B2               	movf	lcd_putMessage@j& (0+255),w,b
  3724  0011CE  0100               	movlb	0	; force () banked
  3725  0011D0  6FAD               	movwf	??_lcd_putMessage& (0+255),b
  3726  0011D2  6BAE               	clrf	(??_lcd_putMessage+1)& (0+255),b
  3727  0011D4  51AD               	movf	??_lcd_putMessage& (0+255),w,b
  3728  0011D6  0100               	movlb	0	; force () banked
  3729  0011D8  25AA               	addwf	lcd_putMessage@chaine& (0+255),w,b
  3730  0011DA  0100               	movlb	0	; force () banked
  3731  0011DC  6FAF               	movwf	(??_lcd_putMessage+2)& (0+255),b
  3732  0011DE  51AE               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  3733  0011E0  0100               	movlb	0	; force () banked
  3734  0011E2  21AB               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  3735  0011E4  0100               	movlb	0	; force () banked
  3736  0011E6  6FB0               	movwf	(??_lcd_putMessage+3)& (0+255),b
  3737  0011E8  0E00               	movlw	0
  3738  0011EA  0100               	movlb	0	; force () banked
  3739  0011EC  21AC               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  3740  0011EE  0100               	movlb	0	; force () banked
  3741  0011F0  6FB1               	movwf	(??_lcd_putMessage+4)& (0+255),b
  3742  0011F2  C0AF  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  3743  0011F6  C0B0  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  3744  0011FA  C0B1  FFF8         	movff	??_lcd_putMessage+4,tblptru
  3745  0011FE  BAF8               	btfsc	tblptru,5,c
  3746  001200  D004               	bra	u617
  3747  001202  0008               	tblrd		*
  3748  001204  FFFF               	dw	65535	; errata NOP
  3749  001206  50F5               	movf	tablat,w,c
  3750  001208  D005               	bra	u610
  3751  00120A                     u617:
  3752  00120A  CFF6 FFE1          	movff	tblptrl,fsr1l
  3753  00120E  CFF7 FFE2          	movff	tblptrh,fsr1h
  3754  001212  50E7               	movf	indf1,w,c
  3755  001214                     u610:
  3756  001214  0900               	iorlw	0
  3757  001216  A4D8               	btfss	status,2,c
  3758  001218  EF10  F009         	goto	u621
  3759  00121C  EF13  F009         	goto	u620
  3760  001220                     u621:
  3761  001220  FFFF               	dw	65535	; assembler added errata NOP
  3762  001222  EFBA  F008         	goto	l1688
  3763  001226                     u620:
  3764  001226  FFFF               	dw	65535	; assembler added errata NOP
  3765  001228  0012               	return		;funcret
  3766  00122A  FFFF               	dw	65535	; errata NOP
  3767  00122C                     __end_of_lcd_putMessage:
  3768                           	callstack 0
  3769                           
  3770 ;; *************** function _lcd_ecritChar *****************
  3771 ;; Defined at:
  3772 ;;		line 358 in file "Lcd4Lignes.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;  car             1    wreg     unsigned char 
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;  car             1    8[BANK0 ] unsigned char 
  3777 ;;  posRam          1    9[BANK0 ] unsigned char 
  3778 ;; Return value:  Size  Location     Type
  3779 ;;                  1    wreg      void 
  3780 ;; Registers used:
  3781 ;;		wreg, status,2, status,0, cstack
  3782 ;; Tracked objects:
  3783 ;;		On entry : 0/0
  3784 ;;		On exit  : 0/0
  3785 ;;		Unchanged: 0/0
  3786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3787 ;;      Params:         0       0       0       0       0       0       0
  3788 ;;      Locals:         0       2       0       0       0       0       0
  3789 ;;      Temps:          0       2       0       0       0       0       0
  3790 ;;      Totals:         0       4       0       0       0       0       0
  3791 ;;Total ram usage:        4 bytes
  3792 ;; Hardware stack levels used: 1
  3793 ;; Hardware stack levels required when called: 3
  3794 ;; This function calls:
  3795 ;;		_lcd_wrCom
  3796 ;;		_lcd_wrData
  3797 ;; This function is called by:
  3798 ;;		_lcd_putMessage
  3799 ;;		_gereTouche
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           	psect	text18
  3804  0015E8                     __ptext18:
  3805                           	callstack 0
  3806  0015E8                     _lcd_ecritChar:
  3807                           	callstack 0
  3808  0015E8  FFFF               	dw	65535	; assembler added errata NOP
  3809                           
  3810                           ;incstack = 0
  3811                           ;lcd_ecritChar@car stored from wreg
  3812  0015EA  0100               	movlb	0	; force () banked
  3813  0015EC  6FA8               	movwf	lcd_ecritChar@car& (0+255),b
  3814  0015EE                     
  3815                           ;Lcd4Lignes.c: 358: void lcd_ecritChar(unsigned char car);Lcd4Lignes.c: 359: {;Lcd4Ligne
      +                          s.c: 360:     unsigned char posRam;;Lcd4Lignes.c: 362:     posRam = lcd_wrData(car);
  3816  0015EE  0100               	movlb	0	; force () banked
  3817  0015F0  51A8               	movf	lcd_ecritChar@car& (0+255),w,b
  3818  0015F2  EC4C  F00C         	call	_lcd_wrData
  3819  0015F6  0100               	movlb	0	; force () banked
  3820  0015F8  6FA9               	movwf	lcd_ecritChar@posRam& (0+255),b
  3821                           
  3822                           ;Lcd4Lignes.c: 363:     switch(posRam)
  3823  0015FA  EF11  F00B         	goto	l1098
  3824  0015FE                     l1090:
  3825  0015FE  FFFF               	dw	65535	; assembler added errata NOP
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;Lcd4Lignes.c: 366:             lcd_wrCom(0x40|0x80);
  3829  001600  0EC0               	movlw	192
  3830  001602  EC1A  F00A         	call	_lcd_wrCom
  3831                           
  3832                           ;Lcd4Lignes.c: 367:             break;
  3833  001606  EF2E  F00B         	goto	l78
  3834  00160A                     l1092:
  3835  00160A  FFFF               	dw	65535	; assembler added errata NOP
  3836                           
  3837                           ; BSR set to: 0
  3838                           ;Lcd4Lignes.c: 369:             lcd_wrCom(0x14|0x80);
  3839  00160C  0E94               	movlw	148
  3840  00160E  EC1A  F00A         	call	_lcd_wrCom
  3841                           
  3842                           ;Lcd4Lignes.c: 370:             break;
  3843  001612  EF2E  F00B         	goto	l78
  3844  001616                     l1094:
  3845  001616  FFFF               	dw	65535	; assembler added errata NOP
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;Lcd4Lignes.c: 372:             lcd_wrCom(0x54|0x80);
  3849  001618  0ED4               	movlw	212
  3850  00161A  EC1A  F00A         	call	_lcd_wrCom
  3851                           
  3852                           ;Lcd4Lignes.c: 373:             break;
  3853  00161E  EF2E  F00B         	goto	l78
  3854  001622                     l1098:
  3855  001622  FFFF               	dw	65535	; assembler added errata NOP
  3856                           
  3857                           ; BSR set to: 0
  3858  001624  0100               	movlb	0	; force () banked
  3859  001626  51A9               	movf	lcd_ecritChar@posRam& (0+255),w,b
  3860  001628  0100               	movlb	0	; force () banked
  3861  00162A  6FA6               	movwf	??_lcd_ecritChar& (0+255),b
  3862  00162C  6BA7               	clrf	(??_lcd_ecritChar+1)& (0+255),b
  3863                           
  3864                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3865                           ; Switch size 1, requested type "simple"
  3866                           ; Number of cases is 1, Range of values is 0 to 0
  3867                           ; switch strategies available:
  3868                           ; Name         Instructions Cycles
  3869                           ; simple_byte            4     3 (average)
  3870                           ;	Chosen strategy is simple_byte
  3871  00162E  51A7               	movf	(??_lcd_ecritChar+1)& (0+255),w,b
  3872  001630  0A00               	xorlw	0	; case 0
  3873  001632  B4D8               	btfsc	status,2,c
  3874  001634  EF1E  F00B         	goto	l2026
  3875  001638  EF2E  F00B         	goto	l78
  3876  00163C                     l2026:
  3877  00163C  FFFF               	dw	65535	; assembler added errata NOP
  3878                           
  3879                           ; BSR set to: 0
  3880                           ; Switch size 1, requested type "simple"
  3881                           ; Number of cases is 3, Range of values is 20 to 84
  3882                           ; switch strategies available:
  3883                           ; Name         Instructions Cycles
  3884                           ; simple_byte           10     6 (average)
  3885                           ;	Chosen strategy is simple_byte
  3886  00163E  51A6               	movf	??_lcd_ecritChar& (0+255),w,b
  3887  001640  0A14               	xorlw	20	; case 20
  3888  001642  B4D8               	btfsc	status,2,c
  3889  001644  EFFF  F00A         	goto	l1090
  3890  001648  0A54               	xorlw	84	; case 64
  3891  00164A  B4D8               	btfsc	status,2,c
  3892  00164C  EF0B  F00B         	goto	l1094
  3893  001650  0A14               	xorlw	20	; case 84
  3894  001652  B4D8               	btfsc	status,2,c
  3895  001654  EF05  F00B         	goto	l1092
  3896  001658  EF2E  F00B         	goto	l78
  3897  00165C                     l78:
  3898  00165C  FFFF               	dw	65535	; assembler added errata NOP
  3899  00165E  0012               	return		;funcret
  3900  001660  FFFF               	dw	65535	; errata NOP
  3901  001662                     __end_of_lcd_ecritChar:
  3902                           	callstack 0
  3903                           
  3904 ;; *************** function _lcd_wrData *****************
  3905 ;; Defined at:
  3906 ;;		line 187 in file "Lcd4Lignes.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;  caractere       1    wreg     unsigned char 
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;  caractere       1    4[BANK0 ] unsigned char 
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  1    wreg      unsigned char 
  3913 ;; Registers used:
  3914 ;;		wreg, status,2, status,0, cstack
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3920 ;;      Params:         0       0       0       0       0       0       0
  3921 ;;      Locals:         0       1       0       0       0       0       0
  3922 ;;      Temps:          0       0       0       0       0       0       0
  3923 ;;      Totals:         0       1       0       0       0       0       0
  3924 ;;Total ram usage:        1 bytes
  3925 ;; Hardware stack levels used: 1
  3926 ;; Hardware stack levels required when called: 2
  3927 ;; This function calls:
  3928 ;;		_lcd_busy
  3929 ;;		_lcd_ecrireDonnees
  3930 ;;		_lcd_strobeEnableBit
  3931 ;; This function is called by:
  3932 ;;		_lcd_ecritChar
  3933 ;;		_lcd_initCGRam
  3934 ;;		_lcd_effaceChar
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text19
  3939  001898                     __ptext19:
  3940                           	callstack 0
  3941  001898                     _lcd_wrData:
  3942                           	callstack 0
  3943  001898  FFFF               	dw	65535	; assembler added errata NOP
  3944                           
  3945                           ;incstack = 0
  3946                           ;lcd_wrData@caractere stored from wreg
  3947  00189A  0100               	movlb	0	; force () banked
  3948  00189C  6FA4               	movwf	lcd_wrData@caractere& (0+255),b
  3949  00189E                     
  3950                           ;Lcd4Lignes.c: 187: static unsigned char lcd_wrData(unsigned char caractere);Lcd4Lignes.
      +                          c: 188: {;Lcd4Lignes.c: 189:     lcd_busy();
  3951  00189E  ECA9  F00B         	call	_lcd_busy	;wreg free
  3952  0018A2                     
  3953                           ;Lcd4Lignes.c: 190:     TRISA = 0b00000000;
  3954  0018A2  0E00               	movlw	0
  3955  0018A4  6E92               	movwf	146,c	;volatile
  3956  0018A6                     
  3957                           ;Lcd4Lignes.c: 191:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  3958  0018A6  D000               	nop2		;2 cycle nop
  3959  0018A8  D000               	nop2		;2 cycle nop
  3960  0018AA  D000               	nop2		;2 cycle nop
  3961  0018AC  D000               	nop2		;2 cycle nop
  3962  0018AE                     
  3963                           ;Lcd4Lignes.c: 193:     PORTBbits.RB4 = 1;
  3964  0018AE  8881               	bsf	129,4,c	;volatile
  3965  0018B0                     
  3966                           ;Lcd4Lignes.c: 194:     PORTAbits.RA5 = 0;
  3967  0018B0  9A80               	bcf	128,5,c	;volatile
  3968  0018B2                     
  3969                           ;Lcd4Lignes.c: 196:     lcd_ecrireDonnees(caractere >> 4);
  3970  0018B2  0100               	movlb	0	; force () banked
  3971  0018B4  39A4               	swapf	lcd_wrData@caractere& (0+255),w,b
  3972  0018B6  0B0F               	andlw	15
  3973  0018B8  EC6D  F00B         	call	_lcd_ecrireDonnees
  3974  0018BC                     
  3975                           ;Lcd4Lignes.c: 197:     lcd_strobeEnableBit();
  3976  0018BC  EC5C  F00D         	call	_lcd_strobeEnableBit	;wreg free
  3977  0018C0                     
  3978                           ;Lcd4Lignes.c: 198:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  3979  0018C0  D000               	nop2		;2 cycle nop
  3980  0018C2  D000               	nop2		;2 cycle nop
  3981  0018C4  D000               	nop2		;2 cycle nop
  3982  0018C6  D000               	nop2		;2 cycle nop
  3983  0018C8                     
  3984                           ;Lcd4Lignes.c: 200:     lcd_ecrireDonnees(caractere);
  3985  0018C8  0100               	movlb	0	; force () banked
  3986  0018CA  51A4               	movf	lcd_wrData@caractere& (0+255),w,b
  3987  0018CC  EC6D  F00B         	call	_lcd_ecrireDonnees
  3988  0018D0                     
  3989                           ;Lcd4Lignes.c: 201:     lcd_strobeEnableBit();
  3990  0018D0  EC5C  F00D         	call	_lcd_strobeEnableBit	;wreg free
  3991  0018D4                     
  3992                           ;Lcd4Lignes.c: 202:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  3993  0018D4  D000               	nop2		;2 cycle nop
  3994  0018D6  D000               	nop2		;2 cycle nop
  3995  0018D8  D000               	nop2		;2 cycle nop
  3996  0018DA  D000               	nop2		;2 cycle nop
  3997  0018DC                     
  3998                           ;Lcd4Lignes.c: 204:     TRISA = 0b00001111;
  3999  0018DC  0E0F               	movlw	15
  4000  0018DE  6E92               	movwf	146,c	;volatile
  4001  0018E0                     
  4002                           ;Lcd4Lignes.c: 205:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  4003  0018E0  D000               	nop2		;2 cycle nop
  4004  0018E2  D000               	nop2		;2 cycle nop
  4005  0018E4  D000               	nop2		;2 cycle nop
  4006  0018E6  D000               	nop2		;2 cycle nop
  4007                           
  4008                           ;Lcd4Lignes.c: 206:     return(lcd_busy());
  4009  0018E8  ECA9  F00B         	call	_lcd_busy	;wreg free
  4010  0018EC  0012               	return		;funcret
  4011  0018EE  FFFF               	dw	65535	; errata NOP
  4012  0018F0                     __end_of_lcd_wrData:
  4013                           	callstack 0
  4014                           
  4015 ;; *************** function _lcd_gotoXY *****************
  4016 ;; Defined at:
  4017 ;;		line 313 in file "Lcd4Lignes.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;  x               1    wreg     unsigned char 
  4020 ;;  y               1    6[BANK0 ] unsigned char 
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;  x               1    9[BANK0 ] unsigned char 
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1    wreg      void 
  4025 ;; Registers used:
  4026 ;;		wreg, status,2, status,0, cstack
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4032 ;;      Params:         0       1       0       0       0       0       0
  4033 ;;      Locals:         0       1       0       0       0       0       0
  4034 ;;      Temps:          0       2       0       0       0       0       0
  4035 ;;      Totals:         0       4       0       0       0       0       0
  4036 ;;Total ram usage:        4 bytes
  4037 ;; Hardware stack levels used: 1
  4038 ;; Hardware stack levels required when called: 3
  4039 ;; This function calls:
  4040 ;;		_lcd_wrCom
  4041 ;; This function is called by:
  4042 ;;		_affiche
  4043 ;;		_lcd_effaceLigne
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           	psect	text20
  4048  0014D0                     __ptext20:
  4049                           	callstack 0
  4050  0014D0                     _lcd_gotoXY:
  4051                           	callstack 0
  4052  0014D0  FFFF               	dw	65535	; assembler added errata NOP
  4053                           
  4054                           ;incstack = 0
  4055                           ;lcd_gotoXY@x stored from wreg
  4056  0014D2  0100               	movlb	0	; force () banked
  4057  0014D4  6FA9               	movwf	lcd_gotoXY@x& (0+255),b
  4058  0014D6                     
  4059                           ;Lcd4Lignes.c: 313: void lcd_gotoXY(unsigned char x, unsigned char y);Lcd4Lignes.c: 314:
      +                           {;Lcd4Lignes.c: 315:     switch(y)
  4060  0014D6  EF90  F00A         	goto	l1680
  4061  0014DA                     l1670:
  4062  0014DA  FFFF               	dw	65535	; assembler added errata NOP
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;Lcd4Lignes.c: 318:             lcd_wrCom((x-1+0x00)|0x80);
  4066  0014DC  0100               	movlb	0	; force () banked
  4067  0014DE  05A9               	decf	lcd_gotoXY@x& (0+255),w,b
  4068  0014E0  0980               	iorlw	128
  4069  0014E2  EC1A  F00A         	call	_lcd_wrCom
  4070                           
  4071                           ;Lcd4Lignes.c: 319:             break;
  4072  0014E6  EFB1  F00A         	goto	l67
  4073  0014EA                     l1672:
  4074  0014EA  FFFF               	dw	65535	; assembler added errata NOP
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;Lcd4Lignes.c: 321:             lcd_wrCom((x-1+0x40)|0x80);
  4078  0014EC  0100               	movlb	0	; force () banked
  4079  0014EE  51A9               	movf	lcd_gotoXY@x& (0+255),w,b
  4080  0014F0  0F3F               	addlw	63
  4081  0014F2  0980               	iorlw	128
  4082  0014F4  EC1A  F00A         	call	_lcd_wrCom
  4083                           
  4084                           ;Lcd4Lignes.c: 322:             break;
  4085  0014F8  EFB1  F00A         	goto	l67
  4086  0014FC                     l1674:
  4087  0014FC  FFFF               	dw	65535	; assembler added errata NOP
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;Lcd4Lignes.c: 324:             lcd_wrCom((x-1+0x14)|0x80);
  4091  0014FE  0100               	movlb	0	; force () banked
  4092  001500  51A9               	movf	lcd_gotoXY@x& (0+255),w,b
  4093  001502  0F13               	addlw	19
  4094  001504  0980               	iorlw	128
  4095  001506  EC1A  F00A         	call	_lcd_wrCom
  4096                           
  4097                           ;Lcd4Lignes.c: 325:             break;
  4098  00150A  EFB1  F00A         	goto	l67
  4099  00150E                     l1676:
  4100  00150E  FFFF               	dw	65535	; assembler added errata NOP
  4101                           
  4102                           ; BSR set to: 0
  4103                           ;Lcd4Lignes.c: 327:             lcd_wrCom((x-1+0x54)|0x80);
  4104  001510  0100               	movlb	0	; force () banked
  4105  001512  51A9               	movf	lcd_gotoXY@x& (0+255),w,b
  4106  001514  0F53               	addlw	83
  4107  001516  0980               	iorlw	128
  4108  001518  EC1A  F00A         	call	_lcd_wrCom
  4109                           
  4110                           ;Lcd4Lignes.c: 328:             break;
  4111  00151C  EFB1  F00A         	goto	l67
  4112  001520                     l1680:
  4113  001520  FFFF               	dw	65535	; assembler added errata NOP
  4114  001522  0100               	movlb	0	; force () banked
  4115  001524  51A6               	movf	lcd_gotoXY@y& (0+255),w,b
  4116  001526  0100               	movlb	0	; force () banked
  4117  001528  6FA7               	movwf	??_lcd_gotoXY& (0+255),b
  4118  00152A  6BA8               	clrf	(??_lcd_gotoXY+1)& (0+255),b
  4119                           
  4120                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4121                           ; Switch size 1, requested type "simple"
  4122                           ; Number of cases is 1, Range of values is 0 to 0
  4123                           ; switch strategies available:
  4124                           ; Name         Instructions Cycles
  4125                           ; simple_byte            4     3 (average)
  4126                           ;	Chosen strategy is simple_byte
  4127  00152C  51A8               	movf	(??_lcd_gotoXY+1)& (0+255),w,b
  4128  00152E  0A00               	xorlw	0	; case 0
  4129  001530  B4D8               	btfsc	status,2,c
  4130  001532  EF9D  F00A         	goto	l2028
  4131  001536  EFB1  F00A         	goto	l67
  4132  00153A                     l2028:
  4133  00153A  FFFF               	dw	65535	; assembler added errata NOP
  4134                           
  4135                           ; BSR set to: 0
  4136                           ; Switch size 1, requested type "simple"
  4137                           ; Number of cases is 4, Range of values is 1 to 4
  4138                           ; switch strategies available:
  4139                           ; Name         Instructions Cycles
  4140                           ; simple_byte           13     7 (average)
  4141                           ;	Chosen strategy is simple_byte
  4142  00153C  51A7               	movf	??_lcd_gotoXY& (0+255),w,b
  4143  00153E  0A01               	xorlw	1	; case 1
  4144  001540  B4D8               	btfsc	status,2,c
  4145  001542  EF6D  F00A         	goto	l1670
  4146  001546  0A03               	xorlw	3	; case 2
  4147  001548  B4D8               	btfsc	status,2,c
  4148  00154A  EF75  F00A         	goto	l1672
  4149  00154E  0A01               	xorlw	1	; case 3
  4150  001550  B4D8               	btfsc	status,2,c
  4151  001552  EF7E  F00A         	goto	l1674
  4152  001556  0A07               	xorlw	7	; case 4
  4153  001558  B4D8               	btfsc	status,2,c
  4154  00155A  EF87  F00A         	goto	l1676
  4155  00155E  EFB1  F00A         	goto	l67
  4156  001562                     l67:
  4157  001562  FFFF               	dw	65535	; assembler added errata NOP
  4158  001564  0012               	return		;funcret
  4159  001566  FFFF               	dw	65535	; errata NOP
  4160  001568                     __end_of_lcd_gotoXY:
  4161                           	callstack 0
  4162                           
  4163 ;; *************** function _lcd_effaceAffichage *****************
  4164 ;; Defined at:
  4165 ;;		line 275 in file "Lcd4Lignes.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;		None
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;		None
  4170 ;; Return value:  Size  Location     Type
  4171 ;;                  1    wreg      void 
  4172 ;; Registers used:
  4173 ;;		wreg, status,2, status,0, cstack
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4179 ;;      Params:         0       0       0       0       0       0       0
  4180 ;;      Locals:         0       0       0       0       0       0       0
  4181 ;;      Temps:          0       0       0       0       0       0       0
  4182 ;;      Totals:         0       0       0       0       0       0       0
  4183 ;;Total ram usage:        0 bytes
  4184 ;; Hardware stack levels used: 1
  4185 ;; Hardware stack levels required when called: 3
  4186 ;; This function calls:
  4187 ;;		_lcd_wrCom
  4188 ;; This function is called by:
  4189 ;;		_affiche
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           	psect	text21
  4194  001A9A                     __ptext21:
  4195                           	callstack 0
  4196  001A9A                     _lcd_effaceAffichage:
  4197                           	callstack 0
  4198  001A9A  FFFF               	dw	65535	; assembler added errata NOP
  4199  001A9C                     
  4200                           ;Lcd4Lignes.c: 277:     lcd_wrCom(0x01);
  4201  001A9C  0E01               	movlw	1
  4202  001A9E  EC1A  F00A         	call	_lcd_wrCom
  4203                           
  4204                           ;Lcd4Lignes.c: 278:     lcd_wrCom(0x80);
  4205  001AA2  0E80               	movlw	128
  4206  001AA4  EC1A  F00A         	call	_lcd_wrCom
  4207  001AA8  0012               	return		;funcret
  4208  001AAA  FFFF               	dw	65535	; errata NOP
  4209  001AAC                     __end_of_lcd_effaceAffichage:
  4210                           	callstack 0
  4211                           
  4212 ;; *************** function _lcd_curseurHome *****************
  4213 ;; Defined at:
  4214 ;;		line 287 in file "Lcd4Lignes.c"
  4215 ;; Parameters:    Size  Location     Type
  4216 ;;		None
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;		None
  4219 ;; Return value:  Size  Location     Type
  4220 ;;                  1    wreg      void 
  4221 ;; Registers used:
  4222 ;;		wreg, status,2, status,0, cstack
  4223 ;; Tracked objects:
  4224 ;;		On entry : 0/0
  4225 ;;		On exit  : 0/0
  4226 ;;		Unchanged: 0/0
  4227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4228 ;;      Params:         0       0       0       0       0       0       0
  4229 ;;      Locals:         0       0       0       0       0       0       0
  4230 ;;      Temps:          0       0       0       0       0       0       0
  4231 ;;      Totals:         0       0       0       0       0       0       0
  4232 ;;Total ram usage:        0 bytes
  4233 ;; Hardware stack levels used: 1
  4234 ;; Hardware stack levels required when called: 3
  4235 ;; This function calls:
  4236 ;;		_lcd_wrCom
  4237 ;; This function is called by:
  4238 ;;		_lcd_initCGRam
  4239 ;;		_main
  4240 ;;		_affiche
  4241 ;; This function uses a non-reentrant model
  4242 ;;
  4243                           
  4244                           	psect	text22
  4245  001AAC                     __ptext22:
  4246                           	callstack 0
  4247  001AAC                     _lcd_curseurHome:
  4248                           	callstack 0
  4249  001AAC  FFFF               	dw	65535	; assembler added errata NOP
  4250  001AAE                     
  4251                           ;Lcd4Lignes.c: 289:     lcd_wrCom(0x02);
  4252  001AAE  0E02               	movlw	2
  4253  001AB0  EC1A  F00A         	call	_lcd_wrCom
  4254  001AB4  0012               	return		;funcret
  4255  001AB6  FFFF               	dw	65535	; errata NOP
  4256  001AB8                     __end_of_lcd_curseurHome:
  4257                           	callstack 0
  4258                           
  4259 ;; *************** function _lcd_wrCom *****************
  4260 ;; Defined at:
  4261 ;;		line 155 in file "Lcd4Lignes.c"
  4262 ;; Parameters:    Size  Location     Type
  4263 ;;  commande        1    wreg     unsigned char 
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;  commande        1    5[BANK0 ] unsigned char 
  4266 ;; Return value:  Size  Location     Type
  4267 ;;                  1    wreg      unsigned char 
  4268 ;; Registers used:
  4269 ;;		wreg, status,2, status,0, cstack
  4270 ;; Tracked objects:
  4271 ;;		On entry : 0/0
  4272 ;;		On exit  : 0/0
  4273 ;;		Unchanged: 0/0
  4274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4275 ;;      Params:         0       0       0       0       0       0       0
  4276 ;;      Locals:         0       1       0       0       0       0       0
  4277 ;;      Temps:          0       1       0       0       0       0       0
  4278 ;;      Totals:         0       2       0       0       0       0       0
  4279 ;;Total ram usage:        2 bytes
  4280 ;; Hardware stack levels used: 1
  4281 ;; Hardware stack levels required when called: 2
  4282 ;; This function calls:
  4283 ;;		_lcd_busy
  4284 ;;		_lcd_ecrireDonnees
  4285 ;;		_lcd_strobeEnableBit
  4286 ;; This function is called by:
  4287 ;;		_lcd_init
  4288 ;;		_lcd_effaceAffichage
  4289 ;;		_lcd_curseurHome
  4290 ;;		_lcd_gotoXY
  4291 ;;		_lcd_ecritChar
  4292 ;;		_lcd_initCGRam
  4293 ;;		_lcd_cacheCurseur
  4294 ;;		_lcd_montreCurseur
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           	psect	text23
  4299  001434                     __ptext23:
  4300                           	callstack 0
  4301  001434                     _lcd_wrCom:
  4302                           	callstack 0
  4303  001434  FFFF               	dw	65535	; assembler added errata NOP
  4304                           
  4305                           ;incstack = 0
  4306                           ;lcd_wrCom@commande stored from wreg
  4307  001436  0100               	movlb	0	; force () banked
  4308  001438  6FA5               	movwf	lcd_wrCom@commande& (0+255),b
  4309  00143A                     
  4310                           ;Lcd4Lignes.c: 155: static unsigned char lcd_wrCom(unsigned char commande);Lcd4Lignes.c:
      +                           156: {;Lcd4Lignes.c: 157:     lcd_busy();
  4311  00143A  ECA9  F00B         	call	_lcd_busy	;wreg free
  4312  00143E                     
  4313                           ;Lcd4Lignes.c: 159:     TRISA = 0b00000000;
  4314  00143E  0E00               	movlw	0
  4315  001440  6E92               	movwf	146,c	;volatile
  4316  001442                     
  4317                           ;Lcd4Lignes.c: 160:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  4318  001442  D000               	nop2		;2 cycle nop
  4319  001444  D000               	nop2		;2 cycle nop
  4320  001446  D000               	nop2		;2 cycle nop
  4321  001448  D000               	nop2		;2 cycle nop
  4322  00144A                     
  4323                           ;Lcd4Lignes.c: 162:     PORTBbits.RB4 = 0;
  4324  00144A  9881               	bcf	129,4,c	;volatile
  4325  00144C                     
  4326                           ;Lcd4Lignes.c: 163:     PORTAbits.RA5 = 0;
  4327  00144C  9A80               	bcf	128,5,c	;volatile
  4328  00144E                     
  4329                           ;Lcd4Lignes.c: 165:     lcd_ecrireDonnees(commande >> 4);
  4330  00144E  0100               	movlb	0	; force () banked
  4331  001450  39A5               	swapf	lcd_wrCom@commande& (0+255),w,b
  4332  001452  0B0F               	andlw	15
  4333  001454  EC6D  F00B         	call	_lcd_ecrireDonnees
  4334  001458                     
  4335                           ;Lcd4Lignes.c: 166:     lcd_strobeEnableBit();
  4336  001458  EC5C  F00D         	call	_lcd_strobeEnableBit	;wreg free
  4337  00145C                     
  4338                           ;Lcd4Lignes.c: 167:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  4339  00145C  D000               	nop2		;2 cycle nop
  4340  00145E  D000               	nop2		;2 cycle nop
  4341  001460  D000               	nop2		;2 cycle nop
  4342  001462  D000               	nop2		;2 cycle nop
  4343  001464                     
  4344                           ;Lcd4Lignes.c: 169:     lcd_ecrireDonnees(commande);
  4345  001464  0100               	movlb	0	; force () banked
  4346  001466  51A5               	movf	lcd_wrCom@commande& (0+255),w,b
  4347  001468  EC6D  F00B         	call	_lcd_ecrireDonnees
  4348  00146C                     
  4349                           ;Lcd4Lignes.c: 170:     lcd_strobeEnableBit();
  4350  00146C  EC5C  F00D         	call	_lcd_strobeEnableBit	;wreg free
  4351  001470                     
  4352                           ;Lcd4Lignes.c: 171:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  4353  001470  0E28               	movlw	40
  4354  001472                     u997:
  4355  001472  FFFF               	dw	65535	; errata NOP
  4356  001474  2EE8               	decfsz	wreg,f,c
  4357  001476  D7FD               	bra	u997
  4358  001478                     
  4359                           ;Lcd4Lignes.c: 173:     if ((commande == 0x01) || commande == 0x02)
  4360  001478  0100               	movlb	0	; force () banked
  4361  00147A  05A5               	decf	lcd_wrCom@commande& (0+255),w,b
  4362  00147C  B4D8               	btfsc	status,2,c
  4363  00147E  EF43  F00A         	goto	u21
  4364  001482  EF46  F00A         	goto	u20
  4365  001486                     u21:
  4366  001486  FFFF               	dw	65535	; assembler added errata NOP
  4367  001488  EF52  F00A         	goto	l1048
  4368  00148C                     u20:
  4369  00148C  FFFF               	dw	65535	; assembler added errata NOP
  4370  00148E                     
  4371                           ; BSR set to: 0
  4372  00148E  0E02               	movlw	2
  4373  001490  0100               	movlb	0	; force () banked
  4374  001492  19A5               	xorwf	lcd_wrCom@commande& (0+255),w,b
  4375  001494  A4D8               	btfss	status,2,c
  4376  001496  EF4F  F00A         	goto	u31
  4377  00149A  EF52  F00A         	goto	u30
  4378  00149E                     u31:
  4379  00149E  FFFF               	dw	65535	; assembler added errata NOP
  4380  0014A0  EF5D  F00A         	goto	l1050
  4381  0014A4                     u30:
  4382  0014A4                     l1048:
  4383  0014A4  FFFF               	dw	65535	; assembler added errata NOP
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;Lcd4Lignes.c: 174:         _delay((unsigned long)((2)*(16000000/4000.0)));
  4387  0014A6  0E08               	movlw	8
  4388  0014A8  0100               	movlb	0	; force () banked
  4389  0014AA  6FA4               	movwf	??_lcd_wrCom& (0+255),b
  4390  0014AC  0ECB               	movlw	203
  4391  0014AE                     u1007:
  4392  0014AE  FFFF               	dw	65535	; errata NOP
  4393  0014B0  2EE8               	decfsz	wreg,f,c
  4394  0014B2  D7FD               	bra	u1007
  4395  0014B4  2FA4               	decfsz	??_lcd_wrCom& (0+255),f,b
  4396  0014B6  D7FB               	bra	u1007
  4397  0014B8  F000               	nop	
  4398  0014BA                     l1050:
  4399  0014BA  FFFF               	dw	65535	; assembler added errata NOP
  4400                           
  4401                           ;Lcd4Lignes.c: 176:     TRISA = 0b00001111;
  4402  0014BC  0E0F               	movlw	15
  4403  0014BE  6E92               	movwf	146,c	;volatile
  4404  0014C0                     
  4405                           ;Lcd4Lignes.c: 177:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  4406  0014C0  D000               	nop2		;2 cycle nop
  4407  0014C2  D000               	nop2		;2 cycle nop
  4408  0014C4  D000               	nop2		;2 cycle nop
  4409  0014C6  D000               	nop2		;2 cycle nop
  4410  0014C8                     
  4411                           ;Lcd4Lignes.c: 178:     return(lcd_busy());
  4412  0014C8  ECA9  F00B         	call	_lcd_busy	;wreg free
  4413  0014CC  0012               	return		;funcret
  4414  0014CE  FFFF               	dw	65535	; errata NOP
  4415  0014D0                     __end_of_lcd_wrCom:
  4416                           	callstack 0
  4417                           
  4418 ;; *************** function _lcd_strobeEnableBit *****************
  4419 ;; Defined at:
  4420 ;;		line 430 in file "Lcd4Lignes.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;		None
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;		None
  4425 ;; Return value:  Size  Location     Type
  4426 ;;                  1    wreg      void 
  4427 ;; Registers used:
  4428 ;;		None
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4434 ;;      Params:         0       0       0       0       0       0       0
  4435 ;;      Locals:         0       0       0       0       0       0       0
  4436 ;;      Temps:          0       0       0       0       0       0       0
  4437 ;;      Totals:         0       0       0       0       0       0       0
  4438 ;;Total ram usage:        0 bytes
  4439 ;; Hardware stack levels used: 1
  4440 ;; This function calls:
  4441 ;;		Nothing
  4442 ;; This function is called by:
  4443 ;;		_lcd_wrCom
  4444 ;;		_lcd_wrData
  4445 ;;		_lcd_resetSequence
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448                           
  4449                           	psect	text24
  4450  001AB8                     __ptext24:
  4451                           	callstack 0
  4452  001AB8                     _lcd_strobeEnableBit:
  4453                           	callstack 0
  4454  001AB8  FFFF               	dw	65535	; assembler added errata NOP
  4455  001ABA                     
  4456                           ;Lcd4Lignes.c: 432:     PORTAbits.RA4 = 1;
  4457  001ABA  8880               	bsf	128,4,c	;volatile
  4458                           
  4459                           ;Lcd4Lignes.c: 433:     __nop();
  4460  001ABC  F000               	nop	
  4461                           
  4462                           ;Lcd4Lignes.c: 434:     PORTAbits.RA4 = 0;
  4463  001ABE  9880               	bcf	128,4,c	;volatile
  4464  001AC0  0012               	return		;funcret
  4465  001AC2  FFFF               	dw	65535	; errata NOP
  4466  001AC4                     __end_of_lcd_strobeEnableBit:
  4467                           	callstack 0
  4468                           
  4469 ;; *************** function _lcd_ecrireDonnees *****************
  4470 ;; Defined at:
  4471 ;;		line 105 in file "Lcd4Lignes.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;  donnee          1    wreg     unsigned char 
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;  donnee          1    1[BANK0 ] unsigned char 
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  1    wreg      void 
  4478 ;; Registers used:
  4479 ;;		wreg, status,2, status,0
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4485 ;;      Params:         0       0       0       0       0       0       0
  4486 ;;      Locals:         0       1       0       0       0       0       0
  4487 ;;      Temps:          0       1       0       0       0       0       0
  4488 ;;      Totals:         0       2       0       0       0       0       0
  4489 ;;Total ram usage:        2 bytes
  4490 ;; Hardware stack levels used: 1
  4491 ;; This function calls:
  4492 ;;		Nothing
  4493 ;; This function is called by:
  4494 ;;		_lcd_wrCom
  4495 ;;		_lcd_wrData
  4496 ;;		_lcd_resetSequence
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500                           	psect	text25
  4501  0016DA                     __ptext25:
  4502                           	callstack 0
  4503  0016DA                     _lcd_ecrireDonnees:
  4504                           	callstack 0
  4505  0016DA  FFFF               	dw	65535	; assembler added errata NOP
  4506                           
  4507                           ;incstack = 0
  4508                           ;lcd_ecrireDonnees@donnee stored from wreg
  4509  0016DC  0100               	movlb	0	; force () banked
  4510  0016DE  6FA1               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  4511  0016E0                     
  4512                           ;Lcd4Lignes.c: 105: static void lcd_ecrireDonnees(unsigned char donnee);Lcd4Lignes.c: 10
      +                          6: {;Lcd4Lignes.c: 109:     PORTAbits.RA0 = (donnee & 0x01);
  4513  0016E0  C0A1  F0A0         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  4514  0016E4  0E01               	movlw	1
  4515  0016E6  0100               	movlb	0	; force () banked
  4516  0016E8  17A0               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  4517  0016EA  5080               	movf	128,w,c	;volatile
  4518  0016EC  19A0               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4519  0016EE  0BFE               	andlw	-2
  4520  0016F0  19A0               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4521  0016F2  6E80               	movwf	128,c	;volatile
  4522                           
  4523                           ;Lcd4Lignes.c: 110:     PORTAbits.RA1 = ((donnee >> 1) & 0x01);
  4524  0016F4  C0A1  F0A0         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  4525  0016F8  90D8               	bcf	status,0,c
  4526  0016FA  33A0               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  4527  0016FC  0E01               	movlw	1
  4528  0016FE  17A0               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  4529  001700  47A0               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  4530  001702  5080               	movf	128,w,c	;volatile
  4531  001704  19A0               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4532  001706  0BFD               	andlw	-3
  4533  001708  19A0               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4534  00170A  6E80               	movwf	128,c	;volatile
  4535                           
  4536                           ;Lcd4Lignes.c: 111:     PORTAbits.RA2 = ((donnee >> 2) & 0x01);
  4537  00170C  C0A1  F0A0         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  4538  001710  90D8               	bcf	status,0,c
  4539  001712  33A0               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  4540  001714  90D8               	bcf	status,0,c
  4541  001716  33A0               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  4542  001718  0E01               	movlw	1
  4543  00171A  17A0               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  4544  00171C  47A0               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  4545  00171E  47A0               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  4546  001720  5080               	movf	128,w,c	;volatile
  4547  001722  19A0               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4548  001724  0BFB               	andlw	-5
  4549  001726  19A0               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4550  001728  6E80               	movwf	128,c	;volatile
  4551                           
  4552                           ;Lcd4Lignes.c: 112:     PORTAbits.RA3 = ((donnee >> 3) & 0x01);
  4553  00172A  C0A1  F0A0         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  4554  00172E  90D8               	bcf	status,0,c
  4555  001730  33A0               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  4556  001732  90D8               	bcf	status,0,c
  4557  001734  33A0               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  4558  001736  90D8               	bcf	status,0,c
  4559  001738  33A0               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  4560  00173A  0E01               	movlw	1
  4561  00173C  17A0               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  4562  00173E  47A0               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  4563  001740  47A0               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  4564  001742  47A0               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  4565  001744  5080               	movf	128,w,c	;volatile
  4566  001746  19A0               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4567  001748  0BF7               	andlw	-9
  4568  00174A  19A0               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4569  00174C  6E80               	movwf	128,c	;volatile
  4570  00174E                     
  4571                           ; BSR set to: 0
  4572  00174E  0012               	return		;funcret
  4573  001750  FFFF               	dw	65535	; errata NOP
  4574  001752                     __end_of_lcd_ecrireDonnees:
  4575                           	callstack 0
  4576                           
  4577 ;; *************** function _lcd_busy *****************
  4578 ;; Defined at:
  4579 ;;		line 122 in file "Lcd4Lignes.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;		None
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;  adresse         2    2[BANK0 ] int 
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      unsigned char 
  4586 ;; Registers used:
  4587 ;;		wreg, status,2, status,0, cstack
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4593 ;;      Params:         0       0       0       0       0       0       0
  4594 ;;      Locals:         0       2       0       0       0       0       0
  4595 ;;      Temps:          0       2       0       0       0       0       0
  4596 ;;      Totals:         0       4       0       0       0       0       0
  4597 ;;Total ram usage:        4 bytes
  4598 ;; Hardware stack levels used: 1
  4599 ;; Hardware stack levels required when called: 1
  4600 ;; This function calls:
  4601 ;;		_lcd_lireDonnees
  4602 ;; This function is called by:
  4603 ;;		_lcd_wrCom
  4604 ;;		_lcd_wrData
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           	psect	text26
  4609  001752                     __ptext26:
  4610                           	callstack 0
  4611  001752                     _lcd_busy:
  4612                           	callstack 0
  4613  001752  FFFF               	dw	65535	; assembler added errata NOP
  4614  001754                     
  4615                           ;Lcd4Lignes.c: 125:     int adresse;;Lcd4Lignes.c: 127:     PORTBbits.RB4 = 0;
  4616  001754  9881               	bcf	129,4,c	;volatile
  4617                           
  4618                           ;Lcd4Lignes.c: 128:     PORTAbits.RA5 = 1;
  4619  001756  8A80               	bsf	128,5,c	;volatile
  4620  001758                     l29:
  4621  001758  FFFF               	dw	65535	; assembler added errata NOP
  4622                           
  4623                           ;Lcd4Lignes.c: 131:     {;Lcd4Lignes.c: 132:         PORTAbits.RA4 = 1;
  4624  00175A  8880               	bsf	128,4,c	;volatile
  4625                           
  4626                           ;Lcd4Lignes.c: 133:         __nop();
  4627  00175C  F000               	nop	
  4628  00175E                     
  4629                           ;Lcd4Lignes.c: 134:         adresse = lcd_lireDonnees() << 4;
  4630  00175E  EC62  F00D         	call	_lcd_lireDonnees	;wreg free
  4631  001762  0100               	movlb	0	; force () banked
  4632  001764  6FA0               	movwf	??_lcd_busy& (0+255),b
  4633  001766  6BA1               	clrf	(??_lcd_busy+1)& (0+255),b
  4634  001768  3BA0               	swapf	??_lcd_busy& (0+255),f,b
  4635  00176A  3BA1               	swapf	(??_lcd_busy+1)& (0+255),f,b
  4636  00176C  0EF0               	movlw	240
  4637  00176E  17A1               	andwf	(??_lcd_busy+1)& (0+255),f,b
  4638  001770  51A0               	movf	??_lcd_busy& (0+255),w,b
  4639  001772  0B0F               	andlw	15
  4640  001774  13A1               	iorwf	(??_lcd_busy+1)& (0+255),f,b
  4641  001776  0EF0               	movlw	240
  4642  001778  17A0               	andwf	??_lcd_busy& (0+255),f,b
  4643  00177A  C0A0  F0A2         	movff	??_lcd_busy,lcd_busy@adresse
  4644  00177E  C0A1  F0A3         	movff	??_lcd_busy+1,lcd_busy@adresse+1
  4645  001782                     
  4646                           ; BSR set to: 0
  4647                           ;Lcd4Lignes.c: 135:         PORTAbits.RA4 = 0;
  4648  001782  9880               	bcf	128,4,c	;volatile
  4649  001784                     
  4650                           ; BSR set to: 0
  4651                           ;Lcd4Lignes.c: 136:         _delay((unsigned long)((2)*(16000000/4000000.0)));
  4652  001784  D000               	nop2		;2 cycle nop
  4653  001786  D000               	nop2		;2 cycle nop
  4654  001788  D000               	nop2		;2 cycle nop
  4655  00178A  D000               	nop2		;2 cycle nop
  4656  00178C                     
  4657                           ;Lcd4Lignes.c: 137:         PORTAbits.RA4 = 1;
  4658  00178C  8880               	bsf	128,4,c	;volatile
  4659  00178E                     
  4660                           ;Lcd4Lignes.c: 138:         __nop();
  4661  00178E  F000               	nop	
  4662                           
  4663                           ;Lcd4Lignes.c: 139:         adresse |= lcd_lireDonnees();
  4664  001790  EC62  F00D         	call	_lcd_lireDonnees	;wreg free
  4665  001794  0100               	movlb	0	; force () banked
  4666  001796  6FA0               	movwf	??_lcd_busy& (0+255),b
  4667  001798  51A0               	movf	??_lcd_busy& (0+255),w,b
  4668  00179A  0100               	movlb	0	; force () banked
  4669  00179C  13A2               	iorwf	lcd_busy@adresse& (0+255),f,b
  4670  00179E                     
  4671                           ; BSR set to: 0
  4672                           ;Lcd4Lignes.c: 140:         PORTAbits.RA4 = 0;
  4673  00179E  9880               	bcf	128,4,c	;volatile
  4674  0017A0                     
  4675                           ; BSR set to: 0
  4676                           ;Lcd4Lignes.c: 141:         _delay((unsigned long)((2)*(16000000/4000000.0)));
  4677  0017A0  D000               	nop2		;2 cycle nop
  4678  0017A2  D000               	nop2		;2 cycle nop
  4679  0017A4  D000               	nop2		;2 cycle nop
  4680  0017A6  D000               	nop2		;2 cycle nop
  4681  0017A8                     
  4682                           ;Lcd4Lignes.c: 142:     }
  4683  0017A8  0100               	movlb	0	; force () banked
  4684  0017AA  BFA2               	btfsc	lcd_busy@adresse& (0+255),7,b
  4685  0017AC  EFDA  F00B         	goto	u11
  4686  0017B0  EFDD  F00B         	goto	u10
  4687  0017B4                     u11:
  4688  0017B4  FFFF               	dw	65535	; assembler added errata NOP
  4689  0017B6  EFAC  F00B         	goto	l29
  4690  0017BA                     u10:
  4691  0017BA  FFFF               	dw	65535	; assembler added errata NOP
  4692  0017BC                     
  4693                           ; BSR set to: 0
  4694                           ;Lcd4Lignes.c: 145:     PORTAbits.RA5 = 0;
  4695  0017BC  9A80               	bcf	128,5,c	;volatile
  4696  0017BE                     
  4697                           ; BSR set to: 0
  4698                           ;Lcd4Lignes.c: 146:     return(adresse&0x7f);
  4699  0017BE  0100               	movlb	0	; force () banked
  4700  0017C0  51A2               	movf	lcd_busy@adresse& (0+255),w,b
  4701  0017C2  0B7F               	andlw	127
  4702  0017C4                     
  4703                           ; BSR set to: 0
  4704  0017C4  0012               	return		;funcret
  4705  0017C6  FFFF               	dw	65535	; errata NOP
  4706  0017C8                     __end_of_lcd_busy:
  4707                           	callstack 0
  4708                           
  4709 ;; *************** function _lcd_lireDonnees *****************
  4710 ;; Defined at:
  4711 ;;		line 92 in file "Lcd4Lignes.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;		None
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;		None
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  1    wreg      unsigned char 
  4718 ;; Registers used:
  4719 ;;		wreg, status,2, status,0
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4725 ;;      Params:         0       0       0       0       0       0       0
  4726 ;;      Locals:         0       0       0       0       0       0       0
  4727 ;;      Temps:          0       0       0       0       0       0       0
  4728 ;;      Totals:         0       0       0       0       0       0       0
  4729 ;;Total ram usage:        0 bytes
  4730 ;; Hardware stack levels used: 1
  4731 ;; This function calls:
  4732 ;;		Nothing
  4733 ;; This function is called by:
  4734 ;;		_lcd_busy
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           
  4738                           	psect	text27
  4739  001AC4                     __ptext27:
  4740                           	callstack 0
  4741  001AC4                     _lcd_lireDonnees:
  4742                           	callstack 0
  4743  001AC4  FFFF               	dw	65535	; assembler added errata NOP
  4744  001AC6                     
  4745                           ;Lcd4Lignes.c: 95:     return (PORTA & 0x0F);
  4746  001AC6  5080               	movf	128,w,c	;volatile
  4747  001AC8  0B0F               	andlw	15
  4748  001ACA  0012               	return		;funcret
  4749  001ACC  FFFF               	dw	65535	; errata NOP
  4750  001ACE                     __end_of_lcd_lireDonnees:
  4751                           	callstack 0
  4752                           
  4753 ;; *************** function ___wmul *****************
  4754 ;; Defined at:
  4755 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  4756 ;; Parameters:    Size  Location     Type
  4757 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4758 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;  product         2    4[BANK0 ] unsigned int 
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  2    0[BANK0 ] unsigned int 
  4763 ;; Registers used:
  4764 ;;		wreg, status,2, status,0, prodl, prodh
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4770 ;;      Params:         0       4       0       0       0       0       0
  4771 ;;      Locals:         0       2       0       0       0       0       0
  4772 ;;      Temps:          0       0       0       0       0       0       0
  4773 ;;      Totals:         0       6       0       0       0       0       0
  4774 ;;Total ram usage:        6 bytes
  4775 ;; Hardware stack levels used: 1
  4776 ;; This function calls:
  4777 ;;		Nothing
  4778 ;; This function is called by:
  4779 ;;		_gereTouche
  4780 ;;		_verifNip
  4781 ;;		_affiche
  4782 ;;		_atoi
  4783 ;; This function uses a non-reentrant model
  4784 ;;
  4785                           
  4786                           	psect	text28
  4787  0019FC                     __ptext28:
  4788                           	callstack 0
  4789  0019FC                     ___wmul:
  4790                           	callstack 0
  4791  0019FC  FFFF               	dw	65535	; assembler added errata NOP
  4792  0019FE  0100               	movlb	0	; () banked
  4793  001A00  51A0               	movf	___wmul@multiplier& (0+255),w,b
  4794  001A02  03A2               	mulwf	___wmul@multiplicand& (0+255),b
  4795  001A04  CFF3 F0A4          	movff	prodl,___wmul@product
  4796  001A08  CFF4 F0A5          	movff	prodh,___wmul@product+1
  4797  001A0C  51A0               	movf	___wmul@multiplier& (0+255),w,b
  4798  001A0E  03A3               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  4799  001A10  50F3               	movf	243,w,c
  4800  001A12  27A5               	addwf	(___wmul@product+1)& (0+255),f,b
  4801  001A14  51A1               	movf	(___wmul@multiplier+1)& (0+255),w,b
  4802  001A16  03A2               	mulwf	___wmul@multiplicand& (0+255),b
  4803  001A18  50F3               	movf	243,w,c
  4804  001A1A  27A5               	addwf	(___wmul@product+1)& (0+255),f,b
  4805  001A1C                     
  4806                           ; BSR set to: 0
  4807  001A1C  C0A4  F0A0         	movff	___wmul@product,?___wmul
  4808  001A20  C0A5  F0A1         	movff	___wmul@product+1,?___wmul+1
  4809  001A24                     
  4810                           ; BSR set to: 0
  4811  001A24  0012               	return		;funcret
  4812  001A26  FFFF               	dw	65535	; errata NOP
  4813  001A28                     __end_of___wmul:
  4814                           	callstack 0
  4815                           
  4816                           	psect	param0
  4817  0000                     
  4818                           	psect	idloc
  4819                           
  4820                           ;Config register IDLOC0 @ 0x200000
  4821                           ;	unspecified, using default values
  4822  200000                     	org	2097152
  4823  200000  FF                 	db	255
  4824                           
  4825                           ;Config register IDLOC1 @ 0x200001
  4826                           ;	unspecified, using default values
  4827  200001                     	org	2097153
  4828  200001  FF                 	db	255
  4829                           
  4830                           ;Config register IDLOC2 @ 0x200002
  4831                           ;	unspecified, using default values
  4832  200002                     	org	2097154
  4833  200002  FF                 	db	255
  4834                           
  4835                           ;Config register IDLOC3 @ 0x200003
  4836                           ;	unspecified, using default values
  4837  200003                     	org	2097155
  4838  200003  FF                 	db	255
  4839                           
  4840                           ;Config register IDLOC4 @ 0x200004
  4841                           ;	unspecified, using default values
  4842  200004                     	org	2097156
  4843  200004  FF                 	db	255
  4844                           
  4845                           ;Config register IDLOC5 @ 0x200005
  4846                           ;	unspecified, using default values
  4847  200005                     	org	2097157
  4848  200005  FF                 	db	255
  4849                           
  4850                           ;Config register IDLOC6 @ 0x200006
  4851                           ;	unspecified, using default values
  4852  200006                     	org	2097158
  4853  200006  FF                 	db	255
  4854                           
  4855                           ;Config register IDLOC7 @ 0x200007
  4856                           ;	unspecified, using default values
  4857  200007                     	org	2097159
  4858  200007  FF                 	db	255
  4859                           
  4860                           	psect	config
  4861                           
  4862                           ; Padding undefined space
  4863  300000                     	org	3145728
  4864  300000  FF                 	db	255
  4865                           
  4866                           ;Config register CONFIG1H @ 0x300001
  4867                           ;	Oscillator Selection bits
  4868                           ;	OSC = HS, HS oscillator
  4869                           ;	Oscillator System Clock Switch Enable bit
  4870                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  4871  300001                     	org	3145729
  4872  300001  22                 	db	34
  4873                           
  4874                           ;Config register CONFIG2L @ 0x300002
  4875                           ;	Power-up Timer Enable bit
  4876                           ;	PWRT = OFF, PWRT disabled
  4877                           ;	Brown-out Reset Enable bit
  4878                           ;	BOR = OFF, Brown-out Reset disabled
  4879                           ;	Brown-out Reset Voltage bits
  4880                           ;	BORV = 25, VBOR set to 2.5V
  4881  300002                     	org	3145730
  4882  300002  0D                 	db	13
  4883                           
  4884                           ;Config register CONFIG2H @ 0x300003
  4885                           ;	Watchdog Timer Enable bit
  4886                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4887                           ;	Watchdog Timer Postscale Select bits
  4888                           ;	WDTPS = 128, 1:128
  4889  300003                     	org	3145731
  4890  300003  0E                 	db	14
  4891                           
  4892                           ;Config register CONFIG4L @ 0x300006
  4893                           ;	Stack Full/Underflow Reset Enable bit
  4894                           ;	STVR = OFF, Stack Full/Underflow will not cause Reset
  4895                           ;	Low-Voltage ICSP Enable bit
  4896                           ;	LVP = OFF, Low-Voltage ICSP disabled
  4897                           ;	Background Debugger Enable bit
  4898                           ;	DEBUG = 0x1, unprogrammed default
  4899  300006                     	org	3145734
  4900  300006  80                 	db	128
  4901                           
  4902                           ; Padding undefined space
  4903  300007                     	org	3145735
  4904  300007  FF                 	db	255
  4905                           
  4906                           ;Config register CONFIG5L @ 0x300008
  4907                           ;	Code Protection bit
  4908                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  4909                           ;	Code Protection bit
  4910                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  4911                           ;	Code Protection bit
  4912                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  4913                           ;	Code Protection bit
  4914                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  4915  300008                     	org	3145736
  4916  300008  0F                 	db	15
  4917                           
  4918                           ;Config register CONFIG5H @ 0x300009
  4919                           ;	Boot Block Code Protection bit
  4920                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  4921                           ;	Data EEPROM Code Protection bit
  4922                           ;	CPD = OFF, Data EEPROM not code protected
  4923  300009                     	org	3145737
  4924  300009  C0                 	db	192
  4925                           
  4926                           ;Config register CONFIG6L @ 0x30000A
  4927                           ;	Write Protection bit
  4928                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  4929                           ;	Write Protection bit
  4930                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  4931                           ;	Write Protection bit
  4932                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  4933                           ;	Write Protection bit
  4934                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  4935  30000A                     	org	3145738
  4936  30000A  0F                 	db	15
  4937                           
  4938                           ;Config register CONFIG6H @ 0x30000B
  4939                           ;	Configuration Register Write Protection bit
  4940                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  4941                           ;	Boot Block Write Protection bit
  4942                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  4943                           ;	Data EEPROM Write Protection bit
  4944                           ;	WRTD = OFF, Data EEPROM not write protected
  4945  30000B                     	org	3145739
  4946  30000B  E0                 	db	224
  4947                           
  4948                           ;Config register CONFIG7L @ 0x30000C
  4949                           ;	Table Read Protection bit
  4950                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  4951                           ;	Table Read Protection bit
  4952                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  4953                           ;	Table Read Protection bit
  4954                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  4955                           ;	Table Read Protection bit
  4956                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  4957  30000C                     	org	3145740
  4958  30000C  0F                 	db	15
  4959                           
  4960                           ;Config register CONFIG7H @ 0x30000D
  4961                           ;	Boot Block Table Read Protection bit
  4962                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  4963  30000D                     	org	3145741
  4964  30000D  40                 	db	64
  4965                           tosu	equ	0xFFF
  4966                           tosh	equ	0xFFE
  4967                           tosl	equ	0xFFD
  4968                           stkptr	equ	0xFFC
  4969                           pclatu	equ	0xFFB
  4970                           pclath	equ	0xFFA
  4971                           pcl	equ	0xFF9
  4972                           tblptru	equ	0xFF8
  4973                           tblptrh	equ	0xFF7
  4974                           tblptrl	equ	0xFF6
  4975                           tablat	equ	0xFF5
  4976                           prodh	equ	0xFF4
  4977                           prodl	equ	0xFF3
  4978                           indf0	equ	0xFEF
  4979                           postinc0	equ	0xFEE
  4980                           postdec0	equ	0xFED
  4981                           preinc0	equ	0xFEC
  4982                           plusw0	equ	0xFEB
  4983                           fsr0h	equ	0xFEA
  4984                           fsr0l	equ	0xFE9
  4985                           wreg	equ	0xFE8
  4986                           indf1	equ	0xFE7
  4987                           postinc1	equ	0xFE6
  4988                           postdec1	equ	0xFE5
  4989                           preinc1	equ	0xFE4
  4990                           plusw1	equ	0xFE3
  4991                           fsr1h	equ	0xFE2
  4992                           fsr1l	equ	0xFE1
  4993                           bsr	equ	0xFE0
  4994                           indf2	equ	0xFDF
  4995                           postinc2	equ	0xFDE
  4996                           postdec2	equ	0xFDD
  4997                           preinc2	equ	0xFDC
  4998                           plusw2	equ	0xFDB
  4999                           fsr2h	equ	0xFDA
  5000                           fsr2l	equ	0xFD9
  5001                           status	equ	0xFD8

Data Sizes:
    Strings     90
    Constant    0
    Data        364
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     31     102
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    strcmp@r	PTR const unsigned char  size(2) Largest target is 300
		 -> listeUsager.nip(BIGRAM[5]), listeUsager(BIGRAM[300]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 5
		 -> gereTouche@nip(BANK0[5]), 

    memset@dest	PTR void  size(2) Largest target is 5
		 -> gereTouche@nip(BANK0[5]), 

    memset@s	PTR unsigned char  size(2) Largest target is 5
		 -> gereTouche@nip(BANK0[5]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 1
		 -> gereTouche@touche(BANK0[1]), 

    verifNip@no	PTR unsigned char  size(2) Largest target is 5
		 -> gereTouche@nip(BANK0[5]), 

    sp__memset	PTR void  size(2) Largest target is 5
		 -> gereTouche@nip(BANK0[5]), 

    gereTouche@usager	PTR int  size(2) Largest target is 2
		 -> main@noUsagerCourant(BANK0[2]), 

    gereTouche@etat	PTR unsigned int  size(2) Largest target is 2
		 -> main@etatCourant(BANK0[2]), 

    lcd_putMessage@chaine	PTR const unsigned char  size(3) Largest target is 300
		 -> STR_10(CODE[8]), STR_9(CODE[13]), STR_8(CODE[8]), STR_7(CODE[9]), 
		 -> STR_6(CODE[8]), STR_5(CODE[17]), STR_4(CODE[8]), STR_3(CODE[27]), 
		 -> STR_2(CODE[8]), STR_1(CODE[16]), listeUsager.nom(BIGRAM[20]), listeUsager(BIGRAM[300]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_affiche
    _main->_gereTouche
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _gereTouche->_verifNip
    _verifNip->_strcmp
    _strcmp->___wmul
    _atoi->_isspace
    _affiche->_lcd_putMessage
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_wrData->_lcd_busy
    _lcd_gotoXY->_lcd_wrCom
    _lcd_effaceAffichage->_lcd_wrCom
    _lcd_curseurHome->_lcd_wrCom
    _lcd_wrCom->_lcd_busy

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   11191
                                             25 BANK0      6     6      0
                            _affiche
                           _flashDEL
                         _gereTouche
                      _initRegistres
                         _init_serie
                              _kbhit
                    _lcd_curseurHome
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     720
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      60
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     510
                                              6 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (1) _init_serie                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initRegistres                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gereTouche                                           7     3      4    6584
                                             18 BANK0      7     3      4
                             ___wmul
                               _atoi
                              _getch
                              _kbhit
                      _lcd_ecritChar
                             _memset
                           _verifNip
 ---------------------------------------------------------------------------------
 (2) _verifNip                                             6     0      6    1347
                                             12 BANK0      6     0      6
                             ___wmul
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4     264
                                              6 BANK0      6     2      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1711
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (1) _kbhit                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getch                                                1     1      0      15
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                10     8      2    1536
                                              7 BANK0     10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (3) _isspace                                              7     5      2     207
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              6     4      2     161
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _flashDEL                                             4     4      0      30
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _affiche                                              6     2      4    3509
                                             19 BANK0      6     2      4
                             ___wmul
                    _lcd_curseurHome
                _lcd_effaceAffichage
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (2) _lcd_putMessage                                       9     6      3    1226
                                             10 BANK0      9     6      3
                             ___wmul (ARG)
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        4     4      0     300
                                              6 BANK0      4     4      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     120
                                              4 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoXY                                           4     3      1    1020
                                              6 BANK0      4     3      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_effaceAffichage                                  0     0      0     150
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     150
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_wrCom                                            2     2      0     150
                                              4 BANK0      2     2      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _lcd_ecrireDonnees                                    2     2      0      60
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             4     4      0      30
                                              0 BANK0      4     4      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (4) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     767
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _affiche
     ___wmul
     _lcd_curseurHome
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_effaceAffichage
       _lcd_wrCom
     _lcd_gotoXY
       _lcd_wrCom
     _lcd_putMessage
       ___wmul (ARG)
       _lcd_ecritChar (ARG)
         _lcd_wrCom
         _lcd_wrData
           _lcd_busy
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _flashDEL
   _gereTouche
     ___wmul
     _atoi
       ___wmul
       _isdigit
       _isspace
     _getch
     _kbhit
     _lcd_ecritChar
     _memset
     _verifNip
       ___wmul
       _strcmp
         ___wmul (ARG)
   _initRegistres
   _init_serie
   _kbhit
   _lcd_curseurHome
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
       _lcd_wrCom
       _lcd_wrData
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0     12C      27       19.8%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      17        0.0%
BANK4              100      0       0       7        0.0%
BITBANK3           100      0       0      16        0.0%
BANK3              100      0       0       6        0.0%
BITBANK2           100      0       0      15        0.0%
BANK2              100      0       0       5        0.0%
BITBANK1           100      0       0      14        0.0%
BANK1              100      0       0       4        0.0%
BITBANK5            EF      0       0      18        0.0%
BANK5               EF      0       0       8        0.0%
BITBANK0            A0      0       0      13        0.0%
BANK0               A0     1F      66       3       63.7%
BITBIGSFRl          80      0       0      26        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITBIGSFR_1h        12      0       0      20        0.0%
BITBIGSFR_1lh       11      0       0      21        0.0%
BITBIGSFRhl          E      0       0      25        0.0%
BITBIGSFR_1lllh      C      0       0      22        0.0%
BITBIGSFR_5          C      0       0       9        0.0%
BITBIGSFRhhh         6      0       0      24        0.0%
BITBIGSFR_2          6      0       0      19        0.0%
BITBIGSFR_4          3      0       0      10        0.0%
BITBIGSFR_3          3      0       0      11        0.0%
BITBIGSFR_1llll      1      0       0      23        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      66      12        0.0%
DATA                 0      0     192      28        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Feb 02 14:15:49 2023

                                                           l30 17BC  
                                                           l23 1ACA  
                                                           l31 17C4  
                                                           l40 18EC  
                                                           l26 174E  
                                                           l43 1832  
                                                           l52 1AB4  
                                                           l29 1758  
                                                           l37 14CC  
                                                           l46 19F8  
                                                           l49 1AA8  
                                                           l67 1562  
                                                           l84 1228  
                                                           l78 165C  
                                                           l97 12E2  
                                                           u10 17BA  
                                                           u11 17B4  
                                                           u20 148C  
                                                           u21 1486  
                                                           u30 14A4  
                                                           u31 149E  
                                          ___wmul@multiplicand 00A2  
                                                          l100 1AC0  
                                                          l201 13C4  
                                                          l203 142E  
                                                          l214 1A96  
                                                          l231 1A80  
                                                          l240 1A4E  
                                                          l242 1A62  
                                                          l243 1A6A  
                                                          l262 1A24  
                                                          l167 0AC2  
                                                          l184 0AC2  
                                                          l259 1A46  
                                                          l179 0ABC  
                                                          l188 16D4  
                                                          l198 0CF4  
                                                          l961 1986  
                                                          l955 102C  
                                                          l958 1036  
                                                          l990 15E4  
                                                          l992 1AC6  
                                                          l976 0EBA  
                                                          l969 1894  
                                                          l996 16E0  
                                                          l998 1754  
                                                          u100 124E  
                                                          u101 1248  
                                                          u110 1270  
                                                          u111 126A  
                                                          u120 12C2  
                                                          u121 12BC  
                                                          u130 12DC  
                                                          u131 12D6  
                                                          u300 13BE  
                                                          u301 13B8  
                                                          u310 142E  
                                                          u311 1428  
                                                          u170 1A3A  
                                                          u171 1A34  
                                                          u180 1A60  
                                                          u181 1A5A  
                                                          u600 11C0  
                                                          u610 1214  
                                                          u620 1226  
                                                          u700 0DEA  
                                                          u540 15A0  
                                                          u621 1220  
                                                          u701 0DE4  
                                                          u541 159A  
                                                          u630 0EFC  
                                                          u710 0E3E  
                                                          u550 15BC  
                                                          u607 11B6  
                                                          u631 0EF6  
                                                          u711 0E38  
                                                          u551 15B6  
                                                          u560 1854  
                                                          u640 0F34  
                                                          u720 0EB0  
                                                          u800 07E8  
                                                          u617 120A  
                                                          u561 184E  
                                                          u641 0F2E  
                                                          u721 0EAA  
                                                          u801 07E2  
                                                          u570 1886  
                                                          u650 0FF8  
                                                          u810 0806  
                                                          u730 0674  
                                                          u571 1880  
                                                          u651 0FF2  
                                                          u811 0800  
                                                          u731 066E  
                                                          u580 197C  
                                                          u660 100E  
                                                          u820 083A  
                                                          u740 0692  
                                                          u900 132E  
                                                          u581 1974  
                                                          u661 1008  
                                                          u821 0834  
                                                          u741 068C  
                                                          u901 1328  
                                                          u590 1980  
                                                          u670 16C8  
                                                          u830 0856  
                                                          u750 06A8  
                                                          u910 136C  
                                                          u671 16C2  
                                                          u831 0850  
                                                          u751 06A2  
                                                          u911 1366  
                                                          u680 0D1A  
                                                          u840 0882  
                                                          u760 06C6  
                                                          u681 0D14  
                                                          u841 087C  
                                                          u761 06C0  
                                                          u690 0D6A  
                                                          u850 08CE  
                                                          u770 06EA  
                                                          u691 0D64  
                                                          u851 08C8  
                                                          u771 06E4  
                                                          u860 0908  
                                                          u780 078A  
                                                          u861 0902  
                                                          u781 0784  
                                                          u870 09DA  
                                                          u790 07AC  
                                                          u871 09D4  
                                                          u791 07A6  
                                                          u927 17D6  
                                                          u880 09FA  
                                                          u881 09F4  
                                                          u937 17F2  
                                                          u890 0A6A  
                                                          u891 0A64  
                                                          u947 1804  
                                                          u957 1816  
                                                          u967 1828  
                                                          u977 13D6  
                                                          u987 13F8  
                                                          u997 1472  
                                                  lcd_gotoXY@x 00A9  
                                                          wreg 000FE8  
                                                  lcd_gotoXY@y 00A6  
                                                         l1000 175E  
                                                         l1010 179E  
                                                         l1002 1782  
                                                         l1012 17A0  
                                                         l1004 1784  
                                                         l1020 1ABA  
                                                         l1014 17A8  
                                                         l1006 178C  
                                                         l1030 144C  
                                                         l1022 143A  
                                                         l1016 17BE  
                                                         l1008 178E  
                                                         l1040 146C  
                                                         l1032 144E  
                                                         l1024 143E  
                                                         l1050 14BA  
                                                         l1042 1470  
                                                         l1034 1458  
                                                         l1026 1442  
                                                         l1052 14C0  
                                                         l1044 1478  
                                                         l1036 145C  
                                                         l1028 144A  
                                                         l1060 18A2  
                                                         l1140 17CE  
                                                         l1054 14C8  
                                                         l1046 148E  
                                                         l1038 1464  
                                                         l1070 18BC  
                                                         l1062 18A6  
                                                         l2022 0F6C  
                                                         l1230 1A42  
                                                         l1150 17F0  
                                                         l1142 17E2  
                                                         l1048 14A4  
                                                         l1080 18DC  
                                                         l1072 18C0  
                                                         l1064 18AE  
                                                         l2024 0CC4  
                                                         l1160 1810  
                                                         l1152 17F8  
                                                         l1144 17E4  
                                                         l1082 18E0  
                                                         l1074 18C8  
                                                         l1066 18B0  
                                                         l1058 189E  
                                                         l2026 163C  
                                                         l1090 15FE  
                                                         l1234 1A4E  
                                                         l1226 1A2A  
                                                         l1170 182E  
                                                         l1162 1814  
                                                         l1154 17FE  
                                                         l1146 17E6  
                                                         l1138 17CA  
                                                         l1330 19D2  
                                                         l2028 153A  
                                                         l1076 18D0  
                                                         l1068 18B2  
                                                         l1092 160A  
                                                         l1236 1A66  
                                                         l1228 1A3C  
                                                         l1180 1254  
                                                         l1172 122E  
                                                         l1164 181C  
                                                         l1156 1802  
                                                         l1148 17EC  
                                                         l1340 19EE  
                                                         l1332 19D6  
                                                         l1086 1AAE  
                                                         l1078 18D4  
                                                         l1094 1616  
                                                         l1190 12AE  
                                                         l1182 125C  
                                                         l1174 1234  
                                                         l1166 1822  
                                                         l1158 180A  
                                                         l1342 19F4  
                                                         l1334 19DC  
                                                         l1088 15EE  
                                                         l1352 1A86  
                                                         l1360 1A7A  
                                                         l1192 12C2  
                                                         l1176 123A  
                                                         l1168 1826  
                                                         l1336 19E2  
                                                         l1328 19CC  
                                                         l1098 1622  
                                                         l1362 1A7C  
                                                         l1354 1A70  
                                                         l1194 12C8  
                                                         l1186 1276  
                                                         l1338 19E8  
                                                         l1372 13CA  
                                                         l1700 0EDE  
                                                         l1364 1A7E  
                                                         l1356 1A74  
                                                         l1188 12AA  
                                                         l1196 12DC  
                                                         l1198 1A9C  
                                                         l1374 13E8  
                                                         l1366 1394  
                                                         l1710 0F84  
                                                         l1702 0EFE  
                                                         l1358 1A78  
                                                         l1376 13EA  
                                                         l1368 139E  
                                                         l1720 1010  
                                                         l1712 0FBC  
                                                         l1704 0F3A  
                                                         l1640 15A2  
                                                         l1800 076A  
                                                         l1378 140A  
                                                         l1706 0F44  
                                                         l1642 15BC  
                                                         l1634 156A  
                                                         l1730 16CA  
                                                         l1802 078C  
                                                         l1810 07D0  
                                                         l1900 0C5E  
                                                         l1660 188C  
                                                         l1652 1836  
                                                         l1716 0FC0  
                                                         l1708 0F4E  
                                                         l1740 0D1C  
                                                         l1636 156E  
                                                         l1820 0858  
                                                         l1812 07EA  
                                                         l1804 07AE  
                                                         l1646 19FE  
                                                         l1670 14DA  
                                                         l1902 0C68  
                                                         l1910 0CAA  
                                                         l1654 183E  
                                                         l1718 0FFA  
                                                         l1638 157A  
                                                         l1734 16D0  
                                                         l1726 1664  
                                                         l1830 090A  
                                                         l1822 0884  
                                                         l1814 0808  
                                                         l1806 07B4  
                                                         l1648 1A1C  
                                                         l1672 14EA  
                                                         l1680 1520  
                                                         l1904 0C80  
                                                         l1664 1946  
                                                         l1656 1856  
                                                         l1760 0DF8  
                                                         l1752 0D78  
                                                         l1744 0D28  
                                                         l1728 167C  
                                                         l1840 0992  
                                                         l1832 091E  
                                                         l1824 0898  
                                                         l1816 081C  
                                                         l1808 07C6  
                                                         l1920 12FC  
                                                         l1674 14FC  
                                                         l1690 11C4  
                                                         l1906 0CA4  
                                                         l1658 1888  
                                                         l1770 0E82  
                                                         l1762 0E26  
                                                         l1754 0DD2  
                                                         l1746 0D36  
                                                         l1738 0CFC  
                                                         l1850 0A1C  
                                                         l1842 09B4  
                                                         l1834 0940  
                                                         l1818 083C  
                                                         l1826 08AE  
                                                         l1930 1312  
                                                         l1922 1302  
                                                         l1676 150E  
                                                         l1668 14D6  
                                                         l1692 11C8  
                                                         l1772 0E90  
                                                         l1764 0E40  
                                                         l1756 0DEC  
                                                         l1748 0D6C  
                                                         l1860 0AAE  
                                                         l1852 0A3E  
                                                         l1836 0962  
                                                         l1828 08D0  
                                                         l1844 09C2  
                                                         l1940 1382  
                                                         l1932 1316  
                                                         l1924 1306  
                                                         l1686 116A  
                                                         l1870 0B18  
                                                         l1862 0ACA  
                                                         l1694 0EC2  
                                                         l1774 0E96  
                                                         l1854 0A4C  
                                                         l1846 09DC  
                                                         l1838 0970  
                                                         l1790 06AA  
                                                         l1782 065E  
                                                         l1934 1330  
                                                         l1926 130A  
                                                         l1918 12E6  
                                                         l1688 1174  
                                                         l1880 0B78  
                                                         l1872 0B22  
                                                         l1864 0ACE  
                                                         l1696 0ED8  
                                                         l1776 0E9A  
                                                         l1768 0E4C  
                                                         l1856 0A6C  
                                                         l1848 09FC  
                                                         l1792 06C8  
                                                         l1784 0676  
                                                         l1936 1348  
                                                         l1928 130E  
                                                         l1890 0BE6  
                                                         l1882 0B90  
                                                         l1874 0B3A  
                                                         l1866 0AD8  
                                                         l1778 0EB2  
                                                         l1858 0A8C  
                                                         l1794 06D0  
                                                         l1786 067E  
                                                         l1938 136E  
                                                         l1892 0C28  
                                                         l1884 0BB4  
                                                         l1876 0B5E  
                                                         l1868 0AF0  
                                                         l1796 06EC  
                                                         l1788 0694  
                                                         l1894 0C34  
                                                         l1886 0BC4  
                                                         l1878 0B6E  
                                                         l1798 0710  
                                                         l1896 0C4C  
                                                         l1888 0BCE  
                                                         l1898 0C58  
                                                         STR_1 062D  
                                                         STR_2 0653  
                                                         STR_3 0601  
                                                         STR_4 0653  
                                                         STR_5 061C  
                                                         STR_6 0653  
                                                         STR_7 064A  
                                                         STR_8 0653  
                                                         STR_9 063D  
                                                         u1007 14AE  
                                                         _RCIF 007CF5  
                                                         _atoi 0EC0  
                                                         _main 12E6  
                                                         fsr1h 000FE2  
                                                         fsr2h 000FDA  
                                                         indf1 000FE7  
                                                         indf2 000FDF  
                                                         fsr1l 000FE1  
                                                         fsr2l 000FD9  
                                                         prodh 000FF4  
                                                         prodl 000FF3  
                                                         start 0002  
                                              ?_lcd_putMessage 00AA  
                                                 ___param_bank 000000  
                                                verifNip@index 00B0  
                                              ??_lcd_ecritChar 00A6  
                                                        ?_atoi 00A7  
                                                        ?_main 00A0  
                                                        STR_10 0653  
                                                        _RCREG 000FAE  
                                              __end_of_affiche 0CFA  
                                                        _SPBRG 000FAF  
                                                        _PORTA 000F80  
                                                        _TRISA 000F92  
                                                        _TRISB 000F93  
                                                        _TRISC 000F94  
                                                        _TRISD 000F95  
                                                        _TXREG 000FAD  
                                              ??_lcd_initCGRam 00A6  
                                                        _getch 1A4C  
                                                        _kbhit 1A28  
                                              __end_of_isdigit 198A  
                                                        atoi@n 00AF  
                                                        atoi@s 00A7  
                                              __end_of_isspace 1898  
                                                        tablat 000FF5  
                                                        plusw2 000FDB  
                                                        status 000FD8  
                                              __initialization 18F0  
                                                 __end_of_atoi 103C  
                                                 __end_of_main 1392  
                                         lcd_putMessage@chaine 00AA  
                                                       ??_atoi 00A9  
                                                       ??_main 00B9  
                                                __activetblptr 000003  
                                               verifNip@usager 00AC  
                                                       ?_getch 00A0  
                                                       _ADCON1 000FC1  
                                                       ?_kbhit 00A0  
                                             __end_of_flashDEL 1434  
                                               lcd_initCGRam@i 00A8  
                                               lcd_initCGRam@j 00A9  
                                             __end_of_lcd_busy 17C8  
                                             __end_of_lcd_init 19FC  
                                                       ___wmul 19FC  
                                                    ??_affiche 00B7  
                                                       _memset 0CFA  
                                                       clear_0 193A  
                                                       isa$std 000001  
                                                       getch@c 00A0  
                                                       _strcmp 1568  
                                                 __pdataBIGRAM 00C6  
                                                    ??_isdigit 00A2  
                                          main@noUsagerCourant 00BB  
                                                 __mediumconst 0000  
                                                    ??_isspace 00A2  
                                             __end_of_verifNip 16DA  
                                                       tblptrh 000FF7  
                                                       tblptrl 000FF6  
                                                       tblptru 000FF8  
                                                _initRegistres 1A84  
                                            _lcd_resetSequence 17C8  
                                                   __accesstop 0060  
                                      __end_of__initialization 1940  
                                          _lcd_strobeEnableBit 1AB8  
                                           ?_lcd_resetSequence 00A0  
                                                ___rparam_used 000000  
                                          _lcd_effaceAffichage 1A9A  
                                                 __pidataBANK0 198A  
                                          ??_lcd_resetSequence 00A2  
                                                __end_of_getch 1A6E  
                                                __end_of_kbhit 1A4C  
                                         ?_lcd_strobeEnableBit 00A0  
                                         ?_lcd_effaceAffichage 00A0  
                                                      ??_getch 00A0  
                                                      ??_kbhit 00A0  
                                               ?_initRegistres 00A0  
                                    __end_of_lcd_resetSequence 1836  
                                            _lcd_ecrireDonnees 16DA  
                                                   __pbssBANK0 00BF  
                                             ??_lcd_putMessage 00AD  
                                           ?_lcd_ecrireDonnees 00A0  
                                          ??_lcd_ecrireDonnees 00A0  
                                                      ?___wmul 00A0  
                                                      ?_memset 00A0  
                                        ??_lcd_strobeEnableBit 00A0  
                                                      ?_strcmp 00A6  
                                                   _gereTouche 065C  
                                                   _lcd_gotoXY 14D0  
                                        ??_lcd_effaceAffichage 00A6  
                                                   _lcd_wrData 1898  
                                    __end_of_lcd_ecrireDonnees 1752  
                                                    ?_flashDEL 00A0  
                                                    ?_lcd_busy 00A0  
                                                    ?_lcd_init 00A0  
                                      lcd_ecrireDonnees@donnee 00A1  
                                                      __Hparam 0000  
                                                      __Lparam 0000  
                                            __end_of_lcd_wrCom 14D0  
                                                    ?_verifNip 00AC  
                                                 __psmallconst 0600  
                                                      _affiche 0AC8  
                                                      __pcinit 18F0  
                                                   _init_serie 1A6E  
                                                      __ramtop 0600  
                                                      __ptext0 12E6  
                                                      __ptext1 19CA  
                                                      __ptext2 17C8  
                                                      __ptext3 122C  
                                                      __ptext4 1A6E  
                                                      __ptext5 1A84  
                                                      __ptext6 065C  
                                                      __ptext7 1662  
                                                      __ptext8 1568  
                                                      __ptext9 0CFA  
                                        __end_of_lcd_ecritChar 1662  
                                              lcd_busy@adresse 00A2  
                                                      _isdigit 1946  
                                                      _isspace 1836  
                                              ??_initRegistres 00A0  
                                             lcd_ecritChar@car 00A8  
                                                      atoi@neg 00AD  
                                                   ??_flashDEL 00A0  
                                                   ??_lcd_busy 00A0  
                                                   ??_lcd_init 00AA  
                                         end_of_initialization 1940  
                                        __end_of_lcd_initCGRam 12E6  
                                                      memset@c 00A2  
                                                      memset@k 00A8  
                                                      memset@n 00A4  
                                                      memset@s 00AA  
                                            ??_lcd_lireDonnees 00A0  
                                                    _RCSTAbits 000FAB  
                                                      postdec1 000FE5  
                                                      postdec2 000FDD  
                                                   ??_verifNip 00B2  
                                                      postinc0 000FEE  
                                                      postinc1 000FE6  
                                                      postinc2 000FDE  
                                            ??_lcd_curseurHome 00A6  
                                                      strcmp@l 00A6  
                                                      strcmp@r 00A8  
                                          lcd_ecritChar@posRam 00A9  
                                                    _PORTAbits 000F80  
                                                    _PORTBbits 000F81  
                                                    _PORTCbits 000F82  
                                                    _PORTDbits 000F83  
                                                  ?_gereTouche 00B2  
                                                  ?_lcd_gotoXY 00A6  
                                                    _TRISCbits 000F94  
                                                  ?_lcd_wrData 00A0  
                                                    _TXSTAbits 000FAC  
                                                __pidataBIGRAM 103C  
                                               __end_of___wmul 1A28  
                                                  ?_init_serie 00A0  
                                               __end_of_memset 0EC0  
                                               __end_of_strcmp 15E8  
                                          start_initialization 18F0  
                                                     ??___wmul 00A4  
                                                  __pdataBANK0 0060  
                                                     ??_memset 00A6  
                                                   memset@dest 00A0  
                                                     ??_strcmp 00AA  
                                                __pcstackBANK0 00A0  
                                  __end_of_lcd_strobeEnableBit 1AC4  
                                              main@etatAffiche 00B9  
                                                     ?_affiche 00B3  
                                  __end_of_lcd_effaceAffichage 1AAC  
                                                    _lcd_wrCom 1434  
                                              main@etatCourant 00BD  
                                                  __smallconst 0600  
                                                     ?_isdigit 00A0  
                                                     ?_isspace 00A0  
                                              _lcd_lireDonnees 1AC4  
                                          lcd_wrData@caractere 00A4  
                                              _lcd_curseurHome 1AAC  
                                               ___wmul@product 00A4  
                                                  affiche@etat 00B3  
                                                    flashDEL@i 00A2  
                                                   ?_lcd_wrCom 00A0  
                                            ___wmul@multiplier 00A0  
                                                 ??_gereTouche 00B6  
                                                   verifNip@no 00AE  
                                                 ??_lcd_gotoXY 00A7  
                                                 ??_lcd_wrData 00A4  
                                                 _isspace$1206 00A6  
                                        __end_of_initRegistres 1A9A  
                                            lcd_wrCom@commande 00A5  
                                                    copy_data0 1904  
                                                    copy_data1 1928  
                                           gereTouche@indexNIP 00BF  
                                                     __Hparam0 0000  
                                                     __Lparam0 0000  
                                           __end_of_gereTouche 0AC8  
                                           __end_of_lcd_gotoXY 1568  
                                           __end_of_lcd_wrData 18F0  
                                                 ??_init_serie 00A0  
                                              lcd_putMessage@j 00B2  
                                      __end_of_lcd_lireDonnees 1ACE  
                                                     _matCGRAM 0060  
                                      __end_of_lcd_curseurHome 1AB8  
                                                     __ptext10 1A28  
                                                     __ptext11 1A4C  
                                                     __ptext20 14D0  
                                                     __ptext12 0EC0  
                                                     __ptext21 1A9A  
                                                     __ptext13 1836  
                                                     __ptext22 1AAC  
                                                     __ptext14 1946  
                                                     _flashDEL 1392  
                                                     __ptext23 1434  
                                                     __ptext15 1392  
                                                     __ptext24 1AB8  
                                                     __ptext16 0AC8  
                                                     __ptext25 16DA  
                                                     __ptext17 1168  
                                                     __ptext26 1752  
                                                     __ptext18 15E8  
                                                     __ptext27 1AC4  
                                                     __ptext19 1898  
                                                     __ptext28 19FC  
                                                     _lcd_busy 1752  
                                                     _lcd_init 19CA  
                                           __end_of_init_serie 1A84  
                                                     isa$xinst 000000  
                                                     _verifNip 1662  
                                                  _listeUsager 00C6  
                                                  ??_lcd_wrCom 00A4  
                                                _lcd_ecritChar 15E8  
                                                     isdigit@c 00A0  
                                                _lcd_initCGRam 122C  
                                                     isspace@c 00A0  
                                               _lcd_putMessage 1168  
                                                affiche@usager 00B5  
                                             gereTouche@usager 00B4  
                                             gereTouche@touche 00B8  
                                               ?_lcd_ecritChar 00A0  
                                             ?_lcd_lireDonnees 00A0  
                                             ?_lcd_curseurHome 00A0  
                                               ?_lcd_initCGRam 00A0  
                                               gereTouche@etat 00B2  
                                       __end_of_lcd_putMessage 122C  
                                                gereTouche@nip 00C1  
